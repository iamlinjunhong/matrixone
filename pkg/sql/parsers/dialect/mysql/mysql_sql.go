// Code generated by goyacc -o mysql_sql.go -c mysql mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
)

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const DISTINCTROW = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const SUBQUERY_AS_EXPR = 57395
const ID = 57396
const AT_ID = 57397
const AT_AT_ID = 57398
const STRING = 57399
const VALUE_ARG = 57400
const LIST_ARG = 57401
const COMMENT = 57402
const COMMENT_KEYWORD = 57403
const INTEGRAL = 57404
const HEX = 57405
const HEXNUM = 57406
const BIT_LITERAL = 57407
const FLOAT = 57408
const NULL = 57409
const TRUE = 57410
const FALSE = 57411
const EMPTY_FROM_CLAUSE = 57412
const LOWER_THAN_CHARSET = 57413
const CHARSET = 57414
const UNIQUE = 57415
const KEY = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const ASSIGNMENT = 57435
const SHIFT_LEFT = 57436
const SHIFT_RIGHT = 57437
const DIV = 57438
const MOD = 57439
const UNARY = 57440
const COLLATE = 57441
const BINARY = 57442
const UNDERSCORE_BINARY = 57443
const INTERVAL = 57444
const BEGIN = 57445
const START = 57446
const TRANSACTION = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const WORK = 57450
const CONSISTENT = 57451
const SNAPSHOT = 57452
const CHAIN = 57453
const NO = 57454
const RELEASE = 57455
const BIT = 57456
const TINYINT = 57457
const SMALLINT = 57458
const MEDIUMINT = 57459
const INT = 57460
const INTEGER = 57461
const BIGINT = 57462
const INTNUM = 57463
const REAL = 57464
const DOUBLE = 57465
const FLOAT_TYPE = 57466
const DECIMAL = 57467
const NUMERIC = 57468
const TIME = 57469
const TIMESTAMP = 57470
const DATETIME = 57471
const YEAR = 57472
const CHAR = 57473
const VARCHAR = 57474
const BOOL = 57475
const CHARACTER = 57476
const VARBINARY = 57477
const NCHAR = 57478
const TEXT = 57479
const TINYTEXT = 57480
const MEDIUMTEXT = 57481
const LONGTEXT = 57482
const BLOB = 57483
const TINYBLOB = 57484
const MEDIUMBLOB = 57485
const LONGBLOB = 57486
const JSON = 57487
const ENUM = 57488
const GEOMETRY = 57489
const POINT = 57490
const LINESTRING = 57491
const POLYGON = 57492
const GEOMETRYCOLLECTION = 57493
const MULTIPOINT = 57494
const MULTILINESTRING = 57495
const MULTIPOLYGON = 57496
const INT1 = 57497
const INT2 = 57498
const INT3 = 57499
const INT4 = 57500
const INT8 = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const SCHEMA = 57508
const TABLE = 57509
const INDEX = 57510
const VIEW = 57511
const TO = 57512
const IGNORE = 57513
const IF = 57514
const PRIMARY = 57515
const COLUMN = 57516
const CONSTRAINT = 57517
const SPATIAL = 57518
const FULLTEXT = 57519
const FOREIGN = 57520
const KEY_BLOCK_SIZE = 57521
const SHOW = 57522
const DESCRIBE = 57523
const EXPLAIN = 57524
const DATE = 57525
const ESCAPE = 57526
const REPAIR = 57527
const OPTIMIZE = 57528
const TRUNCATE = 57529
const MAXVALUE = 57530
const PARTITION = 57531
const REORGANIZE = 57532
const LESS = 57533
const THAN = 57534
const PROCEDURE = 57535
const TRIGGER = 57536
const STATUS = 57537
const VARIABLES = 57538
const ROLE = 57539
const PROXY = 57540
const AVG_ROW_LENGTH = 57541
const STORAGE = 57542
const DISK = 57543
const MEMORY = 57544
const CHECKSUM = 57545
const COMPRESSION = 57546
const DATA = 57547
const DIRECTORY = 57548
const DELAY_KEY_WRITE = 57549
const ENCRYPTION = 57550
const ENGINE = 57551
const MAX_ROWS = 57552
const MIN_ROWS = 57553
const PACK_KEYS = 57554
const ROW_FORMAT = 57555
const STATS_AUTO_RECALC = 57556
const STATS_PERSISTENT = 57557
const STATS_SAMPLE_PAGES = 57558
const DYNAMIC = 57559
const COMPRESSED = 57560
const REDUNDANT = 57561
const COMPACT = 57562
const FIXED = 57563
const COLUMN_FORMAT = 57564
const AUTO_RANDOM = 57565
const RESTRICT = 57566
const CASCADE = 57567
const ACTION = 57568
const PARTIAL = 57569
const SIMPLE = 57570
const CHECK = 57571
const ENFORCED = 57572
const RANGE = 57573
const LIST = 57574
const ALGORITHM = 57575
const LINEAR = 57576
const PARTITIONS = 57577
const SUBPARTITION = 57578
const SUBPARTITIONS = 57579
const ROW = 57580
const PARSER = 57581
const VISIBLE = 57582
const INVISIBLE = 57583
const BTREE = 57584
const HASH = 57585
const RTREE = 57586
const BSI = 57587
const EXPIRE = 57588
const ACCOUNT = 57589
const UNLOCK = 57590
const DAY = 57591
const NEVER = 57592
const SECOND = 57593
const ASCII = 57594
const COALESCE = 57595
const COLLATION = 57596
const HOUR = 57597
const MICROSECOND = 57598
const MINUTE = 57599
const MONTH = 57600
const QUARTER = 57601
const REPEAT = 57602
const REVERSE = 57603
const ROW_COUNT = 57604
const WEEK = 57605
const REVOKE = 57606
const FUNCTION = 57607
const PRIVILEGES = 57608
const TABLESPACE = 57609
const EXECUTE = 57610
const SUPER = 57611
const GRANT = 57612
const OPTION = 57613
const REFERENCES = 57614
const REPLICATION = 57615
const SLAVE = 57616
const CLIENT = 57617
const USAGE = 57618
const RELOAD = 57619
const FILE = 57620
const TEMPORARY = 57621
const ROUTINE = 57622
const EVENT = 57623
const SHUTDOWN = 57624
const NULLX = 57625
const AUTO_INCREMENT = 57626
const APPROXNUM = 57627
const SIGNED = 57628
const UNSIGNED = 57629
const ZEROFILL = 57630
const USER = 57631
const IDENTIFIED = 57632
const CIPHER = 57633
const ISSUER = 57634
const X509 = 57635
const SUBJECT = 57636
const SAN = 57637
const REQUIRE = 57638
const SSL = 57639
const NONE = 57640
const PASSWORD = 57641
const MAX_QUERIES_PER_HOUR = 57642
const MAX_UPDATES_PER_HOUR = 57643
const MAX_CONNECTIONS_PER_HOUR = 57644
const MAX_USER_CONNECTIONS = 57645
const FORMAT = 57646
const CONNECTION = 57647
const LOAD = 57648
const INFILE = 57649
const TERMINATED = 57650
const OPTIONALLY = 57651
const ENCLOSED = 57652
const ESCAPED = 57653
const STARTING = 57654
const LINES = 57655
const DATABASES = 57656
const TABLES = 57657
const EXTENDED = 57658
const FULL = 57659
const PROCESSLIST = 57660
const FIELDS = 57661
const COLUMNS = 57662
const OPEN = 57663
const ERRORS = 57664
const WARNINGS = 57665
const INDEXES = 57666
const NAMES = 57667
const GLOBAL = 57668
const SESSION = 57669
const ISOLATION = 57670
const LEVEL = 57671
const READ = 57672
const WRITE = 57673
const ONLY = 57674
const REPEATABLE = 57675
const COMMITTED = 57676
const UNCOMMITTED = 57677
const SERIALIZABLE = 57678
const LOCAL = 57679
const EXCEPT = 57680
const CURRENT_TIMESTAMP = 57681
const DATABASE = 57682
const CURRENT_TIME = 57683
const LOCALTIME = 57684
const LOCALTIMESTAMP = 57685
const UTC_DATE = 57686
const UTC_TIME = 57687
const UTC_TIMESTAMP = 57688
const REPLACE = 57689
const CONVERT = 57690
const SEPARATOR = 57691
const CURRENT_DATE = 57692
const CURRENT_USER = 57693
const CURRENT_ROLE = 57694
const MATCH = 57695
const AGAINST = 57696
const BOOLEAN = 57697
const LANGUAGE = 57698
const WITH = 57699
const QUERY = 57700
const EXPANSION = 57701
const ADDDATE = 57702
const BIT_AND = 57703
const BIT_OR = 57704
const BIT_XOR = 57705
const CAST = 57706
const COUNT = 57707
const APPROX_COUNT_DISTINCT = 57708
const APPROX_PERCENTILE = 57709
const CURDATE = 57710
const CURTIME = 57711
const DATE_ADD = 57712
const DATE_SUB = 57713
const EXTRACT = 57714
const GROUP_CONCAT = 57715
const MAX = 57716
const MID = 57717
const MIN = 57718
const NOW = 57719
const POSITION = 57720
const SESSION_USER = 57721
const STD = 57722
const STDDEV = 57723
const STDDEV_POP = 57724
const STDDEV_SAMP = 57725
const SUBDATE = 57726
const SUBSTR = 57727
const SUBSTRING = 57728
const SUM = 57729
const SYSDATE = 57730
const SYSTEM_USER = 57731
const TRANSLATE = 57732
const TRIM = 57733
const VARIANCE = 57734
const VAR_POP = 57735
const VAR_SAMP = 57736
const AVG = 57737
const UNUSED = 57738

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"HEXNUM",
	"BIT_LITERAL",
	"FLOAT",
	"NULL",
	"TRUE",
	"FALSE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"ROW",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EXCEPT",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:5585

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	17, 317,
	-2, 308,
	-1, 54,
	185, 454,
	-2, 490,
	-1, 63,
	212, 233,
	213, 233,
	-2, 253,
	-1, 304,
	58, 1164,
	415, 1164,
	-2, 91,
	-1, 323,
	58, 588,
	415, 588,
	-2, 452,
	-1, 324,
	58, 445,
	415, 445,
	-2, 453,
	-1, 330,
	17, 318,
	-2, 310,
	-1, 560,
	54, 707,
	-2, 1201,
	-1, 561,
	54, 708,
	-2, 1202,
	-1, 562,
	54, 709,
	-2, 1203,
	-1, 569,
	54, 766,
	-2, 1169,
	-1, 570,
	54, 768,
	-2, 1180,
	-1, 707,
	1, 480,
	414, 480,
	-2, 487,
	-1, 817,
	17, 317,
	-2, 645,
	-1, 859,
	119, 886,
	-2, 884,
	-1, 861,
	119, 399,
	-2, 881,
	-1, 862,
	119, 400,
	-2, 882,
	-1, 1043,
	1, 481,
	414, 481,
	-2, 487,
	-1, 1394,
	1, 527,
	206, 527,
	414, 527,
	-2, 487,
	-1, 1396,
	246, 613,
	-2, 594,
	-1, 1485,
	1, 528,
	206, 528,
	414, 528,
	-2, 487,
	-1, 1512,
	246, 613,
	-2, 595,
	-1, 1833,
	55, 502,
	56, 502,
	-2, 487,
	-1, 1837,
	55, 502,
	56, 502,
	-2, 487,
	-1, 1849,
	55, 506,
	56, 506,
	-2, 487,
	-1, 1852,
	55, 507,
	56, 507,
	-2, 487,
}

const yyPrivate = 57344

const yyLast = 15495

var yyAct = [...]int{
	699, 1092, 1839, 1837, 1836, 1844, 1810, 573, 1782, 690,
	1694, 590, 1752, 1799, 1742, 1741, 1719, 487, 1309, 1480,
	757, 691, 522, 79, 1033, 520, 281, 1621, 82, 429,
	1093, 1481, 1610, 1389, 1513, 1217, 1459, 1315, 79, 293,
	291, 380, 1461, 571, 1292, 549, 744, 325, 325, 1453,
	1464, 1323, 1192, 1297, 1339, 841, 530, 687, 1251, 652,
	1036, 572, 286, 78, 856, 850, 851, 684, 491, 859,
	381, 49, 842, 582, 1126, 741, 285, 18, 79, 1489,
	737, 701, 1044, 659, 1186, 685, 331, 330, 1091, 712,
	1016, 713, 714, 542, 1094, 759, 1008, 276, 279, 295,
	790, 373, 431, 474, 300, 300, 512, 676, 287, 417,
	1023, 297, 75, 446, 296, 1417, 374, 73, 405, 598,
	50, 496, 1686, 498, 1173, 1293, 1187, 1708, 1019, 1180,
	395, 394, 731, 494, 350, 466, 726, 727, 1731, 716,
	1729, 488, 489, 390, 360, 50, 693, 327, 1745, 1746,
	499, 486, 18, 461, 485, 488, 489, 387, 389, 457,
	393, 1756, 1619, 1678, 531, 1622, 1623, 1624, 1625, 1681,
	1717, 697, 1161, 342, 1298, 1299, 1300, 1301, 410, 1195,
	1193, 1190, 1194, 1196, 1324, 1189, 1188, 1327, 1021, 361,
	448, 391, 738, 1195, 1193, 50, 1194, 1196, 1019, 452,
	1609, 1405, 1302, 1533, 1532, 459, 460, 1478, 447, 458,
	1379, 768, 769, 767, 1613, 1448, 1424, 1428, 1430, 1432,
	1434, 1435, 1437, 1447, 1440, 1438, 1439, 453, 1444, 1419,
	1420, 1421, 1422, 1403, 1404, 1425, 1326, 1406, 1744, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1423,
	1726, 844, 392, 677, 1685, 1829, 1733, 1427, 1429, 1431,
	1433, 1436, 1198, 1199, 1200, 1201, 1770, 1845, 1763, 1692,
	1693, 1728, 1696, 1696, 1798, 1603, 79, 409, 1820, 679,
	344, 329, 1594, 1573, 1572, 1418, 1735, 1736, 1702, 508,
	341, 340, 1774, 1802, 1598, 484, 483, 450, 408, 1846,
	1840, 455, 1340, 396, 456, 1181, 495, 1811, 1561, 451,
	454, 336, 1445, 404, 433, 1688, 1689, 1252, 384, 449,
	434, 477, 1380, 475, 497, 1348, 1346, 1347, 1676, 1177,
	1345, 443, 1344, 1343, 1341, 1067, 1027, 479, 407, 1466,
	1465, 1065, 1064, 1215, 1063, 502, 365, 500, 501, 729,
	730, 678, 1652, 1062, 728, 362, 363, 513, 1204, 1824,
	1786, 1295, 1806, 1226, 438, 1171, 1170, 1160, 514, 1154,
	325, 1057, 752, 1031, 1003, 772, 381, 381, 381, 412,
	654, 527, 435, 436, 437, 523, 1342, 519, 413, 406,
	802, 386, 1803, 345, 1206, 367, 366, 1285, 545, 513,
	50, 1141, 492, 335, 1796, 1310, 525, 651, 511, 1156,
	514, 1069, 439, 1006, 657, 409, 79, 79, 79, 79,
	488, 489, 488, 489, 411, 704, 1287, 300, 544, 767,
	1195, 1193, 1687, 1194, 1196, 1605, 660, 1604, 480, 1734,
	476, 524, 478, 325, 325, 409, 325, 1293, 739, 433,
	469, 1589, 470, 433, 343, 434, 1038, 1426, 1773, 434,
	674, 1446, 1443, 463, 325, 325, 1819, 1022, 1205, 507,
	445, 435, 436, 437, 1391, 325, 1286, 325, 510, 707,
	647, 79, 1174, 1599, 1600, 518, 490, 1596, 493, 1349,
	1350, 1595, 515, 516, 517, 721, 467, 325, 1018, 698,
	706, 300, 702, 692, 1800, 1801, 532, 1818, 533, 325,
	381, 719, 325, 1227, 536, 537, 538, 539, 540, 769,
	767, 709, 481, 50, 661, 662, 663, 664, 753, 673,
	1392, 695, 1835, 384, 300, 672, 1088, 325, 325, 756,
	79, 332, 703, 745, 364, 770, 1787, 1089, 1017, 745,
	696, 717, 710, 711, 718, 689, 680, 1653, 1655, 1656,
	1657, 1654, 1104, 760, 723, 1816, 300, 1096, 1095, 761,
	694, 1106, 526, 1567, 1764, 1760, 705, 773, 819, 715,
	758, 1715, 3, 708, 810, 811, 803, 804, 805, 806,
	807, 808, 809, 802, 750, 300, 1674, 740, 357, 722,
	435, 436, 437, 523, 754, 1133, 386, 818, 735, 1206,
	482, 736, 388, 368, 1034, 1035, 521, 1233, 1720, 1131,
	1132, 1130, 747, 748, 749, 284, 11, 1673, 826, 803,
	804, 805, 806, 807, 808, 809, 802, 755, 1030, 820,
	821, 822, 823, 1666, 435, 436, 437, 523, 390, 848,
	848, 853, 1256, 1647, 1101, 1255, 1646, 824, 402, 524,
	805, 806, 807, 808, 809, 802, 796, 768, 769, 767,
	1645, 839, 768, 769, 767, 1029, 1642, 861, 768, 769,
	767, 1663, 1738, 862, 855, 800, 810, 811, 803, 804,
	805, 806, 807, 808, 809, 802, 817, 1636, 768, 769,
	767, 11, 831, 524, 768, 769, 767, 1633, 1632, 79,
	1553, 1629, 768, 769, 767, 847, 281, 1662, 1004, 1552,
	390, 1551, 1369, 1059, 776, 777, 778, 779, 780, 781,
	1548, 774, 325, 768, 769, 767, 760, 1509, 1661, 854,
	389, 1659, 761, 354, 768, 769, 767, 1385, 1384, 1047,
	1383, 355, 1649, 325, 1382, 1002, 1280, 860, 655, 1509,
	1013, 1046, 1758, 1725, 545, 1710, 79, 1700, 391, 1048,
	1049, 1050, 1085, 1086, 1660, 1699, 50, 1658, 745, 745,
	745, 1051, 1650, 1046, 1060, 1026, 1838, 1045, 1648, 300,
	1102, 1103, 1712, 1643, 544, 1639, 1491, 1638, 1082, 1083,
	1084, 282, 6, 1637, 1053, 839, 1055, 283, 5, 1052,
	1075, 715, 1056, 1054, 1364, 1611, 1817, 1099, 1491, 1358,
	1711, 1090, 1078, 1070, 1071, 1072, 1591, 1218, 1081, 1393,
	1307, 1066, 1306, 1305, 1144, 1304, 768, 769, 767, 1028,
	835, 768, 769, 767, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1139, 1079, 1073, 1135,
	1136, 801, 800, 810, 811, 803, 804, 805, 806, 807,
	808, 809, 802, 435, 436, 437, 1134, 6, 834, 1097,
	1098, 1146, 1100, 5, 833, 656, 1128, 1107, 1108, 1109,
	1110, 1357, 1111, 1112, 1113, 1849, 1356, 352, 1259, 353,
	360, 1229, 1258, 1704, 351, 349, 348, 356, 1355, 358,
	359, 1159, 1827, 768, 769, 767, 1142, 1495, 768, 769,
	767, 1607, 1354, 1229, 1854, 1145, 334, 1147, 1499, 751,
	768, 769, 767, 1848, 1847, 1148, 333, 1025, 1830, 1495,
	1826, 1825, 1614, 1793, 768, 769, 767, 1471, 1488, 1353,
	1499, 1470, 1490, 1492, 1494, 1469, 1496, 1497, 1498, 1500,
	1501, 1502, 1504, 1505, 1506, 1507, 1025, 1814, 1025, 1813,
	1488, 768, 769, 767, 1490, 1492, 1494, 535, 1496, 1497,
	1498, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 801, 800,
	810, 811, 803, 804, 805, 806, 807, 808, 809, 802,
	1785, 1784, 1557, 1747, 1162, 1452, 409, 1352, 1077, 1737,
	1394, 74, 1338, 22, 37, 23, 1508, 1671, 1672, 1370,
	325, 1328, 1337, 325, 1001, 1262, 409, 660, 325, 768,
	769, 767, 1184, 1487, 768, 769, 767, 1165, 1508, 1260,
	1166, 1257, 1336, 1168, 768, 769, 767, 1176, 1503, 1137,
	1671, 1670, 1617, 1616, 1493, 1487, 1557, 1556, 1212, 71,
	1182, 1183, 1238, 702, 768, 769, 767, 1235, 325, 1228,
	1503, 768, 769, 767, 1374, 1373, 1493, 79, 79, 74,
	1175, 22, 37, 23, 1229, 1359, 74, 1203, 74, 1164,
	1214, 1163, 389, 1229, 1351, 1178, 1229, 1237, 1229, 1236,
	1158, 1157, 1234, 1143, 745, 1172, 1152, 1151, 1025, 1024,
	649, 1208, 675, 646, 1185, 1268, 765, 1221, 1222, 653,
	534, 442, 1209, 1045, 1210, 1230, 1202, 71, 1231, 1232,
	1805, 1246, 1615, 1229, 648, 1216, 71, 74, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1213, 1211, 462, 440, 1220,
	1219, 441, 441, 848, 1149, 1272, 848, 1395, 1019, 1275,
	763, 1371, 1005, 1225, 443, 443, 1155, 1138, 1283, 1254,
	325, 1077, 1032, 509, 325, 325, 1249, 1250, 325, 1263,
	1850, 745, 653, 1278, 1795, 71, 1789, 745, 1771, 1279,
	1768, 1766, 1714, 1248, 1669, 1667, 1665, 1267, 79, 1602,
	1454, 390, 1460, 1274, 1128, 1247, 1462, 1540, 409, 1271,
	1539, 419, 422, 423, 424, 420, 1387, 421, 425, 1270,
	1281, 1273, 1264, 1311, 1312, 1276, 79, 1333, 1269, 1317,
	1277, 1288, 1290, 1129, 1207, 1167, 1150, 1284, 1308, 1068,
	1061, 840, 838, 837, 1303, 1291, 836, 832, 791, 817,
	414, 829, 827, 825, 74, 71, 22, 37, 23, 799,
	1335, 419, 422, 423, 424, 420, 798, 421, 425, 1318,
	1319, 50, 797, 795, 62, 794, 793, 792, 69, 789,
	1320, 788, 1366, 787, 786, 1367, 785, 784, 1332, 783,
	325, 782, 650, 444, 1009, 1010, 1333, 38, 1041, 1363,
	1778, 1776, 71, 1743, 1197, 1368, 1076, 1360, 1012, 464,
	1365, 294, 1015, 1014, 1362, 419, 422, 423, 424, 420,
	669, 421, 425, 667, 1372, 670, 666, 671, 668, 423,
	424, 665, 1834, 1451, 1390, 1388, 1153, 1749, 528, 529,
	1046, 1034, 1035, 1039, 1294, 725, 1376, 1375, 427, 468,
	1381, 1790, 1378, 1377, 1757, 1386, 398, 400, 401, 326,
	333, 1450, 1096, 1095, 472, 473, 1721, 1718, 65, 66,
	1683, 67, 68, 1682, 1442, 1474, 1680, 325, 325, 1630,
	1441, 79, 1449, 1331, 471, 1463, 1330, 1224, 409, 334,
	653, 1455, 1169, 1456, 1457, 1458, 409, 1486, 275, 333,
	1779, 1467, 745, 1780, 1779, 1780, 426, 1468, 346, 1482,
	1, 849, 1791, 843, 1748, 1781, 1713, 1317, 1473, 1751,
	589, 1479, 574, 1477, 1675, 54, 64, 72, 1618, 1716,
	1677, 1620, 1554, 1510, 1475, 1476, 1179, 465, 1265, 1266,
	610, 600, 828, 601, 645, 63, 61, 60, 1516, 399,
	599, 1534, 1549, 1535, 1536, 1537, 1538, 801, 800, 810,
	811, 803, 804, 805, 806, 807, 808, 809, 802, 1541,
	1542, 1543, 1544, 1325, 339, 1545, 397, 1547, 347, 1608,
	1531, 1105, 1546, 1519, 1140, 1550, 1843, 1833, 1563, 1514,
	1809, 1788, 1695, 1828, 1727, 1527, 1528, 1555, 1769, 1762,
	1515, 1691, 1560, 298, 732, 503, 1564, 1565, 371, 1568,
	1569, 1570, 1571, 1772, 1559, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 46,
	79, 1566, 1558, 378, 1520, 47, 658, 1296, 1191, 1037,
	1020, 686, 299, 1390, 1684, 1626, 1668, 1588, 337, 1040,
	338, 1043, 1042, 775, 1592, 1127, 830, 547, 409, 581,
	1590, 575, 1322, 1321, 1525, 1631, 720, 25, 428, 766,
	1606, 48, 857, 1612, 81, 1058, 858, 1753, 588, 1482,
	587, 586, 585, 1628, 418, 1634, 1635, 1664, 416, 1627,
	415, 1640, 1641, 290, 289, 1223, 813, 1329, 816, 433,
	762, 764, 1524, 1740, 1739, 434, 1644, 1706, 1707, 1526,
	1601, 1530, 814, 815, 812, 1651, 801, 800, 810, 811,
	803, 804, 805, 806, 807, 808, 809, 802, 1472, 1597,
	1593, 1701, 1485, 1484, 1511, 1512, 1522, 1518, 1401, 1402,
	1397, 1399, 1400, 1398, 1396, 1316, 1314, 1313, 1679, 1011,
	1007, 845, 852, 403, 1690, 1282, 700, 76, 1521, 1523,
	1697, 1698, 288, 1080, 541, 70, 79, 17, 16, 15,
	409, 45, 44, 801, 800, 810, 811, 803, 804, 805,
	806, 807, 808, 809, 802, 43, 1703, 42, 14, 1709,
	8, 1482, 41, 40, 39, 13, 12, 36, 1705, 1722,
	1723, 35, 34, 33, 1724, 32, 758, 31, 1529, 30,
	1730, 1732, 29, 28, 27, 1755, 26, 9, 53, 52,
	1517, 51, 19, 20, 21, 59, 1754, 58, 57, 56,
	55, 24, 10, 7, 4, 2, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 1775, 1783, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 409,
	0, 0, 0, 1765, 0, 1767, 1792, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 1755, 1808, 0, 0,
	0, 0, 0, 0, 1804, 0, 409, 1754, 1807, 0,
	0, 1812, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 1783, 1821, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 1823, 0, 0,
	1842, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 1852, 1851, 1842, 976, 962, 0, 923,
	978, 895, 911, 986, 913, 914, 949, 873, 932, 208,
	909, 865, 898, 899, 867, 906, 868, 896, 925, 151,
	894, 965, 935, 178, 984, 180, 0, 0, 238, 193,
	0, 0, 928, 967, 930, 954, 922, 950, 881, 943,
	979, 910, 947, 980, 0, 0, 0, 0, 435, 436,
	437, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 946, 972, 908, 0, 0, 882, 977, 929, 948,
	0, 866, 944, 0, 871, 874, 985, 970, 903, 904,
	0, 0, 0, 0, 0, 0, 0, 926, 931, 951,
	919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	900, 0, 939, 0, 0, 0, 876, 872, 0, 924,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 974, 975, 145, 274, 875,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 996, 997, 998, 999, 1000, 880, 0,
	901, 952, 0, 864, 961, 968, 921, 267, 971, 918,
	917, 219, 0, 0, 242, 164, 163, 177, 966, 897,
	907, 902, 905, 228, 210, 973, 938, 215, 226, 181,
	253, 220, 258, 244, 266, 955, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 959, 0, 0, 0,
	0, 0, 0, 0, 158, 863, 262, 0, 206, 963,
	869, 879, 877, 915, 940, 941, 942, 988, 957, 960,
	958, 987, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 239, 260, 273, 263, 916, 888,
	927, 272, 891, 889, 956, 890, 945, 989, 197, 198,
	199, 200, 912, 138, 936, 920, 990, 991, 992, 993,
	994, 995, 893, 969, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 887, 892, 886,
	933, 934, 981, 982, 983, 953, 878, 964, 883, 885,
	884, 937, 119, 606, 179, 268, 222, 156, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 151, 746, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 622, 630,
	0, 0, 0, 0, 261, 0, 742, 0, 0, 576,
	0, 0, 548, 612, 611, 591, 0, 1361, 0, 134,
	592, 0, 0, 0, 593, 596, 594, 595, 0, 0,
	614, 0, 0, 0, 0, 0, 546, 580, 801, 800,
	810, 811, 803, 804, 805, 806, 807, 808, 809, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 0, 0, 0, 0, 607, 0, 579, 0,
	0, 743, 0, 597, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 604,
	605, 145, 570, 602, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 801, 800, 810,
	811, 803, 804, 805, 806, 807, 808, 809, 802, 0,
	0, 267, 0, 0, 620, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 603, 0, 228, 210, 633,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 618, 206, 632, 613, 615, 616, 619, 623, 624,
	625, 626, 627, 629, 631, 634, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 569, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 608, 197, 198, 199, 200, 621, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 640, 617, 639, 641, 642, 638, 643, 644, 628,
	584, 0, 636, 635, 637, 0, 119, 0, 179, 268,
	222, 156, 83, 550, 551, 552, 553, 554, 555, 556,
	91, 557, 93, 94, 95, 96, 558, 98, 559, 100,
	101, 102, 560, 561, 562, 563, 107, 108, 109, 564,
	565, 112, 113, 114, 115, 566, 567, 568, 261, 606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 151,
	1822, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	1261, 0, 0, 0, 622, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 548, 612,
	611, 591, 0, 0, 0, 134, 592, 0, 0, 0,
	593, 596, 594, 595, 0, 0, 614, 0, 0, 0,
	0, 0, 546, 580, 0, 0, 801, 800, 810, 811,
	803, 804, 805, 806, 807, 808, 809, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 0, 0,
	0, 0, 607, 0, 579, 0, 0, 609, 0, 597,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 604, 605, 145, 570, 602,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	620, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 603, 0, 228, 210, 633, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 618, 206, 632,
	613, 615, 616, 619, 623, 624, 625, 626, 627, 629,
	631, 634, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 569, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 608, 197, 198,
	199, 200, 621, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 640, 617, 639,
	641, 642, 638, 643, 644, 628, 584, 0, 636, 635,
	637, 0, 119, 0, 179, 268, 222, 156, 83, 550,
	551, 552, 553, 554, 555, 556, 91, 557, 93, 94,
	95, 96, 558, 98, 559, 100, 101, 102, 560, 561,
	562, 563, 107, 108, 109, 564, 565, 112, 113, 114,
	115, 566, 567, 568, 261, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 151, 746, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	622, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 548, 612, 611, 591, 0, 1253,
	0, 134, 592, 0, 0, 0, 593, 596, 594, 595,
	0, 0, 614, 0, 0, 0, 0, 0, 546, 580,
	801, 800, 810, 811, 803, 804, 805, 806, 807, 808,
	809, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 0, 0, 0, 0, 607, 0,
	579, 0, 0, 609, 0, 597, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 604, 605, 145, 570, 602, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 620, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 603, 0, 228,
	210, 633, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 618, 206, 632, 613, 615, 616, 619,
	623, 624, 625, 626, 627, 629, 631, 634, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 569, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 608, 197, 198, 199, 200, 621, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 640, 617, 639, 641, 642, 638, 643,
	644, 628, 584, 0, 636, 635, 637, 0, 119, 0,
	179, 268, 222, 156, 83, 550, 551, 552, 553, 554,
	555, 556, 91, 557, 93, 94, 95, 96, 558, 98,
	559, 100, 101, 102, 560, 561, 562, 563, 107, 108,
	109, 564, 565, 112, 113, 114, 115, 566, 567, 568,
	261, 74, 0, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 622, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	0, 0, 548, 612, 611, 591, 0, 0, 0, 134,
	592, 0, 0, 0, 593, 596, 594, 595, 0, 0,
	614, 0, 0, 0, 0, 0, 546, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 0, 0, 0, 0, 607, 0, 579, 0,
	0, 609, 0, 597, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 604,
	605, 145, 570, 602, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 620, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 603, 0, 228, 210, 633,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 618, 206, 632, 613, 615, 616, 619, 623, 624,
	625, 626, 627, 629, 631, 634, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 569, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 608, 197, 198, 199, 200, 621, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 640, 617, 639, 641, 642, 638, 643, 644, 628,
	584, 0, 636, 635, 637, 0, 119, 0, 179, 268,
	222, 156, 83, 550, 551, 552, 553, 554, 555, 556,
	91, 557, 93, 94, 95, 96, 558, 98, 559, 100,
	101, 102, 560, 561, 562, 563, 107, 108, 109, 564,
	565, 112, 113, 114, 115, 566, 567, 568, 261, 606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 622, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 548, 612,
	611, 591, 0, 0, 0, 134, 592, 0, 0, 0,
	593, 596, 594, 595, 0, 0, 614, 0, 0, 0,
	0, 0, 546, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 543, 0,
	0, 0, 607, 0, 579, 0, 0, 609, 0, 597,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 604, 605, 145, 570, 602,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	620, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 603, 0, 228, 210, 633, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 618, 206, 632,
	613, 615, 616, 619, 623, 624, 625, 626, 627, 629,
	631, 634, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 569, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 608, 197, 198,
	199, 200, 621, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 640, 617, 639,
	641, 642, 638, 643, 644, 628, 584, 0, 636, 635,
	637, 0, 119, 0, 179, 268, 222, 156, 83, 550,
	551, 552, 553, 554, 555, 556, 91, 557, 93, 94,
	95, 96, 558, 98, 559, 100, 101, 102, 560, 561,
	562, 563, 107, 108, 109, 564, 565, 112, 113, 114,
	115, 566, 567, 568, 261, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	622, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 548, 612, 611, 591, 0, 0,
	0, 134, 592, 0, 0, 0, 593, 596, 594, 595,
	0, 0, 614, 0, 0, 0, 0, 0, 546, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 0, 0, 0, 0, 607, 0,
	579, 0, 0, 609, 0, 597, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 604, 605, 145, 570, 602, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 620, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 603, 0, 228,
	210, 633, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 618, 206, 632, 613, 615, 616, 619,
	623, 624, 625, 626, 627, 629, 631, 634, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 569, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 608, 197, 198, 199, 200, 621, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 640, 617, 639, 641, 642, 638, 643,
	644, 628, 584, 0, 636, 635, 637, 0, 119, 0,
	179, 268, 222, 156, 83, 550, 551, 552, 553, 554,
	555, 556, 91, 557, 93, 94, 95, 96, 558, 98,
	559, 100, 101, 102, 560, 561, 562, 563, 107, 108,
	109, 564, 565, 112, 113, 114, 115, 566, 567, 568,
	261, 606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 622, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	548, 612, 611, 591, 0, 0, 0, 134, 592, 0,
	0, 0, 593, 596, 594, 595, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	0, 0, 0, 0, 607, 0, 579, 0, 0, 609,
	0, 597, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 604, 605, 145,
	570, 602, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 620, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 603, 0, 228, 210, 633, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 618,
	206, 632, 613, 615, 616, 619, 623, 624, 625, 626,
	627, 629, 631, 634, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 569,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 608,
	197, 198, 199, 200, 621, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 640,
	617, 639, 641, 642, 638, 643, 644, 628, 584, 0,
	636, 635, 637, 0, 119, 0, 179, 268, 222, 156,
	83, 550, 551, 552, 553, 554, 555, 556, 91, 557,
	93, 94, 95, 96, 558, 98, 559, 100, 101, 102,
	560, 561, 562, 563, 107, 108, 109, 564, 565, 112,
	113, 114, 115, 566, 567, 568, 261, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 622, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 612, 611, 591,
	0, 0, 0, 134, 592, 0, 0, 0, 593, 596,
	594, 595, 0, 0, 614, 0, 0, 0, 0, 0,
	546, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 0, 0, 0, 0,
	607, 0, 579, 0, 0, 609, 0, 597, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 604, 605, 145, 570, 602, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 620, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 603,
	0, 228, 210, 633, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 0, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 618, 206, 632, 613, 615,
	616, 619, 623, 624, 625, 626, 627, 629, 631, 634,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 569, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 608, 197, 198, 199, 200,
	621, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 640, 617, 639, 641, 642,
	638, 643, 644, 628, 584, 0, 636, 635, 637, 0,
	119, 0, 179, 268, 222, 156, 83, 550, 551, 552,
	553, 554, 555, 556, 91, 557, 93, 94, 95, 96,
	558, 98, 559, 100, 101, 102, 560, 561, 562, 563,
	107, 108, 109, 564, 565, 112, 113, 114, 115, 566,
	567, 568, 261, 310, 0, 309, 313, 305, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 320, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 324, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 303, 302, 306, 0, 0, 0,
	0, 0, 308, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 312, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 304, 244,
	266, 0, 328, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 307, 311, 314, 212, 315, 316, 0, 0,
	317, 318, 319, 0, 0, 321, 322, 0, 0, 0,
	239, 260, 273, 263, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 310, 0, 309, 313, 305, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 320, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 324, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 303, 302, 306, 0, 0, 0, 0, 0,
	308, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 312, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 304, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	307, 311, 314, 212, 315, 316, 0, 0, 317, 318,
	319, 0, 0, 321, 322, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 74,
	0, 22, 37, 23, 0, 0, 0, 0, 0, 0,
	0, 208, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 0, 0, 145,
	274, 0, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	197, 198, 199, 200, 278, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 370, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 382, 383, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 386, 265, 128,
	385, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 0,
	0, 228, 210, 0, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 369, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 372, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 379, 375, 376, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 377, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 771, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 769, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 382,
	383, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 386,
	265, 128, 385, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 379, 375, 376, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 377, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 504, 0, 0,
	0, 0, 0, 0, 0, 151, 505, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 324, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 263, 0, 0, 0, 272, 0, 0,
	0, 0, 506, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 846, 80, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 208,
	0, 734, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 324, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 0,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 733, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 80, 612, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 263, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 688, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 0, 0, 145,
	274, 0, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 1289,
	197, 198, 199, 200, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 1074, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 688,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 0,
	0, 228, 210, 0, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 0, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 612, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 0,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 688, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 263, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 0, 0, 145,
	274, 0, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	197, 198, 199, 200, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 0,
	0, 228, 210, 0, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 0, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 324, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 0,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 688, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 724, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 0, 0, 145,
	274, 0, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	197, 198, 199, 200, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 0,
	0, 228, 210, 0, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 0, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 430, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 432, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 119, 0, 179, 268,
	222, 156, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 432, 0, 0, 261, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 119, 0, 179, 268,
	222, 156, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 0, 0, 0, 261, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	310, 0, 309, 313, 305, 0, 0, 1509, 158, 0,
	262, 0, 206, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 231, 0, 0, 0,
	0, 1046, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 1562, 0, 0,
	0, 0, 197, 198, 199, 200, 1491, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 302, 306, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1488, 0,
	0, 0, 1490, 1492, 1494, 0, 1496, 1497, 1498, 1500,
	1501, 1502, 1504, 1505, 1506, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	311, 682, 0, 315, 683, 0, 1508, 317, 318, 319,
	0, 0, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 1493,
}

var yyPact = [...]int{
	1248, -1000, -302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13423, 1387, -1000, 6283, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11839, 13819, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5875, 5467, 59, -1000,
	1384, -1000, -1000, -1000, 97, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 566, -117, 230, 234, 266, 266, 6679,
	1384, 1131, -54, -1000, 1336, 1248, 107, 13819, -1000, 270,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 11839, 13819, -144, 335, -1000,
	1073, 269, -1000, -1000, -1000, -1000, 1220, -1000, -1000, -1000,
	1325, 14215, 1131, -1000, 1097, 1110, -1000, -1000, 1239, -1000,
	55, -75, -107, 13, -1000, -1000, 87, -1000, -1000, -1000,
	-1000, -1000, -27, -1000, -79, -1000, -86, -1000, -1000, -1000,
	-179, -1000, -1000, -1000, -1000, -1000, 1096, 276, 1258, -219,
	-1000, 1332, 1131, 1368, 1344, 134, 134, 136, 134, 153,
	-1000, -1000, -1000, -1000, -1000, -1000, 511, 83, -1000, -1000,
	-181, -190, 305, -190, -51, -1000, -1000, -1000, -1000, -1000,
	-1000, 135, -1000, -224, -1000, 219, -1000, 215, -1000, 7867,
	75, 1118, 389, -1000, 310, 13819, 13819, 13819, 268, 587,
	543, 262, -1000, -1000, -1000, 1308, 1309, 1332, 1131, -1000,
	1064, 921, 135, 135, 135, 135, 135, 3841, -1000, -1000,
	-1000, -1000, -1000, 1080, 1238, -1000, 13819, 1170, -1000, 261,
	693, 825, -1000, 13819, 13819, 11839, 11839, 11839, 11839, -1000,
	1290, 1285, -1000, 1282, 1279, 1286, 14915, -1000, -1000, -1000,
	14565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1056, 1384,
	69, 15164, 11047, 12631, 13819, 11047, -1000, -1000, -1000, -1000,
	-1000, -186, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 69, 11047, 11047, -153, -1000, -1000, 4247, -1000,
	-1000, 4247, -1000, -1000, 11047, 344, 12631, 816, 13819, 134,
	13819, -1000, -1000, 305, 305, -1000, 511, 511, -1000, -1000,
	-193, 1378, 4653, -195, 13819, 134, 13027, 1321, -212, 228,
	220, 222, -1000, -1000, -223, -1000, -1000, 1109, 8671, 7471,
	132, 11047, 2215, -1000, -1000, 310, 310, 310, 2215, 872,
	257, -1000, -1000, -1000, -1000, -1000, -1000, 13819, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11047, 12631, 13819, 13819,
	14915, 1105, -1000, -1000, 7075, 256, 4247, 635, 1237, -1000,
	1235, 1233, 1232, 1230, 1229, 1227, 1225, 1194, 1223, 1222,
	-1000, -1000, -1000, 1221, 1219, 1194, 1218, 1212, 1205, -1000,
	-1000, 1515, -1000, -1000, -1000, -1000, 3435, 4653, 4653, 4653,
	4653, -1000, -1000, 1201, 1199, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 5059, -1000, 1198,
	1197, 1194, 1193, 824, 818, 780, 1192, 1189, 1188, 4653,
	1187, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -4, -1000, 8275, 13819,
	13819, -1000, 1345, 4247, 1851, -1000, 1005, 255, 1107, -1000,
	324, 1243, 1257, 1243, -1000, -1000, -1000, -1000, 1272, -1000,
	1271, -1000, -1000, -1000, -1000, -1000, 441, -1000, -1000, -1000,
	-1000, -1000, -79, -86, 1103, -1000, -119, 52, -1000, -1000,
	1053, -1000, -1000, -1000, 441, 1103, 149, 779, 620, 254,
	1117, -1000, 589, 143, 1319, 1109, 1246, 1311, 13819, 1378,
	1378, 1378, 305, 14915, 511, 13819, 511, -1000, -1000, 511,
	-1000, 252, 13819, 143, 1186, -1000, -1000, -1000, 226, 214,
	212, 12631, 148, -1000, -1000, 1109, -1000, -1000, -1000, 1185,
	322, -1000, -1000, 4653, -1000, 634, -1000, 2215, 2215, 2215,
	-1000, 310, 9859, -1000, 1103, 1109, 1255, 1116, -1000, -1000,
	-1000, -1000, 1378, 3841, -1000, 11839, -1000, 4247, 4247, 4247,
	-1000, 13819, 12235, -1000, 466, 4653, -1000, -1000, -1000, -1000,
	-1000, -1000, 4247, 1342, 1342, 1342, 4247, 547, 4247, 4247,
	-1000, 506, 1342, 1342, 1342, 1342, -1000, 1342, 1342, 1342,
	4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653, 4653,
	4653, 4653, 1179, 522, 4653, 4653, 4653, 921, 993, 1112,
	-1000, -1000, -1000, -1000, -1000, 4247, 133, 4247, -1000, 1047,
	-1000, -1000, 4247, -1000, -1000, -1000, 4247, 4653, 4247, -1000,
	1342, 1099, -1000, 1182, -1000, 1051, 1303, -1000, 250, 1111,
	-1000, 320, 1045, -1000, 1332, 634, -1000, 248, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -150, -1000, 13819, 1345, 13819, 4247, -1000, -1000, 4247,
	1181, -1000, 4247, -1000, -1000, -1000, 1381, 247, 246, 11047,
	-1000, 108, 11047, -1000, -1000, 13819, 142, 11047, -59, 4247,
	4247, 13819, 4247, -1000, -1000, -1000, -248, -1000, -129, -1000,
	1253, 3, -1000, 1311, -1000, 243, -1000, 1180, -1000, -1000,
	-1000, 1378, -1000, 305, -1000, 305, 511, 13819, -1000, -1000,
	-248, 1034, -1000, -1000, -1000, 213, 1109, 11047, 767, 132,
	-1000, -1000, -1000, 2215, -1000, -1000, 13819, 13819, 1374, -1000,
	1108, 1274, -1000, 440, 349, -1000, 244, -1000, -1000, 443,
	-1000, 1013, 1078, 634, 4247, -1000, -1000, 4247, 4247, 594,
	4247, 1011, 1043, 1041, -1000, 1006, -1000, 4247, 4247, 4247,
	4247, 4247, 4247, 4247, 481, 583, -1000, 553, 553, 278,
	278, 278, 278, 278, 524, 524, -1000, -1000, -1000, 3435,
	1179, 4653, 4653, 4653, 116, 2286, 3009, -1000, 4247, 600,
	-1000, -1000, 985, -1000, 846, 983, 2605, 969, 4247, -4,
	3027, 1082, 13819, -4, 13819, 13819, 3027, -1000, 13819, -1000,
	1851, 691, -1000, 1332, -1000, 634, 634, 13819, 634, 11047,
	290, 369, -1000, 9463, 11047, -1000, -1000, 11047, 73, 1317,
	-1000, -1000, 634, 634, 242, -1000, -1000, -143, -1000, -1000,
	-1000, 122, -1000, 775, 773, 772, 770, 13819, -1000, -1000,
	-1000, -1000, -1000, 316, 316, 316, 1308, 13819, -1000, 1378,
	1378, 305, -1000, -80, -120, -1000, 1103, 965, -1000, -1000,
	-1000, -1000, -1000, 1372, 1367, 11839, 11443, -1000, -1000, 4247,
	986, 966, 956, 186, 1038, -1000, -1000, -1000, -1000, 951,
	893, 866, 852, 840, 835, 763, 1029, -1000, 116, 2286,
	2197, -1000, 4653, 4653, 758, 186, 325, -1000, -1000, 325,
	-1000, 4653, -1000, 666, -1000, 963, 1106, -1000, -4, -1000,
	-1000, 1099, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1019, -1000, 1103, -1000, -1000, -1000, -1000, 11047,
	1330, 143, -1000, -77, 138, 13819, -143, -1000, 689, 685,
	683, 682, -115, -1000, -1000, -1000, -1000, -1000, 1162, 325,
	-1000, 414, 769, 954, 1102, -1000, -1000, 85, -1000, -1000,
	1378, -1000, -80, -1000, 197, 194, -48, 1366, -1000, -1000,
	4247, 4247, 1274, -1000, -1000, 634, -1000, -1000, -1000, 949,
	1146, 1146, -1000, 1146, 1146, 1146, 1148, 1152, 1148, 204,
	204, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4653, -1000, -1000, -1000, 899, 895, 891, 1572, -1000,
	-1000, 3027, 1099, -1000, 13819, -1000, 11047, 11047, -249, -81,
	13819, -1000, -1000, -1000, -1000, -1000, -1000, 10651, -1000, -1000,
	-1000, -1000, -1000, -1000, 754, 13819, 1419, -100, -1000, -1000,
	-1000, 1146, -1000, 1146, 1146, 1146, 1146, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1156, 1153, -1000, 1146,
	1146, 1146, 1146, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1148, 1152,
	1148, -1000, -1000, -1000, -1000, 665, -1000, -1000, -1000, 767,
	634, 1078, -1000, -1000, 656, -1000, -1000, -1000, -1000, -1000,
	654, -1000, 645, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -195,
	1001, -1000, 1146, 4247, 102, 15172, -1000, 316, 316, 458,
	316, 316, 316, 316, 61, 60, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	-1000, -1000, 1419, -1000, -1000, 381, 4653, -1000, -1000, 766,
	414, 253, 265, 1145, -1000, 29, 360, 358, -1000, 13819,
	864, -105, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 755,
	755, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -52, -1000,
	-1000, 886, 1077, 997, -168, -160, -1000, 10651, 1316, 655,
	-1000, 1363, 754, -1000, 643, 642, 316, 316, 632, 743,
	737, 735, 316, 316, 611, 733, 14565, 605, 591, 588,
	723, 722, 323, 712, 709, 652, 13819, 1142, -1000, -1000,
	2286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 578, 1141, -1000, -1000, 1140, -1000, -1000, -1000,
	995, -1000, 962, -1000, -1000, 562, -1000, 531, 140, -166,
	-160, -1000, 1360, -158, 1357, 1354, 58, -1000, -1000, 1316,
	21, -1000, -1000, -1000, 325, 325, -1000, -1000, -1000, -1000,
	715, 707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 71, 13819, 847, 4247, -243, 10651,
	-1000, 705, -1000, 764, 736, 1138, 516, -155, 1351, -1000,
	558, 1350, 558, 558, -1000, 316, 703, -6, -1000, -1000,
	-1000, 19, 86, 84, -1000, 179, -1000, -1000, -1000, -1000,
	-1000, -1000, 68, 953, -1000, 626, 1252, -1000, -96, 947,
	-1000, -1000, -1000, 1307, 9067, -169, -1000, 1338, 702, -1000,
	-1000, 558, -1000, -1000, 510, -1000, 816, 15, 509, 4653,
	1137, 4653, 1136, 16, 1134, -1000, -1000, -1000, 211, -1000,
	-1000, 1250, 1249, 1394, -1000, -1000, -1000, -1000, -1000, 13819,
	-1000, 945, -1000, -1000, -1000, 241, -1000, 486, -1000, -1000,
	-1000, -1000, 1132, 1335, -1000, 1356, 13819, 887, 13819, 1130,
	315, 4653, -1000, -1000, 27, -1000, 1396, -1000, 1390, 263,
	263, 1075, -1000, 273, -1000, 10255, 13819, -1000, -1000, 101,
	22, -1000, 913, -1000, 911, 13819, 500, 760, -1000, -1000,
	-1000, -1000, 437, 35, -1000, 13819, 2621, -1000, 240, 885,
	-1000, 855, 1, -1000, -1000, 882, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 634, 13819, -1000, 101, 1299, -1000, 467,
	-1000, -1000, -1000, 732, 92, -1000, -1000, 732, 14, -1000,
	90, -1000, -1000, 878, -1000, 838, 1126, -1000, 14, 754,
	4247, -1000, 754, 868, -1000,
}

var yyPgo = [...]int{
	0, 582, 1735, 1734, 807, 801, 1733, 1732, 1731, 1730,
	1729, 1728, 1727, 1725, 1724, 1723, 1722, 1721, 1719, 1718,
	1717, 1716, 1714, 1713, 1712, 1709, 1707, 1705, 1703, 1702,
	1701, 1697, 625, 1696, 1695, 1694, 1693, 1692, 1690, 98,
	1688, 1687, 1685, 1672, 1671, 1669, 1668, 1667, 76, 71,
	1665, 119, 117, 1664, 93, 1663, 62, 108, 1662, 1657,
	24, 81, 1656, 87, 86, 56, 164, 66, 1655, 1653,
	1652, 1651, 96, 1650, 1649, 1647, 1646, 37, 40, 20,
	1645, 54, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 50,
	34, 1637, 1635, 1634, 1633, 1632, 25, 1631, 33, 1630,
	1629, 1615, 1610, 1608, 1607, 13, 15, 14, 1604, 1603,
	1602, 2, 1601, 1600, 59, 1597, 1595, 1594, 541, 1593,
	1590, 1588, 109, 1584, 94, 1582, 1581, 1580, 1578, 21,
	1577, 32, 1576, 41, 1575, 1574, 69, 28, 18, 64,
	1572, 1569, 1568, 102, 22, 57, 0, 95, 29, 1567,
	97, 92, 1566, 68, 134, 89, 35, 1564, 51, 1563,
	1562, 1561, 45, 43, 1559, 61, 30, 58, 1557, 74,
	88, 1, 72, 1556, 100, 1555, 1553, 82, 1552, 1551,
	103, 79, 1550, 1549, 1548, 19, 1546, 31, 1545, 1544,
	99, 111, 1542, 1541, 1540, 85, 67, 60, 1539, 1538,
	52, 1537, 84, 53, 83, 1536, 544, 1533, 80, 44,
	1513, 101, 1508, 116, 106, 75, 1505, 1504, 114, 1311,
	107, 1503, 90, 9, 1502, 1501, 10, 1499, 17, 1498,
	1494, 1493, 1492, 6, 1491, 1490, 1487, 3, 5, 1486,
	4, 73, 1484, 1481, 49, 36, 42, 1480, 1479, 1478,
	121, 1476, 1474, 1473, 1452, 1450, 1449, 1444, 55, 1443,
	1442, 1441, 1440, 46, 1439, 1438, 1437, 1436, 1432, 27,
	1431, 16, 1430, 1429, 1428, 1424, 11, 1422, 1420, 12,
	1419, 1416, 7, 8, 1415, 1414, 1413, 1411, 65, 1410,
	1408, 91, 1406,
}

//line mysql_sql.y:5585
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) intervalTypeUnion() tree.IntervalType {
	v, _ := st.union.(tree.IntervalType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 289, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	47, 285, 285, 284, 284, 283, 283, 282, 282, 282,
	281, 281, 281, 280, 280, 279, 279, 277, 277, 278,
	276, 275, 275, 274, 274, 272, 272, 273, 273, 268,
	268, 270, 270, 269, 269, 269, 269, 271, 267, 267,
	267, 266, 266, 46, 46, 46, 209, 209, 45, 45,
	222, 222, 222, 222, 222, 220, 220, 220, 220, 219,
	219, 218, 218, 223, 223, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 40, 40,
	40, 40, 43, 44, 216, 216, 216, 216, 216, 217,
	217, 217, 41, 42, 42, 208, 208, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 207, 207, 215, 215, 215, 214, 214, 213, 213,
	34, 34, 34, 37, 36, 206, 206, 206, 206, 206,
	206, 206, 206, 35, 35, 35, 35, 35, 35, 33,
	33, 32, 205, 205, 204, 39, 39, 39, 39, 38,
	38, 38, 38, 38, 38, 38, 149, 149, 149, 7,
	31, 31, 250, 250, 159, 159, 160, 160, 158, 158,
	158, 158, 158, 158, 253, 254, 156, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 30, 290, 290,
	290, 28, 29, 249, 249, 249, 27, 26, 25, 24,
	24, 23, 22, 22, 153, 153, 155, 155, 151, 291,
	291, 228, 228, 154, 154, 21, 21, 152, 152, 134,
	150, 150, 150, 6, 8, 8, 8, 8, 8, 13,
	12, 11, 10, 9, 5, 4, 257, 257, 257, 257,
	257, 257, 287, 287, 287, 288, 71, 71, 67, 67,
	258, 258, 172, 286, 286, 265, 265, 264, 264, 263,
	263, 69, 69, 70, 70, 59, 59, 48, 48, 49,
	49, 49, 65, 65, 66, 66, 66, 64, 64, 63,
	62, 62, 61, 60, 60, 60, 51, 51, 50, 50,
	50, 50, 50, 118, 118, 118, 52, 251, 251, 251,
	256, 256, 115, 115, 116, 116, 114, 114, 53, 53,
	54, 54, 54, 54, 113, 113, 112, 55, 55, 56,
	56, 58, 58, 58, 58, 123, 123, 122, 122, 122,
	122, 74, 74, 121, 120, 120, 120, 73, 73, 72,
	72, 68, 68, 57, 57, 119, 292, 292, 117, 142,
	142, 142, 148, 148, 141, 141, 141, 147, 147, 143,
	143, 144, 144, 144, 3, 3, 3, 16, 16, 16,
	14, 202, 202, 201, 201, 203, 203, 203, 203, 197,
	197, 198, 198, 198, 198, 199, 199, 199, 200, 200,
	200, 200, 196, 196, 195, 193, 193, 193, 194, 194,
	194, 194, 194, 194, 145, 145, 15, 190, 190, 191,
	191, 191, 192, 192, 184, 184, 184, 184, 19, 188,
	188, 189, 189, 189, 189, 189, 185, 185, 187, 187,
	183, 183, 183, 183, 183, 18, 182, 182, 180, 180,
	178, 178, 179, 179, 177, 177, 177, 181, 181, 17,
	252, 252, 224, 224, 227, 227, 234, 234, 235, 235,
	233, 233, 240, 240, 239, 239, 238, 238, 237, 237,
	236, 236, 231, 231, 230, 230, 225, 225, 225, 225,
	225, 226, 226, 229, 229, 232, 232, 94, 94, 95,
	95, 95, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	97, 97, 97, 101, 101, 101, 101, 101, 101, 96,
	96, 96, 98, 98, 98, 79, 79, 78, 78, 75,
	75, 76, 76, 77, 80, 130, 130, 130, 146, 146,
	146, 129, 129, 129, 93, 93, 92, 92, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 210, 210, 157, 157, 157, 110, 108, 108, 109,
	109, 109, 109, 106, 107, 105, 105, 105, 105, 105,
	104, 104, 103, 103, 103, 186, 186, 102, 102, 100,
	100, 100, 99, 99, 99, 241, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 89,
	89, 89, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 262, 262, 262,
	125, 127, 127, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 173, 173, 174, 174, 259,
	259, 259, 259, 259, 259, 260, 260, 261, 261, 261,
	261, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 164,
	124, 124, 124, 242, 175, 170, 170, 171, 171, 166,
	166, 166, 166, 166, 168, 168, 168, 168, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 167, 167, 169,
	169, 176, 176, 176, 176, 176, 176, 91, 91, 91,
	91, 243, 161, 161, 161, 161, 161, 161, 82, 82,
	82, 82, 86, 86, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 87, 87,
	87, 85, 85, 85, 85, 85, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 84, 131, 131, 244, 244, 245, 245, 246, 246,
	246, 247, 247, 247, 248, 248, 133, 133, 133, 138,
	138, 132, 132, 139, 139, 140, 140, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	14, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 9, 4, 7, 0, 3, 7, 4,
	1, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 6, 3, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 5, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 0, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 7, 1, 3, 3, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 5, 3, 1, 1, 1, 1,
	7, 9, 0, 2, 0, 1, 1, 2, 2, 2,
	1, 4, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 1, 1,
	1, 5, 5, 0, 1, 1, 2, 2, 3, 6,
	7, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 5, 1, 3, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 4, 4, 6, 4, 2, 1, 5, 4,
	4, 2, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 1, 1, 3,
	2, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 7, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 3, 0, 1, 2, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 2, 2, 2, 2, 1, 3, 2, 2, 2,
	2, 2, 1, 3, 2, 1, 3, 2, 0, 3,
	3, 5, 5, 4, 1, 1, 4, 1, 3, 1,
	3, 2, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 10,
	0, 1, 0, 6, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 6, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 1, 2, 0, 1, 2, 5, 0, 1, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 6, 6, 6, 1, 1, 1, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 0,
	1, 1, 5, 4, 4, 5, 5, 5, 5, 4,
	5, 5, 5, 5, 5, 5, 5, 1, 1, 1,
	4, 2, 2, 4, 2, 2, 4, 6, 2, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 2, 1, 3, 4, 3, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -289, -2, -1, -3, -4, -5, -6, -38, -20,
	-7, -32, -33, -34, -40, -45, -46, -47, -48, -16,
	-15, -14, 8, 10, -8, -149, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, 9, 49, -35,
	-36, -37, -41, -42, -43, -44, 281, 287, 323, -49,
	-51, -17, -18, -19, 177, -9, -10, -11, -12, -13,
	199, 198, 26, 197, 178, 120, 121, 123, 124, 30,
	-50, 54, 179, -52, 6, 414, -59, 27, -78, -146,
	57, -135, -137, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 371,
	216, 240, 243, 250, 120, 137, 131, 158, 150, 151,
	128, 246, 220, 221, 64, 123, 351, 337, 322, 126,
	235, 237, 239, 242, 222, 146, 142, 234, 218, 140,
	223, 28, 224, 163, 225, 226, 376, 333, 263, 355,
	339, 247, 141, 195, 194, 334, 238, 336, 164, 168,
	343, 287, 135, 136, 341, 345, 162, 196, 32, 373,
	34, 208, 346, 166, 161, 157, 354, 251, 249, 160,
	134, 156, 219, 38, 170, 169, 171, 317, 318, 319,
	320, 227, 228, 342, 153, 143, 267, 129, 18, 349,
	203, 338, 288, 229, 244, 206, 252, 165, 167, 190,
	210, 215, 375, 248, 347, 139, 207, 236, 202, 350,
	130, 281, 290, 230, 124, 241, 344, 353, 37, 303,
	133, 127, 193, 121, 212, 217, 231, 232, 233, 254,
	253, 245, 154, 209, 159, 132, 155, 122, 211, 352,
	304, 413, 265, 306, 152, 149, 213, 186, 374, 348,
	340, 125, 310, 305, 147, 11, -150, 19, 321, -39,
	181, -146, -5, -4, -32, -48, -56, -57, -58, -117,
	-119, -78, 54, -146, -219, -190, -218, -191, -221, -192,
	-145, 20, 178, 177, 211, 10, 179, 285, 185, 8,
	6, 286, 197, 9, 287, 289, 290, 293, 294, 295,
	31, 298, 299, 57, 60, -146, -219, -190, 215, 222,
	-63, -64, -118, 15, 5, 306, 214, -184, -182, -252,
	194, 193, 76, 357, 183, 296, -290, -249, 340, 339,
	-154, 338, 331, 333, 177, 185, 341, 32, 343, 344,
	334, 306, 125, 122, -206, 80, 130, 129, -206, 214,
	29, -212, 316, -211, -213, 343, 344, 354, -207, 342,
	-133, -146, 58, 59, 75, 151, 148, -64, -118, -63,
	-49, -51, 306, 214, 185, 184, 357, -251, 20, -256,
	21, 22, -1, -69, 206, -78, 119, -56, -129, -146,
	322, 89, -39, 119, 30, -120, -121, -122, -123, 41,
	45, 47, 42, 43, 44, 48, -292, 23, -142, -148,
	23, -143, 60, -144, -137, 57, 58, 59, -49, -51,
	51, 55, 11, 55, 54, 415, 58, 283, 297, 306,
	284, 296, 186, 214, 297, 214, 331, 186, 288, 291,
	292, 332, 51, 187, 51, -266, 354, -66, 17, -52,
	-51, 16, 20, 21, -180, 189, -180, 185, -180, 184,
	-291, 11, 99, 213, 212, 335, 332, -228, 336, 337,
	-154, -153, 97, -154, 184, 357, -250, 189, 347, 374,
	128, 129, 130, -216, 20, 29, 315, -190, 214, 55,
	89, 19, -214, 89, 100, -213, -213, -213, -214, 119,
	-96, 29, -144, 60, 116, -96, 29, 119, 30, 30,
	-65, -66, -52, -51, 56, 56, -250, -250, -250, -250,
	-250, -53, -54, 107, -166, -146, 81, -168, 57, -162,
	378, 379, 380, 381, 382, 383, 384, 386, 391, 393,
	397, 398, 399, 400, 404, 405, 410, 411, 412, 306,
	147, -163, -165, -282, -277, -161, 54, 105, 106, 113,
	82, -164, -241, 24, 365, -125, -126, -127, -128, -278,
	-276, 60, 65, 69, 71, 72, 70, 118, -51, -255,
	-261, -259, 148, 200, 144, 145, 8, 111, 316, 116,
	-262, 59, 58, 269, 75, 270, 271, 357, 266, 272,
	189, 321, 43, 273, 274, 275, 276, 277, 364, 278,
	44, 279, 268, 204, 280, 368, 367, 369, 361, 358,
	356, 359, 360, 362, 363, -257, 33, -48, 54, 30,
	54, -146, -114, 12, 119, 65, 60, -146, -205, -204,
	-129, -57, -57, -57, -57, 41, 41, 41, 46, 41,
	46, 41, -122, -143, -148, 56, -220, 184, 282, 210,
	-218, 211, 287, 290, -196, -195, -193, -145, 60, -191,
	-223, -129, -145, 332, -220, -196, -195, 324, -166, -146,
	-62, -61, -166, -196, 81, -190, -144, -146, -180, -78,
	-153, -153, -155, -291, -151, -291, 332, -114, -165, -228,
	-152, -146, -180, -196, 306, 24, 348, 349, 126, 129,
	128, 355, -217, 315, 20, -190, -211, -208, 60, 316,
	-195, -215, 51, 116, -263, -166, 29, -214, -214, -214,
	-215, 57, 115, -146, -196, -190, -146, -79, -78, -147,
	-144, -137, -113, 55, -112, 11, -141, 80, 78, 79,
	-146, 23, 119, -166, 96, -176, 89, 90, 91, 92,
	93, 94, 54, 54, 54, 54, 54, 54, 54, 54,
	-174, 54, 54, 54, 54, 54, -174, 54, 54, 54,
	102, 101, 112, 105, 106, 107, 108, 109, 110, 111,
	103, 104, 99, 81, 97, 98, 83, -51, -166, -171,
	-165, -165, -165, -165, -241, 54, -166, 54, -260, 54,
	-173, -174, 54, 60, 60, 60, 54, 54, 54, -165,
	54, -258, -172, -286, 255, -71, 56, -67, -146, -287,
	-288, -67, -70, -146, -64, -166, -139, -140, -132, -136,
	-143, -144, -137, 264, 182, 20, 80, 23, 25, 269,
	301, 83, 116, 16, 84, 148, 115, 271, 365, 270,
	177, 47, 75, 367, 369, 368, 358, 356, 308, 312,
	314, 311, 357, 331, 29, 10, 26, 198, 21, 22,
	109, 179, 200, 87, 88, 201, 24, 199, 72, 19,
	50, 11, 321, 13, 14, 272, 307, 189, 188, 99,
	324, 185, 45, 8, 118, 27, 96, 309, 41, 77,
	43, 97, 17, 359, 360, 31, 323, 370, 205, 111,
	273, 274, 275, 48, 81, 315, 70, 51, 78, 15,
	46, 98, 180, 364, 44, 214, 313, 277, 279, 255,
	278, 183, 6, 268, 366, 30, 197, 42, 184, 332,
	86, 187, 71, 204, 144, 145, 5, 76, 9, 49,
	52, 361, 362, 363, 33, 85, 12, 280, 276, 316,
	325, 326, 327, 328, 329, 330, 172, 173, 174, 175,
	176, 19, -39, 119, -114, 55, 89, -73, -72, 51,
	52, -74, 51, -72, 41, 41, -222, 107, 57, 55,
	-194, 307, 415, 58, 56, 55, -222, 187, 60, 55,
	18, 119, 55, -60, 25, 26, -197, -198, 313, 24,
	-183, 52, -178, -179, -177, -181, 29, -78, -114, -114,
	-114, -153, -147, -155, -150, -155, -151, 119, -134, -146,
	-197, 54, 127, 130, 130, 129, -190, 187, 54, 89,
	-215, -215, -215, -214, 29, -145, 51, 55, -114, -54,
	-55, -56, -166, -166, -166, -146, -146, 107, 70, 81,
	-162, -170, -171, -166, -124, 21, 20, -124, -124, -166,
	-124, 107, -171, -171, 56, -243, 65, -124, -124, -124,
	-124, -124, -124, -124, -163, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -163, -169, -175, -241, 54,
	99, 97, 98, 83, -165, -163, -163, 56, 55, -166,
	-242, 268, -170, 56, -171, -170, -163, -170, -124, 55,
	54, 56, 55, 33, 119, 55, 89, 56, 55, -65,
	119, 322, -146, -64, -204, -166, -166, 54, -166, 11,
	119, 119, -195, 16, 374, -145, -129, 187, -196, -267,
	188, 364, -166, -166, -146, -61, -202, 374, 315, 314,
	310, -199, -200, 309, 311, 308, 312, 51, 259, 260,
	261, 262, -177, -133, 115, 225, 151, 54, -114, -153,
	-153, -155, -146, -202, 56, 130, -196, -156, 60, -208,
	-215, -78, -78, -116, 13, 55, 119, 70, 56, 55,
	-166, -166, -166, 23, -171, 56, 56, 56, 56, -166,
	-166, -166, -166, -166, -166, -166, -171, -169, -165, -163,
	-163, -167, 201, 80, -166, 55, 52, 56, 56, 52,
	56, 55, 56, -166, -172, -265, -264, -263, 33, -48,
	-67, -258, -146, -288, -263, -146, -139, -136, -144, -137,
	65, -65, -68, -146, -196, 107, 107, 57, -145, 316,
	-145, -196, -209, 374, 27, 119, -201, -203, 317, 318,
	319, 320, 80, -200, 60, 60, 60, 60, -78, -138,
	89, -138, -138, -75, -76, -77, -80, -129, -114, -114,
	-153, -159, -160, -158, 264, -253, 316, 307, 56, -115,
	14, 16, -56, -146, 107, -166, 56, 56, 56, -81,
	116, 148, 200, 147, 146, 144, 140, 141, 139, 303,
	304, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	-167, 80, -165, -162, 56, -81, -96, -96, -163, 56,
	56, 55, -258, 56, 55, -145, 16, 23, -197, 287,
	184, -203, 65, 65, 65, 65, -200, 54, -96, -98,
	-144, 60, 116, 60, 56, 55, -82, -86, -83, -85,
	-84, -88, -87, 148, 149, 116, 152, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 30, 200, 144,
	145, 146, 147, 164, 131, 150, 372, 172, 132, 173,
	133, 174, 134, 175, 135, 136, 176, 137, 140, 141,
	139, -114, -158, 265, 31, 118, 267, 29, 263, 16,
	-166, -171, 56, -244, 54, -244, -244, -244, -244, -245,
	54, -246, 54, -245, -89, 136, 135, -89, -162, 56,
	56, 56, 56, -263, -146, -145, -145, -209, 288, -78,
	-185, -187, -129, 54, -94, -95, -111, 301, 216, -181,
	220, 64, 221, 322, 222, 185, 224, 225, 226, 196,
	227, 228, 229, 316, 230, 231, 232, 233, 284, 5,
	-77, -93, -92, -90, 70, 81, 29, 301, -91, 64,
	115, 239, 217, 240, -110, -157, 190, 76, 77, 289,
	192, -247, 304, 303, -244, -244, -244, -244, -244, 54,
	54, -244, -244, -244, -244, -245, -246, -245, 65, -254,
	-156, 65, 65, 65, -268, -228, 56, 55, -244, -166,
	-224, 206, 55, -111, -138, -138, -133, 115, -138, -138,
	-138, -138, 223, 223, -138, -138, -138, -138, -138, -138,
	-138, -138, -138, -138, -138, -138, -138, -138, -90, 70,
	-163, 60, -98, -99, 29, 238, 234, -100, 29, 218,
	219, -102, 54, 246, 77, 77, -78, 57, -248, 305,
	-131, 60, -131, 266, 56, 55, 56, 55, -274, 330,
	-270, -269, 325, 326, 327, 328, -188, -187, -60, 56,
	16, -111, 65, 65, -138, -138, 65, 60, 60, 60,
	-138, -138, 65, 60, -148, 65, 65, 65, 65, 29,
	60, -101, 29, 234, 238, 235, 236, 237, 65, 29,
	65, 29, 65, 29, -146, 54, 65, 54, -186, 54,
	56, 55, 56, 65, 65, -275, 188, -272, 329, -269,
	16, 327, 16, 16, -189, 196, 64, 374, 257, 258,
	-60, -225, 248, 249, -226, -232, 251, -96, -96, 60,
	60, -97, 217, -79, 56, -166, -104, -103, 370, -185,
	60, 56, 56, -281, 54, 65, -273, 325, 16, -271,
	60, 16, -271, -271, -138, 60, 256, -230, 252, 54,
	-228, 54, -228, 77, 260, 218, 219, 56, 56, -108,
	-109, -106, -107, 51, 334, 244, 245, 56, -285, 30,
	56, -280, -279, -130, -276, -146, 330, 16, 60, -271,
	65, -144, -227, 253, 65, -163, 54, -163, 54, -229,
	250, 54, -210, 247, 81, -107, 51, -106, 51, 10,
	9, -284, -283, -282, 56, 55, 119, 60, -234, 54,
	16, 56, -223, 56, -223, 54, 89, -163, 247, -105,
	241, 242, 30, 129, -105, 55, 89, -279, -146, -235,
	-233, 206, -226, 56, 56, -223, 65, 56, 70, 29,
	243, -283, 29, -166, 119, 56, 55, 57, -231, 254,
	56, -146, -233, -236, 33, 65, -240, -237, 54, -111,
	208, -240, -111, -239, -238, 253, 209, 56, 55, 57,
	54, -238, -237, -171, 56,
}

var yyDef = [...]int{
	19, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 404,
	405, 406, 0, 0, 263, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 199, 0, 180, 160,
	161, 162, 118, 119, 120, 121, 0, 0, 0, 307,
	-2, 407, 408, 409, -2, 264, 265, 266, 267, 268,
	196, 197, 198, -2, 0, 173, 0, 165, 165, 0,
	317, 0, 0, 328, 337, 19, 301, 0, 306, 577,
	588, 589, 590, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 0, 189, 0, 0, 193,
	0, 260, 185, 186, 187, 188, 0, 359, 360, 383,
	386, 389, 0, 179, 0, 0, 79, 447, 81, 449,
	0, 85, 87, 88, -2, 92, 93, 94, 95, 96,
	97, 98, 0, 100, 1077, 102, 1138, 105, 106, 107,
	0, 116, 117, -2, -2, 444, 0, 0, 1127, 61,
	-2, 0, 0, 0, 333, 478, 478, 0, 478, 0,
	455, 456, 457, 476, 477, 491, 0, 0, 236, 237,
	0, 253, 244, 253, 0, 228, 229, 230, 234, 235,
	254, 202, 174, 175, 164, 0, 169, 0, 163, 0,
	0, 132, 0, 137, 0, 1076, 1142, 1092, 0, 1109,
	0, 158, 151, 152, 876, 1035, 0, 312, 0, 318,
	0, 317, 202, 202, 202, 202, 202, 0, 338, 339,
	340, 341, 3, 0, 0, 305, 0, 346, 190, 591,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 373, 0, 0, 0, 0, 387, 388, 390,
	0, 392, 393, 399, 400, 401, 402, 403, 0, 317,
	75, 0, 0, 0, 0, 0, 451, 86, 115, 89,
	90, 0, 110, 112, 114, 113, 99, 111, 101, 103,
	104, 109, 75, 0, 0, 0, 62, 311, 0, 330,
	332, 0, 334, 335, 0, 0, 0, 0, 0, 478,
	0, 249, 250, 244, 244, 238, 246, 0, 251, 252,
	0, 346, 0, 0, 0, 478, 0, 0, 0, 0,
	167, 0, 172, 122, 127, 125, 126, 128, 0, 0,
	0, 0, 0, 156, 157, 0, 0, 0, 0, 0,
	145, 148, 569, 570, 571, 149, 150, 0, 877, 878,
	309, 313, 329, 331, 326, 327, 0, 0, 0, 0,
	0, 354, 348, 350, 394, 27, 0, 783, 588, 787,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1195, 1197,
	-2, -2, -2, 1204, 1208, 1209, 1214, 1215, 1216, -2,
	-2, 796, 658, 659, 660, 661, 0, 0, 0, 0,
	0, 668, 669, 0, 0, 674, 675, 676, 677, 37,
	38, 812, 813, 814, 815, 816, 817, 750, 645, 0,
	735, 725, 0, 745, 763, 764, 0, 0, 0, 0,
	0, 39, 40, 741, 742, 743, 744, 746, 747, 748,
	749, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 765, 767, 737, 738, 739, 740, 729,
	730, 731, 732, 733, 734, 275, 293, 277, 0, 282,
	0, 578, 317, 0, 0, 191, 0, 261, 346, 182,
	0, 377, 371, 0, 364, 375, 376, 367, 0, 369,
	0, 365, 366, 384, 391, 385, 0, 76, 77, 78,
	80, 91, 0, 0, 69, 432, 438, 435, 445, 448,
	0, 83, 450, 108, 0, 64, 0, 0, 314, 27,
	319, 320, 323, 419, 0, 446, 470, -2, 0, 346,
	346, 346, 244, 0, 246, 0, 246, 241, 245, 0,
	255, 257, 0, 419, 1169, 203, 176, 177, 0, 0,
	171, 0, 0, 129, 130, 131, 138, 133, 135, 0,
	0, 139, 153, 154, 155, 299, 300, 0, 0, 0,
	143, 0, 0, 159, 269, 270, 0, 272, 575, 273,
	397, 398, 346, 0, 355, 0, 351, 0, 0, 0,
	395, 0, 0, 782, 0, 0, 801, 802, 803, 804,
	805, 806, 775, 770, 770, 770, 0, 770, 0, 0,
	711, 0, 770, 770, 770, 770, 712, 770, 770, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 777, 0,
	664, 665, 666, 667, 670, 0, 0, 775, 714, 0,
	715, 726, 0, 718, 719, 720, 775, 0, 775, 724,
	770, 276, 290, 0, 294, 0, 0, 286, 288, 281,
	283, 0, 0, 303, 312, 347, 592, 0, 883, -2,
	885, -2, -2, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 0, 194, 0, 317, 0, 0, 361, 378, 0,
	0, 362, 0, 363, 368, 370, 0, 70, 74, 0,
	434, 0, 0, 437, 82, 0, 0, 0, 58, 0,
	0, 0, 0, 322, 324, 325, 411, 420, 0, 479,
	0, 0, 475, -2, 482, 0, 488, 0, 227, 231,
	232, 346, 247, 244, 248, 244, 246, 0, 256, 259,
	411, 0, 178, 166, 168, 0, 124, 0, 0, 0,
	140, 141, 142, 0, 146, 147, 0, 0, 344, 349,
	356, 357, 779, 780, 781, 396, 28, 352, 784, 0,
	786, 0, 776, 777, 0, 771, 772, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 788, 799, 800, 0,
	0, 0, 0, 0, 797, 792, 0, 662, 0, 0,
	769, 773, 0, 736, 0, 0, 0, 0, 0, 293,
	295, 0, 0, 293, 0, 0, 0, 302, 0, 274,
	0, 0, 262, 312, 183, 184, 379, 0, 372, 0,
	0, 0, 433, 0, 0, 436, 84, 0, 66, 0,
	59, 60, 315, 316, 28, 321, 410, 0, 421, 422,
	423, 424, 425, 0, 0, 0, 0, 0, 471, 472,
	473, 474, 483, 879, 879, 879, 0, 579, 239, 346,
	346, 244, 258, 204, 0, 170, 123, 0, 216, 134,
	144, 271, 576, 342, 0, 0, 0, 785, 710, 0,
	0, 0, 0, 0, 0, 699, 693, 694, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 797, 793,
	0, 790, 0, 0, 778, 0, 0, 713, 716, 0,
	721, 0, 723, 0, 291, 0, 296, 297, 293, 280,
	287, 279, 289, 284, 285, 304, 593, 884, 881, 882,
	192, 181, 0, 381, 68, 71, 72, 73, 439, 0,
	440, 419, 65, 0, 0, 0, 412, 413, 0, 0,
	0, 0, 0, 427, 428, 429, 430, 431, 0, 0,
	880, 0, 0, 0, 580, 581, 583, 0, 242, 240,
	346, 200, 205, 206, 0, 210, 0, 0, 136, 336,
	0, 0, 358, 29, 353, 778, 695, 696, 697, 0,
	864, 864, 680, 864, 864, 864, 866, 868, 866, 689,
	689, 698, 700, 701, 704, 702, 705, 706, 692, 774,
	791, 0, 798, 794, 663, 0, 0, 0, 0, 703,
	292, 0, 278, 380, 0, 443, 0, 0, 66, 0,
	0, 414, 415, 416, 417, 418, 426, 0, 484, 485,
	572, 573, 574, 486, -2, 0, -2, 871, 819, 820,
	821, 864, 823, 864, 864, 864, 864, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 0, 0, 841, 864,
	864, 864, 864, 861, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 866, 868,
	866, 243, 207, 208, 209, 0, 212, 213, 215, 0,
	343, 345, 671, 678, 0, 679, 681, 682, 683, 684,
	0, 685, 0, 686, 687, 690, 691, 688, 795, 672,
	673, 717, 722, 298, 382, 441, 442, 63, 67, 49,
	0, 466, 864, 0, 492, -2, 529, 879, 879, 0,
	879, 879, 879, 879, 0, 0, 879, 879, 879, 879,
	879, 879, 879, 879, 879, 879, 879, 879, 879, 879,
	582, 584, -2, 596, 598, 0, 0, 601, 602, 0,
	0, 0, 0, 637, 608, 0, 0, 809, 810, 0,
	614, 874, 872, 873, 822, 846, 847, 848, 849, 0,
	0, 842, 843, 844, 845, 838, 839, 840, 0, 214,
	201, 0, 0, 0, 43, 0, 459, 0, 323, 0,
	489, 0, 487, 531, 0, 0, 879, 879, 0, 0,
	0, 0, 879, 879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 599,
	600, 603, 604, 605, 642, 643, 644, 606, 639, 640,
	641, 607, 0, 0, 807, 808, 635, 615, 818, 875,
	0, 862, 0, 211, 865, 0, 869, 0, 41, 45,
	50, 51, 0, 0, 0, 0, 458, 467, 468, 323,
	525, 530, 532, 533, 0, 0, 536, 537, 538, 539,
	0, 0, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 563, 564, 565, 566, 567, 568, 552, 553,
	554, 555, 556, 557, 560, 0, 0, 0, 630, 0,
	859, 0, 860, 0, 0, 30, 0, 47, 0, 52,
	0, 0, 0, 0, 460, 879, 0, 0, 464, 465,
	469, 514, 0, 0, 520, 0, 526, 534, 535, 540,
	541, 558, 0, 0, 638, 0, 617, 631, 0, 0,
	863, 867, 870, 21, 0, 0, 44, 0, 0, 53,
	57, 0, 55, 56, 0, 462, 0, 494, 0, 0,
	0, 0, 0, 523, 0, 561, 562, 559, 609, 616,
	618, 619, 620, 0, 632, 633, 634, 636, 20, 0,
	31, 0, 33, 35, 36, 585, 42, 0, 46, 54,
	461, 463, 496, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 0, 621, 0, 622, 0, 0,
	0, 22, 23, 0, 32, 0, 0, 48, 493, 0,
	525, 516, 0, 518, 0, 0, 0, 0, 612, 623,
	625, 626, 0, 0, 624, 0, 0, 34, 586, 0,
	498, 0, 512, 517, 519, 0, 524, 522, 627, 629,
	628, 24, 25, 26, 0, 497, 0, 510, 495, 0,
	521, 587, 499, -2, 0, 513, 500, -2, 0, 508,
	0, 501, 509, 0, 504, 0, 0, 503, 0, -2,
	0, 505, -2, 0, 511,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 110, 102, 3,
	54, 56, 107, 105, 55, 106, 119, 108, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 414,
	90, 89, 91, 3, 415, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 112, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 101, 3, 113,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 103, 104, 109, 111, 114, 115, 116, 117,
	118, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:458
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:464
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:486
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:490
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:496
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 21:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:515
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:521
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:525
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:531
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:538
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:547
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:551
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:555
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:568
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:574
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:583
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:594
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:604
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:608
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:614
		{
			v := strings.ToLower(yyDollar[1].str)
			isGlobal := false
			if strings.HasPrefix(v, "global.") {
				isGlobal = true
			}
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:629
		{
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:638
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:642
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:651
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:659
		{
			yyVAL.str = ""
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:663
		{
			yyVAL.str = yyDollar[3].str
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:668
		{
			yyVAL.str = "\n"
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:672
		{
			yyVAL.str = yyDollar[3].str
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:681
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  []byte("\\")[0],
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:705
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:709
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:715
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:721
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EscapedBy:  byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:733
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:744
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:761
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:765
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:812
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:816
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:826
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:846
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:852
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:858
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:865
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:873
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:881
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:885
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:889
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:893
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:899
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:903
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:909
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:925
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:929
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:935
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:939
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:943
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:947
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:951
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:955
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:959
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:963
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:967
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:971
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:975
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:979
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:983
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:987
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:991
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:995
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:999
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1003
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1007
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1011
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1015
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1019
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1023
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1027
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1031
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1035
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1039
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1043
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1047
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1051
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1055
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1081
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1093
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1097
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1131
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1135
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1142
		{
			yyVAL.str = yyDollar[3].str
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1148
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1152
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1158
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1166
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1183
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1199
		{
			v := strings.ToLower(yyDollar[1].str)
			if v != "session" && v != "global" && v != "local" {
				yylex.Error("expecting session or global")
				return 1
			}
			var isGlobal bool
			if v == "global" {
				isGlobal = true
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   yyDollar[3].str,
				Value:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1217
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1224
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1231
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
				Reserved: tree.NewNumVal(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1239
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1274
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1284
		{
			yyVAL.str = yyDollar[1].str
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1291
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1308
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1347
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1351
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1359
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1364
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1369
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1375
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1379
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1385
		{
			yyLOCAL = &tree.Update{
				Table:   yyDollar[2].tableExprUnion(),
				Exprs:   yyDollar[4].updateExprsUnion(),
				Where:   yyDollar[5].whereUnion(),
				OrderBy: yyDollar[6].orderByUnion(),
				Limit:   yyDollar[7].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1402
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1417
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1423
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1428
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "row")
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[5].statementUnion(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "")
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1475
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1492
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1501
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1507
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1511
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1521
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1533
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1543
		{
			yyVAL.item = nil
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1548
		{
			yyVAL.item = nil
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1602
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1606
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1622
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1644
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1696
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1700
		{
			yyVAL.str = yyDollar[2].str
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1706
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1729
		{
			yyLOCAL = &tree.ShowCreate{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[1].str, yyDollar[3].str, yyDollar[5].str})
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1776
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1785
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1794
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1804
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.Delete{
				Table:   yyDollar[3].tableExprUnion(),
				Where:   yyDollar[4].whereUnion(),
				OrderBy: yyDollar[5].orderByUnion(),
				Limit:   yyDollar[6].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1840
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1847
		{
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(yyDollar[1].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1853
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1861
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(yyDollar[4].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1875
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1898
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1902
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1917
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1921
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1927
		{
			yyVAL.str = yyDollar[1].str
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1931
		{
			yyVAL.str = yyDollar[3].str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1937
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1941
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1947
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1952
		{
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1967
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1983
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1989
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1993
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:1999
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2003
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2033
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2039
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2056
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2062
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2068
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2072
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2083
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2087
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2108
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2112
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2237
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2241
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2265
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier("dual"), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2273
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2291
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2339
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2343
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2353
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2357
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2361
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2365
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2375
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2381
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2387
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2391
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2395
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2405
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2425
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2431
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2452
		{
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2453
		{
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2469
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2477
		{
			yyVAL.str = yyDollar[2].str
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2486
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2494
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2537
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2543
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2547
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2557
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2561
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2565
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2578
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2583
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2588
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2593
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2599
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2603
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2607
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2631
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2635
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2641
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2662
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2671
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2692
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2711
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2720
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2724
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2765
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2788
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2818
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2832
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2836
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2842
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2852
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2856
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2860
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2864
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2868
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2901
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2907
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2911
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2965
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2992
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2998
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3002
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3031
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3037
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3041
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3063
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3067
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3081
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3085
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3095
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3099
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3165
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3169
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3187
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3193
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3197
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3201
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3207
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3211
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3215
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3219
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3223
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3227
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3231
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3235
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3239
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3243
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3247
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3251
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3255
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3259
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3263
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3267
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3279
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3283
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3311
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3315
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3321
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3325
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3329
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3335
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3339
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3347
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3351
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3355
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3371
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3375
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3384
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3389
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3395
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3402
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3406
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3412
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:3418
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3424
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3428
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3432
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3443
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3447
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3451
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3460
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3466
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3470
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3476
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3480
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3484
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3488
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3492
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3496
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false))
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3500
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3504
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3508
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3512
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3520
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3524
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3543
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3547
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3551
		{
			yyVAL.str = yyDollar[2].str
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3608
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3614
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3628
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3632
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3641
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3665
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3670
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3674
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3696
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3700
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3704
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3708
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3712
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3716
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3720
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3724
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3728
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3732
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3744
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3750
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3754
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3758
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3762
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3770
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3774
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3778
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3782
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3786
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3790
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3794
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3799
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3807
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3816
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3820
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3824
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3828
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3872
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3886
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3901
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3916
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3961
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3974
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3989
		{
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3995
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4004
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4012
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4029
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4038
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4047
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumVal(constant.MakeString("*"), "*", false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4101
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4110
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4119
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4165
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4194
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4206
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4214
		{
			cn := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4225
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4234
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4243
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4252
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4260
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4270
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4278
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4291
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4301
		{
			yyLOCAL = yyDollar[2].numValUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4314
		{
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4316
		{
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4356
		{
			yyLOCAL = &tree.IntervalExpr{
				Expr: yyDollar[2].exprUnion(),
				Type: yyDollar[3].intervalTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4364
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4368
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4372
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IntervalType
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.INTERVAL_TYPE_SECOND
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4393
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4399
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4403
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4436
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4440
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4447
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4451
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4455
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4459
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4463
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4467
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4471
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4475
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4485
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4491
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4495
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4502
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4510
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4514
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4518
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4529
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4537
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.NumVal
//line mysql_sql.y:4547
		{
			ival, errStr := getInt64(yyDollar[1].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			if ival > 0 {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, false, ival)
			} else {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, true, ival)
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4562
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4566
		{
			ival := getUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4571
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithResFoalt(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, fval)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4576
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(true), "", false)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4580
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(false), "", false)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4584
		{
			yyLOCAL = tree.NewNumVal(constant.MakeUnknown(), "", false)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4594
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4605
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4610
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4628
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4678
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4704
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4797
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4812
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4856
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4898
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4913
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4942
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5089
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5140
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5145
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5151
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5161
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5168
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5177
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5214
		{
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5226
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
