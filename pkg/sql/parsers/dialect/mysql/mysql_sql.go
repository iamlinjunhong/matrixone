// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const EXTERNAL = 57597
const LOCALFILE = 57598
const URL = 57599
const S3OPTION = 57600
const PREPARE = 57601
const DEALLOCATE = 57602
const PROPERTIES = 57603
const PARSER = 57604
const VISIBLE = 57605
const INVISIBLE = 57606
const BTREE = 57607
const HASH = 57608
const RTREE = 57609
const BSI = 57610
const ZONEMAP = 57611
const LEADING = 57612
const BOTH = 57613
const TRAILING = 57614
const UNKNOWN = 57615
const EXPIRE = 57616
const ACCOUNT = 57617
const UNLOCK = 57618
const DAY = 57619
const NEVER = 57620
const SECOND = 57621
const ASCII = 57622
const COALESCE = 57623
const COLLATION = 57624
const HOUR = 57625
const MICROSECOND = 57626
const MINUTE = 57627
const MONTH = 57628
const QUARTER = 57629
const REPEAT = 57630
const REVERSE = 57631
const ROW_COUNT = 57632
const WEEK = 57633
const REVOKE = 57634
const FUNCTION = 57635
const PRIVILEGES = 57636
const TABLESPACE = 57637
const EXECUTE = 57638
const SUPER = 57639
const GRANT = 57640
const OPTION = 57641
const REFERENCES = 57642
const REPLICATION = 57643
const SLAVE = 57644
const CLIENT = 57645
const USAGE = 57646
const RELOAD = 57647
const FILE = 57648
const TEMPORARY = 57649
const ROUTINE = 57650
const EVENT = 57651
const SHUTDOWN = 57652
const NULLX = 57653
const AUTO_INCREMENT = 57654
const APPROXNUM = 57655
const SIGNED = 57656
const UNSIGNED = 57657
const ZEROFILL = 57658
const ADMIN_NAME = 57659
const RANDOM = 57660
const SUSPEND = 57661
const ATTRIBUTE = 57662
const HISTORY = 57663
const REUSE = 57664
const CURRENT = 57665
const OPTIONAL = 57666
const FAILED_LOGIN_ATTEMPTS = 57667
const PASSWORD_LOCK_TIME = 57668
const UNBOUNDED = 57669
const SECONDARY = 57670
const USER = 57671
const IDENTIFIED = 57672
const CIPHER = 57673
const ISSUER = 57674
const X509 = 57675
const SUBJECT = 57676
const SAN = 57677
const REQUIRE = 57678
const SSL = 57679
const NONE = 57680
const PASSWORD = 57681
const MAX_QUERIES_PER_HOUR = 57682
const MAX_UPDATES_PER_HOUR = 57683
const MAX_CONNECTIONS_PER_HOUR = 57684
const MAX_USER_CONNECTIONS = 57685
const FORMAT = 57686
const VERBOSE = 57687
const CONNECTION = 57688
const LOAD = 57689
const INFILE = 57690
const TERMINATED = 57691
const OPTIONALLY = 57692
const ENCLOSED = 57693
const ESCAPED = 57694
const STARTING = 57695
const LINES = 57696
const DATABASES = 57697
const TABLES = 57698
const EXTENDED = 57699
const FULL = 57700
const PROCESSLIST = 57701
const FIELDS = 57702
const COLUMNS = 57703
const OPEN = 57704
const ERRORS = 57705
const WARNINGS = 57706
const INDEXES = 57707
const SCHEMAS = 57708
const NAMES = 57709
const GLOBAL = 57710
const SESSION = 57711
const ISOLATION = 57712
const LEVEL = 57713
const READ = 57714
const WRITE = 57715
const ONLY = 57716
const REPEATABLE = 57717
const COMMITTED = 57718
const UNCOMMITTED = 57719
const SERIALIZABLE = 57720
const LOCAL = 57721
const CURRENT_TIMESTAMP = 57722
const DATABASE = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const UTC_DATE = 57727
const UTC_TIME = 57728
const UTC_TIMESTAMP = 57729
const REPLACE = 57730
const CONVERT = 57731
const SEPARATOR = 57732
const CURRENT_DATE = 57733
const CURRENT_USER = 57734
const CURRENT_ROLE = 57735
const SECOND_MICROSECOND = 57736
const MINUTE_MICROSECOND = 57737
const MINUTE_SECOND = 57738
const HOUR_MICROSECOND = 57739
const HOUR_SECOND = 57740
const HOUR_MINUTE = 57741
const DAY_MICROSECOND = 57742
const DAY_SECOND = 57743
const DAY_MINUTE = 57744
const DAY_HOUR = 57745
const YEAR_MONTH = 57746
const SQL_TSI_HOUR = 57747
const SQL_TSI_DAY = 57748
const SQL_TSI_WEEK = 57749
const SQL_TSI_MONTH = 57750
const SQL_TSI_QUARTER = 57751
const SQL_TSI_YEAR = 57752
const SQL_TSI_SECOND = 57753
const SQL_TSI_MINUTE = 57754
const RECURSIVE = 57755
const CONFIG = 57756
const MATCH = 57757
const AGAINST = 57758
const BOOLEAN = 57759
const LANGUAGE = 57760
const WITH = 57761
const QUERY = 57762
const EXPANSION = 57763
const ADDDATE = 57764
const BIT_AND = 57765
const BIT_OR = 57766
const BIT_XOR = 57767
const CAST = 57768
const COUNT = 57769
const APPROX_COUNT_DISTINCT = 57770
const APPROX_PERCENTILE = 57771
const CURDATE = 57772
const CURTIME = 57773
const DATE_ADD = 57774
const DATE_SUB = 57775
const EXTRACT = 57776
const GROUP_CONCAT = 57777
const MAX = 57778
const MID = 57779
const MIN = 57780
const NOW = 57781
const POSITION = 57782
const SESSION_USER = 57783
const STD = 57784
const STDDEV = 57785
const STDDEV_POP = 57786
const STDDEV_SAMP = 57787
const SUBDATE = 57788
const SUBSTR = 57789
const SUBSTRING = 57790
const SUM = 57791
const SYSDATE = 57792
const SYSTEM_USER = 57793
const TRANSLATE = 57794
const TRIM = 57795
const VARIANCE = 57796
const VAR_POP = 57797
const VAR_SAMP = 57798
const AVG = 57799
const JSON_EXTRACT = 57800
const ROW = 57801
const OUTFILE = 57802
const HEADER = 57803
const MAX_FILE_SIZE = 57804
const FORCE_QUOTE = 57805
const UNUSED = 57806

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"S3OPTION",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7210

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	21, 432,
	-2, 413,
	-1, 68,
	199, 583,
	-2, 630,
	-1, 85,
	226, 291,
	227, 291,
	-2, 312,
	-1, 366,
	21, 433,
	-2, 396,
	-1, 441,
	94, 1312,
	105, 1312,
	124, 1312,
	-2, 1124,
	-1, 471,
	21, 433,
	-2, 396,
	-1, 631,
	58, 1464,
	-2, 1471,
	-1, 639,
	58, 1465,
	-2, 1479,
	-1, 641,
	58, 1461,
	-2, 1481,
	-1, 642,
	58, 1462,
	-2, 1482,
	-1, 647,
	58, 1463,
	-2, 1488,
	-1, 648,
	58, 1466,
	-2, 1489,
	-1, 649,
	58, 1467,
	-2, 1490,
	-1, 650,
	58, 886,
	-2, 1491,
	-1, 651,
	58, 887,
	-2, 1492,
	-1, 652,
	58, 888,
	-2, 1493,
	-1, 654,
	58, 1468,
	-2, 1495,
	-1, 655,
	58, 906,
	-2, 1496,
	-1, 656,
	58, 905,
	-2, 1497,
	-1, 659,
	58, 1469,
	-2, 1500,
	-1, 660,
	58, 1470,
	-2, 1501,
	-1, 666,
	58, 968,
	-2, 1312,
	-1, 667,
	58, 977,
	-2, 1337,
	-1, 668,
	58, 981,
	-2, 1376,
	-1, 669,
	58, 992,
	-2, 1436,
	-1, 670,
	58, 994,
	-2, 1446,
	-1, 671,
	58, 982,
	-2, 1451,
	-1, 672,
	58, 990,
	-2, 1455,
	-1, 673,
	58, 971,
	-2, 1456,
	-1, 831,
	1, 609,
	60, 609,
	482, 609,
	-2, 616,
	-1, 970,
	21, 432,
	-2, 814,
	-1, 1017,
	124, 1134,
	-2, 1132,
	-1, 1019,
	124, 531,
	-2, 1129,
	-1, 1020,
	124, 532,
	-2, 1130,
	-1, 1228,
	1, 610,
	60, 610,
	482, 610,
	-2, 616,
	-1, 1317,
	58, 1036,
	-2, 1453,
	-1, 1318,
	58, 1037,
	-2, 1454,
	-1, 1478,
	56, 353,
	59, 353,
	-2, 720,
	-1, 1813,
	79, 616,
	120, 616,
	156, 616,
	159, 616,
	-2, 668,
	-1, 1815,
	260, 781,
	-2, 762,
	-1, 1838,
	56, 353,
	59, 353,
	-2, 721,
	-1, 1925,
	79, 616,
	120, 616,
	156, 616,
	159, 616,
	-2, 669,
	-1, 1953,
	260, 781,
	-2, 763,
	-1, 2351,
	59, 642,
	60, 642,
	-2, 616,
	-1, 2355,
	59, 642,
	60, 642,
	-2, 616,
	-1, 2367,
	59, 646,
	60, 646,
	-2, 616,
	-1, 2371,
	59, 647,
	60, 647,
	-2, 616,
}

const yyPrivate = 57344

const yyLast = 21506

var yyAct = [...]int{
	815, 1320, 2357, 2362, 2355, 2354, 2332, 2201, 806, 1986,
	674, 2321, 2281, 695, 676, 1321, 1277, 2265, 1965, 2239,
	2173, 2266, 2177, 2154, 1911, 1921, 1214, 900, 102, 1984,
	607, 1985, 1807, 319, 325, 598, 325, 2014, 865, 802,
	2161, 367, 1273, 105, 366, 1973, 707, 63, 323, 22,
	1462, 1867, 329, 1909, 1831, 2003, 1632, 1954, 836, 1481,
	809, 1666, 1972, 1628, 549, 538, 101, 1617, 885, 1878,
	1870, 395, 439, 1860, 1882, 630, 1502, 311, 859, 63,
	1272, 1491, 1819, 1637, 1633, 999, 1706, 1696, 1193, 1714,
	1647, 824, 675, 440, 1685, 1565, 1235, 1493, 1626, 466,
	551, 102, 1014, 1643, 1017, 335, 1000, 1008, 1009, 1528,
	838, 1404, 1390, 685, 1308, 878, 1501, 862, 62, 1459,
	1259, 3, 1234, 1229, 1929, 322, 15, 320, 6, 825,
	817, 447, 30, 321, 5, 442, 800, 805, 444, 468,
	860, 446, 677, 1322, 1319, 63, 1190, 22, 1334, 622,
	882, 1220, 845, 846, 847, 481, 312, 792, 397, 906,
	937, 1275, 903, 315, 30, 821, 799, 590, 431, 1299,
	394, 574, 337, 338, 1913, 1803, 2246, 12, 520, 7,
	4, 1449, 98, 2021, 1206, 1917, 1806, 812, 1197, 1002,
	93, 621, 324, 2228, 608, 97, 96, 27, 87, 69,
	97, 97, 2218, 27, 87, 69, 97, 1981, 27, 87,
	69, 576, 500, 445, 1224, 97, 1204, 1194, 97, 536,
	465, 310, 568, 1444, 15, 519, 6, 97, 327, 1451,
	30, 1461, 5, 332, 392, 413, 867, 868, 2253, 562,
	563, 416, 757, 94, 432, 849, 1591, 808, 94, 94,
	777, 2269, 2270, 517, 94, 754, 513, 2243, 577, 2012,
	793, 1620, 797, 94, 2110, 2024, 94, 560, 402, 2107,
	559, 562, 563, 1808, 1460, 756, 2251, 408, 2015, 2016,
	2017, 2018, 1621, 811, 1622, 1432, 796, 484, 475, 2176,
	1799, 879, 1827, 452, 451, 453, 1200, 417, 1676, 1849,
	508, 582, 1678, 1995, 1221, 875, 2000, 1866, 1865, 504,
	583, 515, 516, 474, 1970, 1609, 514, 2082, 1667, 1441,
	2091, 503, 473, 450, 1992, 788, 2255, 325, 509, 102,
	2279, 1311, 1312, 1313, 2227, 326, 1208, 363, 1672, 2076,
	364, 363, 1309, 2348, 364, 1673, 1674, 2363, 2288, 2250,
	368, 418, 470, 472, 410, 444, 471, 409, 334, 2203,
	1675, 2295, 2225, 63, 63, 446, 2070, 491, 2268, 2342,
	2175, 455, 795, 365, 810, 2039, 68, 2038, 95, 1500,
	2257, 2258, 1533, 1312, 1313, 1611, 2364, 448, 2209, 407,
	1467, 1468, 1469, 1470, 395, 1464, 85, 411, 2199, 2200,
	484, 2203, 586, 1495, 2230, 2231, 511, 558, 557, 539,
	493, 2358, 506, 2333, 2027, 525, 1566, 467, 333, 1205,
	1641, 2105, 569, 575, 507, 510, 1670, 561, 512, 2162,
	2163, 2164, 2166, 2165, 440, 440, 440, 445, 495, 602,
	602, 449, 540, 541, 443, 543, 505, 1437, 30, 30,
	819, 537, 1286, 486, 485, 1198, 325, 625, 625, 542,
	794, 1614, 544, 2369, 328, 389, 390, 391, 1862, 1861,
	759, 546, 624, 624, 423, 604, 1284, 1283, 600, 600,
	477, 478, 1521, 2139, 1282, 580, 578, 579, 775, 870,
	610, 2061, 871, 454, 311, 1281, 2065, 869, 553, 420,
	602, 760, 602, 474, 492, 565, 566, 421, 2330, 2285,
	1841, 1656, 807, 63, 1623, 755, 1530, 1482, 1439, 489,
	1438, 1431, 1426, 425, 424, 1250, 63, 1212, 2256, 893,
	1185, 918, 763, 585, 606, 63, 487, 784, 1642, 814,
	469, 602, 818, 1848, 831, 2174, 1310, 955, 395, 1608,
	1660, 837, 554, 479, 1606, 102, 552, 562, 563, 827,
	2229, 2319, 522, 500, 2324, 524, 486, 485, 2308, 854,
	404, 1463, 406, 416, 602, 102, 1679, 403, 401, 400,
	412, 405, 880, 414, 415, 384, 1668, 2083, 440, 1195,
	602, 1195, 852, 842, 1195, 562, 563, 1532, 1671, 1607,
	1912, 1802, 820, 1207, 596, 597, 886, 894, 1196, 1996,
	832, 30, 886, 886, 783, 602, 780, 899, 102, 102,
	30, 70, 779, 1982, 2368, 915, 70, 70, 548, 396,
	584, 804, 70, 786, 874, 855, 904, 801, 310, 1445,
	609, 70, 919, 766, 70, 840, 902, 826, 620, 752,
	761, 572, 573, 70, 789, 1612, 901, 901, 843, 844,
	1494, 443, 2213, 905, 841, 857, 782, 762, 781, 778,
	1192, 798, 564, 2325, 803, 567, 850, 851, 593, 594,
	595, 972, 613, 614, 615, 616, 617, 618, 619, 1638,
	1641, 494, 876, 2066, 2067, 971, 2140, 2142, 2143, 2144,
	2141, 813, 386, 979, 2063, 499, 2113, 589, 2062, 1498,
	1499, 1804, 383, 382, 591, 848, 1683, 833, 834, 881,
	1191, 898, 981, 1497, 1615, 592, 970, 1428, 1288, 770,
	771, 476, 1774, 377, 1405, 1397, 1324, 1323, 856, 555,
	911, 458, 463, 464, 858, 1457, 422, 891, 892, 1395,
	1396, 1394, 801, 914, 911, 408, 877, 1006, 1006, 1011,
	408, 888, 889, 890, 387, 1957, 958, 959, 960, 961,
	962, 955, 823, 973, 974, 975, 976, 380, 588, 896,
	1019, 897, 912, 913, 914, 911, 895, 1405, 837, 1571,
	2072, 1776, 602, 2071, 2322, 2323, 1473, 375, 445, 1960,
	977, 2033, 1823, 446, 1818, 1955, 2056, 1020, 1642, 2353,
	1968, 1969, 995, 1635, 63, 774, 1956, 1636, 1639, 945,
	102, 102, 1329, 773, 912, 913, 914, 911, 556, 381,
	2341, 2150, 410, 102, 1236, 409, 2338, 410, 426, 2305,
	409, 912, 913, 914, 911, 2289, 1187, 1332, 2187, 319,
	1961, 376, 419, 2184, 1779, 1240, 1252, 1333, 1217, 1219,
	2148, 2146, 2183, 904, 2156, 1005, 2149, 2134, 2133, 1640,
	2340, 1232, 2136, 2132, 989, 445, 1993, 2129, 2123, 1753,
	1750, 1751, 1752, 1189, 2120, 1784, 1846, 1783, 1782, 1780,
	905, 1215, 1216, 2119, 602, 2147, 2145, 1355, 1904, 30,
	460, 461, 462, 385, 886, 886, 886, 2135, 625, 1278,
	102, 1994, 998, 1280, 2022, 1474, 2008, 1304, 2007, 1306,
	2006, 1847, 2002, 624, 1184, 1018, 2001, 1300, 1301, 1302,
	1303, 1183, 1845, 1293, 1967, 1903, 1634, 1330, 1331, 1012,
	1677, 1013, 912, 913, 914, 911, 1244, 1781, 1188, 1327,
	1603, 1763, 764, 1241, 1242, 1243, 1230, 912, 913, 914,
	911, 1963, 1369, 1644, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 2339, 995, 1285, 1399,
	1400, 2367, 2278, 1962, 1964, 1279, 1574, 363, 1298, 1573,
	364, 2261, 1414, 828, 829, 830, 1406, 1314, 1409, 1540,
	1246, 2346, 1248, 2155, 1416, 1247, 848, 1249, 1253, 1245,
	1922, 2244, 912, 913, 914, 911, 2207, 1296, 912, 913,
	914, 911, 954, 953, 963, 964, 956, 957, 958, 959,
	960, 961, 962, 955, 2206, 1648, 1351, 2194, 1348, 1289,
	1290, 1291, 1350, 1347, 1349, 1353, 1354, 1970, 2182, 2137,
	1352, 2130, 912, 913, 914, 911, 822, 1297, 2262, 1958,
	1398, 2126, 2125, 2234, 1785, 1786, 956, 957, 958, 959,
	960, 961, 962, 955, 2233, 1325, 1326, 2124, 1328, 1392,
	912, 913, 914, 911, 1364, 1365, 1366, 1367, 1368, 2084,
	2058, 1374, 1375, 1376, 1377, 966, 2023, 969, 953, 963,
	964, 956, 957, 958, 959, 960, 961, 962, 955, 1420,
	2180, 967, 968, 965, 2019, 954, 953, 963, 964, 956,
	957, 958, 959, 960, 961, 962, 955, 1408, 1410, 1411,
	1407, 2307, 912, 913, 914, 911, 2004, 1415, 1576, 1417,
	1418, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 1770, 1920, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1358, 1359, 1360, 1361, 1362, 1363,
	1356, 1357, 954, 953, 963, 964, 956, 957, 958, 959,
	960, 961, 962, 955, 1211, 1553, 1433, 922, 923, 924,
	925, 926, 927, 928, 920, 602, 1918, 602, 1915, 602,
	1618, 1844, 1843, 474, 1834, 912, 913, 914, 911, 1825,
	1801, 1792, 1446, 1454, 1646, 1613, 1524, 1448, 723, 722,
	2214, 1210, 1419, 1209, 991, 602, 1452, 1453, 952, 818,
	1552, 951, 765, 2098, 1478, 1580, 1442, 2094, 1536, 1579,
	1484, 1536, 2373, 2093, 912, 913, 914, 911, 2366, 2365,
	1907, 1489, 912, 913, 914, 911, 1905, 474, 102, 102,
	102, 102, 1202, 2349, 2345, 2344, 1503, 1202, 2336, 474,
	102, 1518, 1476, 1202, 2335, 2103, 2284, 2283, 1503, 2086,
	2276, 1902, 1456, 1567, 63, 1894, 22, 602, 2086, 2271,
	1443, 1295, 2259, 2248, 2247, 102, 102, 912, 913, 914,
	911, 2081, 1859, 1472, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 1835, 1519, 1278, 2086,
	2223, 2086, 2222, 912, 913, 914, 911, 2086, 2221, 1434,
	1541, 1440, 801, 1526, 1527, 1436, 2086, 2220, 1537, 2212,
	2211, 1538, 1539, 1813, 1455, 2102, 2101, 1486, 1794, 1487,
	2100, 2099, 1471, 1230, 1465, 1485, 1477, 2096, 2097, 1483,
	2096, 2095, 1695, 15, 1661, 6, 1239, 2092, 1583, 30,
	1581, 5, 1578, 1490, 2086, 2085, 1536, 1768, 1522, 1577,
	1547, 1548, 1549, 1550, 1551, 1516, 1555, 1517, 1515, 2009,
	1556, 1557, 1558, 1559, 839, 1560, 1536, 1754, 1504, 1505,
	1506, 1507, 1488, 839, 1525, 1536, 1544, 1563, 1564, 1536,
	1543, 912, 913, 914, 911, 1239, 1435, 1575, 1568, 1430,
	1429, 1572, 1424, 1423, 1531, 1006, 1545, 1595, 1006, 1534,
	1890, 1598, 1239, 1238, 1584, 1202, 1201, 1269, 886, 1889,
	970, 768, 767, 1542, 886, 1535, 1682, 1655, 1601, 1520,
	1480, 1536, 912, 913, 914, 911, 1413, 1412, 1268, 474,
	1479, 912, 913, 914, 911, 1255, 1223, 102, 1631, 909,
	63, 1888, 1592, 791, 790, 1602, 474, 1791, 498, 1224,
	102, 1236, 611, 1659, 1421, 1631, 1814, 1795, 1562, 1224,
	1224, 1590, 1269, 912, 913, 914, 911, 1597, 1585, 912,
	913, 914, 911, 1269, 1480, 1649, 97, 1561, 1392, 87,
	69, 1594, 445, 907, 497, 1570, 1773, 500, 498, 500,
	1427, 2318, 1767, 1650, 1651, 1652, 1766, 1402, 1587, 1295,
	1586, 1699, 1610, 1593, 1599, 1596, 1600, 1194, 912, 913,
	914, 911, 1765, 1605, 912, 913, 914, 911, 912, 913,
	914, 911, 1701, 1213, 94, 97, 1186, 547, 1657, 587,
	2312, 2296, 1755, 2293, 912, 913, 914, 911, 2291, 1761,
	1762, 2186, 2171, 2159, 1653, 602, 1654, 1658, 2157, 2152,
	2114, 602, 2075, 1694, 1764, 1869, 2079, 1775, 2078, 1664,
	1669, 1680, 1788, 1790, 1665, 2077, 2074, 1662, 1663, 2069,
	2054, 1690, 550, 94, 1879, 602, 912, 913, 914, 911,
	1787, 1871, 1681, 1883, 600, 102, 1789, 1760, 1886, 1876,
	600, 1875, 1759, 1855, 1699, 1829, 102, 1693, 1824, 1393,
	94, 1475, 1458, 1422, 1287, 1817, 1237, 997, 996, 912,
	913, 914, 911, 1772, 912, 913, 914, 911, 994, 993,
	992, 602, 602, 1800, 990, 938, 102, 1838, 1769, 1771,
	987, 986, 984, 1778, 1812, 983, 982, 980, 950, 949,
	948, 63, 947, 1811, 1793, 946, 944, 1796, 943, 942,
	941, 940, 1226, 474, 1758, 939, 1830, 936, 935, 934,
	600, 1832, 1503, 2316, 1798, 933, 1797, 932, 1278, 886,
	1858, 931, 1854, 1821, 930, 1856, 912, 913, 914, 911,
	929, 787, 758, 1857, 502, 1686, 1687, 1816, 1815, 1840,
	1820, 1822, 1820, 1851, 490, 2301, 444, 2299, 2267, 1828,
	1689, 1757, 1466, 1692, 1837, 1836, 1294, 501, 1756, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 1447, 1853, 912, 913, 914, 911, 1691, 1509, 1852,
	912, 913, 914, 911, 1508, 2352, 1704, 1512, 1839, 1873,
	1874, 1703, 1513, 1510, 1425, 1842, 1702, 1231, 1511, 1891,
	1215, 1216, 1863, 1877, 1401, 521, 1881, 1872, 912, 913,
	914, 911, 1893, 912, 913, 914, 911, 1625, 912, 913,
	914, 911, 1514, 1880, 1265, 1266, 912, 913, 914, 911,
	1222, 886, 496, 2025, 1624, 474, 1926, 1271, 50, 1974,
	1976, 1256, 1974, 1974, 1631, 1182, 1884, 29, 1887, 835,
	474, 1895, 28, 2236, 1897, 571, 1899, 1324, 1323, 570,
	1980, 1261, 1264, 1265, 1266, 1262, 1892, 1263, 1267, 307,
	523, 1896, 2313, 1898, 2314, 369, 837, 2191, 308, 1900,
	1901, 533, 534, 309, 1908, 1975, 2189, 370, 371, 372,
	373, 1914, 1971, 531, 532, 529, 530, 1923, 1951, 2117,
	369, 1529, 1997, 2115, 1977, 1978, 2112, 1906, 2111, 1979,
	1983, 527, 528, 2109, 1919, 1810, 1989, 1809, 1840, 1698,
	954, 953, 963, 964, 956, 957, 958, 959, 960, 961,
	962, 955, 526, 1697, 1998, 839, 2303, 2302, 2303, 1604,
	2010, 612, 1546, 1261, 1264, 1265, 1266, 1262, 2029, 1263,
	1267, 488, 2005, 954, 953, 963, 964, 956, 957, 958,
	959, 960, 961, 962, 955, 2302, 872, 1990, 1991, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 1270, 602, 370, 371, 372, 373, 398, 2057, 35,
	1, 102, 1254, 1199, 1826, 1645, 369, 545, 2030, 2031,
	1976, 2034, 2035, 2036, 2037, 388, 1370, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 1832, 2032, 2088, 535, 772, 457, 1582, 483, 2073,
	1971, 2055, 769, 482, 480, 1403, 2059, 1335, 708, 1001,
	1007, 2153, 2235, 2280, 2185, 2080, 2238, 785, 694, 2104,
	1619, 2118, 2090, 2011, 2106, 444, 2013, 1450, 2087, 1910,
	1203, 518, 1588, 2089, 1589, 720, 711, 985, 713, 753,
	459, 2108, 710, 2151, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 1850, 1496, 374, 456,
	399, 1999, 63, 1805, 2116, 474, 1864, 1885, 474, 474,
	474, 1868, 2361, 2121, 2122, 2131, 1278, 474, 2351, 2127,
	2128, 2331, 2311, 2202, 2347, 2249, 2294, 2287, 2198, 2026,
	339, 873, 581, 429, 2160, 2172, 340, 2168, 2169, 2170,
	2226, 2158, 378, 1225, 2179, 2196, 379, 2167, 2178, 1228,
	1227, 2181, 602, 602, 1315, 921, 1391, 988, 978, 628,
	1569, 684, 678, 1492, 1966, 2190, 1523, 2192, 2193, 2188,
	853, 2197, 34, 33, 32, 910, 1015, 709, 104, 1251,
	1016, 1616, 2195, 102, 2020, 2240, 693, 2204, 2205, 692,
	474, 600, 600, 691, 690, 689, 1260, 1258, 1257, 864,
	863, 908, 474, 2215, 2264, 2263, 2216, 2217, 1916, 2068,
	2210, 2138, 2064, 2060, 2208, 1925, 1924, 2242, 1952, 2219,
	1953, 901, 1959, 1713, 1709, 1711, 1712, 1710, 1777, 1705,
	2241, 2224, 1629, 1630, 1627, 1688, 1684, 2232, 1003, 1010,
	816, 99, 861, 1988, 11, 10, 776, 2245, 9, 14,
	21, 20, 19, 58, 2252, 2254, 57, 56, 55, 18,
	8, 54, 53, 52, 17, 16, 2260, 47, 48, 45,
	44, 43, 42, 2272, 2273, 2274, 2275, 41, 40, 2286,
	39, 2282, 46, 38, 37, 36, 67, 66, 65, 64,
	23, 24, 2290, 25, 2292, 26, 77, 76, 78, 74,
	72, 75, 73, 71, 31, 13, 2, 0, 2277, 0,
	0, 0, 0, 2297, 2300, 2242, 2310, 2298, 0, 0,
	0, 0, 474, 0, 474, 2304, 2306, 0, 2241, 0,
	2315, 807, 2317, 807, 2309, 0, 0, 2320, 0, 0,
	0, 0, 0, 0, 0, 2326, 0, 0, 0, 474,
	2327, 2334, 2282, 0, 2329, 0, 0, 2337, 807, 0,
	0, 2343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2350, 0, 0, 0, 0, 0, 2360, 0,
	0, 2359, 0, 0, 0, 0, 0, 0, 0, 0,
	2370, 2372, 2371, 0, 2360, 1128, 1170, 0, 0, 1116,
	0, 1078, 1130, 1052, 1067, 1138, 1068, 1069, 1103, 1031,
	1087, 228, 1065, 0, 1119, 1023, 1055, 1056, 1025, 1062,
	1026, 1053, 1080, 173, 1051, 1090, 198, 1136, 0, 0,
	257, 212, 0, 0, 1083, 1121, 1085, 1108, 1077, 1104,
	1039, 1097, 1131, 1066, 1101, 1132, 0, 0, 0, 0,
	0, 828, 829, 830, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 1100, 1125, 1064, 0, 158, 1129,
	1084, 1102, 0, 0, 1024, 1098, 0, 1029, 1032, 1137,
	1123, 1059, 1060, 0, 0, 0, 0, 0, 0, 0,
	1081, 1086, 1105, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 1094, 0, 0, 0, 1034,
	1030, 0, 1079, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 1169, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 1127, 301, 167, 292, 1033, 284, 151, 1164, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 1148,
	1149, 1150, 1151, 1152, 1160, 1161, 0, 1165, 1166, 1167,
	1038, 0, 1058, 1106, 0, 1022, 1114, 1122, 1076, 286,
	1124, 1073, 1072, 1155, 0, 1154, 261, 1156, 1157, 197,
	1120, 1054, 1063, 302, 1061, 247, 230, 1126, 1093, 1168,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 1153,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1162, 0, 1163, 298,
	180, 1021, 281, 0, 226, 1117, 1027, 1037, 1035, 1070,
	1095, 1096, 222, 297, 1110, 1113, 1111, 1139, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	258, 279, 291, 1171, 1172, 1173, 1174, 0, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 282, 1071, 1045, 1082, 290,
	1048, 1046, 1109, 1047, 1099, 1141, 216, 217, 218, 219,
	183, 0, 160, 1091, 1075, 1142, 1143, 1144, 1145, 1146,
	1147, 1050, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 1115, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 1044, 1049, 1043, 1088,
	1089, 1133, 1134, 1135, 1107, 1036, 1118, 1040, 1042, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 1092, 142, 0, 199, 1140, 240, 178, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 731, 737, 1158, 1159, 294, 295, 296,
	280, 0, 0, 0, 679, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 155, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 626, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 0, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 703, 715, 672,
	167, 670, 714, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 286, 0, 0, 730,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	673, 0, 247, 230, 740, 627, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 1371, 1373, 298, 180, 0, 281,
	728, 226, 739, 724, 725, 726, 729, 732, 733, 668,
	671, 734, 736, 738, 741, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 718, 216, 217, 218, 219, 667, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 747, 727, 746, 748, 749, 745, 750,
	751, 735, 688, 0, 743, 742, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	121, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 721, 0, 0, 294, 295, 296, 280, 97, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 731, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	629, 723, 722, 696, 705, 0, 0, 155, 697, 0,
	704, 698, 702, 701, 699, 700, 0, 666, 0, 0,
	0, 0, 0, 0, 626, 683, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 681,
	0, 0, 0, 0, 717, 0, 682, 0, 0, 719,
	0, 706, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 703,
	715, 672, 167, 670, 714, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 286, 0,
	0, 730, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 673, 0, 247, 230, 740, 627, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 728, 226, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 718, 216, 217, 218, 219, 667,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 70, 240, 178, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 716, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 173, 887, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	679, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 155, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 626, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 884, 0, 706, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 703, 715, 672, 167, 670, 714, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 286, 0, 0, 730, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 673, 0, 247, 230,
	740, 627, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 728, 226, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 718, 216,
	217, 218, 219, 667, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 716, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	173, 2328, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 731, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 155, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 626, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 0, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 703, 715, 672,
	167, 670, 714, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 286, 0, 0, 730,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	673, 0, 247, 230, 740, 627, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	728, 226, 739, 724, 725, 726, 729, 732, 733, 668,
	671, 734, 736, 738, 741, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 718, 216, 217, 218, 219, 667, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 747, 727, 746, 748, 749, 745, 750,
	751, 735, 688, 0, 743, 742, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	121, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 721, 716, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 173, 887, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 155,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 626, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 703, 715, 672, 167, 670, 714, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	286, 0, 0, 730, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 673, 0, 247, 230, 740, 627,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 728, 226, 739, 724, 725, 726,
	729, 732, 733, 668, 671, 734, 736, 738, 741, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 718, 216, 217, 218,
	219, 667, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 747, 727, 746,
	748, 749, 745, 750, 751, 735, 688, 0, 743, 742,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 121, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 721, 0, 0, 294, 295,
	296, 280, 716, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 155,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 626, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 703, 715, 672, 167, 670, 714, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	286, 0, 0, 730, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 673, 0, 247, 230, 740, 627,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 728, 226, 739, 724, 725, 726,
	729, 732, 733, 668, 671, 734, 736, 738, 741, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 718, 216, 217, 218,
	219, 667, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 747, 727, 746,
	748, 749, 745, 750, 751, 735, 688, 0, 743, 742,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 121, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 721, 716, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 731, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 629, 723, 722, 696,
	705, 0, 0, 155, 697, 0, 704, 698, 702, 701,
	699, 700, 0, 666, 0, 0, 0, 0, 0, 0,
	626, 683, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 623, 0, 0, 0,
	717, 0, 682, 0, 0, 719, 0, 706, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 703, 715, 672, 167, 670,
	714, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 286, 0, 0, 730, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 673, 0,
	247, 230, 740, 627, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 728, 226,
	739, 724, 725, 726, 729, 732, 733, 668, 671, 734,
	736, 738, 741, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	718, 216, 217, 218, 219, 667, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 747, 727, 746, 748, 749, 745, 750, 751, 735,
	688, 0, 743, 742, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 121, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 721,
	716, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 731, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	629, 723, 722, 696, 705, 0, 0, 155, 697, 0,
	704, 698, 702, 701, 699, 700, 0, 666, 0, 0,
	0, 0, 0, 0, 626, 683, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 681,
	0, 0, 0, 0, 717, 0, 682, 0, 0, 719,
	0, 706, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 703,
	715, 672, 167, 670, 714, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 286, 0,
	0, 730, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 673, 0, 247, 230, 740, 627, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 728, 226, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 718, 216, 217, 218, 219, 667,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 716, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 228, 0, 0, 0, 1316, 0,
	0, 0, 686, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 155, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 719, 0, 706, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 703, 715, 672, 167, 670, 714, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 286, 0, 0, 730, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 673, 0, 247, 230,
	740, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 1317, 1318, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 728, 226, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 718, 216,
	217, 218, 219, 667, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 716, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 731, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 155, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 626, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 0, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 703, 715, 672,
	167, 670, 714, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 286, 0, 0, 730,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	673, 0, 247, 230, 740, 627, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	728, 226, 739, 724, 725, 726, 729, 732, 733, 668,
	671, 734, 736, 738, 741, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 718, 216, 217, 218, 219, 667, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 747, 727, 746, 748, 749, 745, 750,
	751, 735, 688, 0, 743, 742, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	121, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 721, 716, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 155,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 703, 715, 672, 167, 670, 714, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	286, 0, 0, 730, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 673, 0, 247, 230, 740, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 728, 226, 739, 724, 725, 726,
	729, 732, 733, 668, 671, 734, 736, 738, 741, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 718, 216, 217, 218,
	219, 667, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 747, 727, 746,
	748, 749, 745, 750, 751, 735, 688, 0, 743, 742,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 121, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 721, 0, 0, 294, 295,
	296, 280, 97, 0, 27, 87, 69, 0, 0, 0,
	0, 0, 0, 0, 228, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 349,
	353, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 343, 342,
	346, 1355, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 352, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 344, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 314, 316, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	347, 351, 354, 0, 355, 356, 0, 0, 357, 358,
	359, 0, 0, 361, 362, 0, 0, 0, 0, 0,
	1351, 0, 1348, 0, 0, 0, 1350, 1347, 1349, 1353,
	1354, 0, 0, 0, 1352, 142, 0, 199, 70, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 1638, 1641, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1358, 1359,
	1360, 1361, 1362, 1363, 1356, 1357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 286, 0, 0, 0, 1635,
	0, 1634, 261, 1636, 1639, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 1640, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 916, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 917, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	912, 913, 914, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 428, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 436, 437, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 410, 284, 151,
	409, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 427,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 430, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 438, 433, 434, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 97, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 1004, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 70, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 173, 0, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 436, 437, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 410, 284, 151, 409, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 438, 433, 434, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 605, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 603, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	599, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	603, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2237, 0,
	103, 723, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 603, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 603,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 183, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 1292, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 603, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 723, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 173, 0, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 0, 284, 151, 0, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 603, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 1305, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 1233, 0, 0, 294,
	295, 296, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 1218, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 183, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 330, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 100, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 1274, 0,
	0, 0, 0, 173, 0, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 828, 829, 830, 1276, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 0, 284, 151, 0, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 828, 829,
	830, 1276, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 828, 829, 830, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 0, 1736, 1740, 1742, 1744, 1746, 1747, 1749,
	0, 1753, 1750, 1751, 1752, 0, 1231, 1731, 1732, 1733,
	1734, 1715, 1716, 1737, 0, 1718, 0, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1735, 0, 2356,
	0, 294, 295, 296, 280, 1739, 1741, 1743, 1745, 1748,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	1736, 1740, 1742, 1744, 1746, 1747, 1749, 0, 1753, 1750,
	1751, 1752, 0, 0, 1731, 1732, 1733, 1734, 1715, 1716,
	1737, 0, 1718, 0, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1735, 97, 0, 27, 87, 69,
	0, 1949, 1739, 1741, 1743, 1745, 1748, 0, 0, 0,
	92, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1231, 0, 0, 0, 0, 0, 1730, 0, 51, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	1935, 0, 0, 350, 1931, 349, 353, 345, 0, 0,
	0, 1939, 0, 0, 0, 0, 1707, 1708, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 1928, 0, 1949, 0, 1930, 1932, 1934, 0, 1936,
	1937, 1938, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 0,
	88, 89, 0, 90, 91, 363, 0, 0, 364, 0,
	0, 0, 1231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 0, 350, 0,
	349, 353, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 341, 0, 68, 86, 95, 1738,
	49, 0, 0, 0, 360, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 1935, 0, 85, 80, 79, 0,
	0, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	363, 0, 0, 364, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1933, 1928, 0, 0, 0, 1930,
	1932, 1934, 0, 1936, 1937, 1938, 1940, 1941, 1942, 1944,
	1945, 1946, 1947, 0, 343, 342, 346, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 1738, 0, 0, 0,
	0, 82, 83, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 344, 0,
	0, 0, 336, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 1939, 84, 0,
	60, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 0,
	0, 1930, 1932, 1934, 1927, 1936, 1937, 1938, 1940, 1941,
	1942, 1944, 1945, 1946, 1947, 0, 0, 0, 0, 343,
	342, 346, 0, 0, 0, 0, 0, 348, 0, 61,
	0, 1943, 0, 0, 0, 0, 0, 0, 1933, 352,
	0, 0, 0, 0, 0, 1950, 347, 351, 354, 0,
	355, 356, 0, 344, 357, 358, 359, 0, 0, 361,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 0, 0,
	0, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 351, 354, 0, 355, 356, 0, 0, 357,
	358, 359, 0, 0, 361, 362,
}

var yyPact = [...]int{
	21015, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18813, -1000, -1000,
	1496, -1000, 7922, 19266, 59, 19266, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 266,
	-1000, 18360, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 215,
	21083, 137, -1000, 1957, -1000, -1000, -1000, -1000, 505, 277,
	17907, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 198, 5, 277, 369, 380,
	389, 389, 9281, 1957, 190, 95, -1000, 715, 21015, 197,
	19266, -1000, 416, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1957, 1957, 19266, -75, 637, -1000, 196, 191, 205, 412,
	-1000, -1000, -1000, -1000, 1916, -1000, 19266, 1668, 19266, -1000,
	925, 182, 21178, 1782, 1459, 504, 1682, -1000, -1000, 1656,
	-1000, 10, -16, 100, -1000, -1000, 178, -1000, -1000, -1000,
	-1000, -1000, 56, -1000, 0, -1000, -8, -1000, -1000, -1000,
	-120, -1000, -1000, -1000, -1000, -171, 1752, 1829, 1545, 1892,
	1865, 1849, 1847, 1835, 21, 206, 206, 206, 260, 206,
	264, -1000, -1000, -1000, -1000, -1000, -1000, 334, -1000, -1000,
	-1000, -1000, 1498, 19266, -1000, 1544, 454, 454, 724, 181,
	-1000, -1000, -106, -134, 454, 454, -134, 24, -1000, 1814,
	1810, -1000, -1000, -1000, -1000, -1000, -1000, 215, 215, 221,
	-1000, -178, -1000, 353, -1000, 350, -1000, 275, 174, 1500,
	684, -1000, 620, 19266, 19266, 19266, 620, 620, 11105, 10652,
	410, -1000, 1829, 1545, -1000, 1422, 1861, 1545, 215, 215,
	215, 215, 215, 215, 215, 19266, 5594, 5594, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 217, 1654, -1000, 19266,
	1829, 1752, 1829, -1000, 408, 882, 1167, -1000, -1000, 196,
	1382, -1000, 653, -1000, -1000, -1000, -1000, 19266, 185, -1000,
	1155, 1653, -1000, 299, 1419, 1458, -1000, 62, 8007, 15182,
	925, 15182, 19266, -1000, -1000, -1000, -1000, -126, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9, -1000,
	-1000, -290, 1752, 6058, -1000, -1000, 6058, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 250, 206, -1000, 994, 686,
	15182, 925, 931, 19266, 206, 221, -1000, 19266, 1498, 1800,
	19266, 1899, 7450, 1899, 19266, -1000, -1000, 454, 454, -1000,
	724, 724, -1000, -1000, -128, 1899, 1899, -138, 19266, 206,
	-1000, -1000, 994, 15182, 14729, -1000, -154, 366, 355, 359,
	-1000, -1000, 1939, -1000, -1000, 1460, 279, 10199, 226, 15182,
	3732, -1000, -1000, 620, 620, 620, 3732, 3732, 409, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19266, 1752, -1000, -1000,
	-1000, -1000, -1000, 994, 15182, 925, 19266, 19266, 19266, 20473,
	-1000, 1454, -1000, -1000, 8828, 407, 6058, -1000, 1093, 1652,
	-1000, -1000, 1646, 1643, 1639, 1637, 1631, 1630, 1629, -1000,
	1597, -1000, -1000, 1627, 1623, 1622, 1621, -1000, -1000, -1000,
	-1000, -1000, -1000, 1620, -1000, -1000, -1000, 1618, 1597, -1000,
	-1000, 1617, 1614, 1612, 1611, 1610, -1000, -1000, -1000, -1000,
	-1000, -1000, 1166, 1163, 1009, -1000, -1000, -1000, -1000, 3268,
	7450, 7450, 7450, 7450, -1000, -1000, 1572, 6058, 1609, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6986, -1000, 1608, 1607,
	1604, 1603, 1602, 1597, 1596, 1159, 1592, 1591, 1590, 7450,
	1580, 1579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1454, -1000, -287, -1000, 9746, 19266, 19266, -1000,
	1752, -1000, 1752, 2369, -1000, 1802, -1000, 196, 92, -1000,
	-1000, -1000, -1000, -1000, -1000, 406, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1497, -1000, 19266, -1000, -1000,
	62, 15182, 608, -1000, -1000, -1000, -1000, -1000, -1000, 158,
	-1000, -1000, 125, -1000, 254, -51, 1376, -1000, -1000, 14,
	119, 61, 1158, -1000, 1162, 403, 1494, -1000, 860, 17454,
	19266, -30, -1000, 1780, 1431, -1000, 1460, 1626, -1000, -1000,
	-1000, 1742, 19266, 17001, -1000, 1578, 1373, -1000, -1000, 6058,
	-1000, -1000, 1899, 1899, 1899, 454, 20473, 724, 19266, 724,
	-1000, -1000, 724, -1000, 401, 19266, -30, 1430, 1796, 1433,
	-1000, -1000, -1000, -1000, 1788, 19719, 190, -1000, -1000, 363,
	349, 342, 925, 251, -1000, -1000, 1460, -1000, -1000, -1000,
	1576, 634, -1000, -1000, 7450, -1000, 759, -1000, 3732, 3732,
	3732, -1000, -1000, 12917, -1000, -1000, -1000, 1478, 1460, 1681,
	1470, -1000, 1470, -1000, -1000, -1000, 1899, 5594, -1000, 14729,
	-1000, 6058, 6058, 6058, 6058, -1000, 16541, -1000, 16088, -1000,
	256, 6522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6058,
	1811, 1811, 1811, 6058, 710, 6058, 6058, -1000, 787, 8046,
	1811, 1811, 1811, 1811, 1811, -1000, 2796, 1811, 1811, 1811,
	1811, -1000, -1000, 7450, 7450, 7450, 7450, 7450, 7450, 7450,
	7450, 7450, 7450, 7450, 7450, 1571, 647, 7450, 7450, 7450,
	1861, 1724, 1468, -1000, -1000, -1000, -1000, -1000, 644, 759,
	6058, 742, 6058, 6058, 6058, -1000, 1397, 1396, -1000, -1000,
	6058, -1000, 6058, 7450, 6058, -1000, 1811, 1157, 1899, 1425,
	-1000, 1575, -1000, 1363, 1736, -1000, 398, 1461, -1000, 633,
	1360, -1000, -1000, -1000, -1000, 397, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -78, -1000, -1000, 19266, 1155, 1356, 608, 1420,
	246, 396, 394, -1000, 15182, 4, 15182, -1000, 15182, -1000,
	203, -1000, 19266, 1718, -1000, -1000, -1000, 1152, -303, -148,
	6058, 6058, 19266, 6058, -1000, -1000, -1000, 1544, 659, 1574,
	-105, 477, -1000, 167, 15182, 1677, 108, -1000, 1742, -1000,
	676, -1000, 1573, 19266, 1445, -1000, 393, 21015, -1000, 19266,
	759, -1000, -1000, -1000, 1899, -1000, 454, -1000, 454, 724,
	19266, -1000, -1000, -105, 367, 151, 19266, 14729, 14729, 14729,
	14729, -1000, 1719, 1713, -1000, 1728, 1722, 1757, 19266, 14729,
	19266, -1000, -1000, -1000, 20096, -1000, -1000, -1000, -1000, 1389,
	1957, -1000, -1000, -1000, 347, 1460, 15182, 1151, 226, -1000,
	-1000, -1000, -1000, -1000, 19266, 19266, 1864, -1000, 1444, 1878,
	-1000, 669, 669, 655, -1000, -1000, 392, -1000, -1000, 307,
	-1000, -1000, -1000, -1000, -1000, 1572, -1000, -1000, -1000, 1385,
	1392, 759, 6058, -1000, -1000, 6058, 6058, 970, 6058, 1383,
	1350, 1346, -1000, 1366, 1907, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6058, 6058, 6058, 6058, 6058, 1170,
	5130, -1000, -1000, -1000, 6058, 6058, 6058, 6058, 1033, 991,
	-1000, 654, 654, 430, 430, 430, 430, 430, 956, 956,
	-1000, -1000, -1000, 3268, 1571, 7450, 7450, 7450, 201, 1843,
	1198, -1000, 6058, 697, -1000, 6058, 930, -1000, 1357, 1123,
	1319, 1312, -1000, -1000, 1179, 1310, 1948, 1308, 6058, 1439,
	1864, -287, 4660, 208, 19266, -287, 19266, 19266, 4660, -1000,
	19266, 2369, 880, -1000, -1000, -1000, 1904, 925, 442, 487,
	-1000, -1, -1000, 155, 320, 1150, -1000, 263, 630, 1135,
	-110, -84, 759, 759, 390, -1000, 1785, 1767, 8375, 894,
	-1000, -1000, 1149, -1000, 973, -1000, 19266, -1000, -1000, -1000,
	-1000, -1000, 477, 477, 477, 8375, 197, 1391, 387, 14729,
	19266, -1000, 14276, 1304, -1000, -1000, 1899, 1899, 454, -1000,
	894, 249, 367, -1000, -1000, -1000, 303, 7, 870, 232,
	973, 1387, -1000, 622, 1660, 1675, 1660, -1000, -1000, -1000,
	-1000, 1712, -1000, 1688, -1000, -1000, 1387, -1000, 1544, -1000,
	-1000, -1000, 1420, 1302, -1000, -1000, -1000, -1000, 1895, 1879,
	15635, -1000, -1000, -1000, -1000, -1000, 6058, 1716, 1711, 1706,
	20775, 1337, -1000, -1000, -1000, -1000, 6058, 1678, 1671, 1624,
	1562, 1557, -1000, 6058, 6058, 936, 1524, 1482, 1466, 1462,
	1317, -1000, 201, 1843, 1066, -1000, 7450, 7450, 1456, 639,
	-1000, 6058, 700, 733, 12011, -1000, 6058, -1000, -1000, -1000,
	12011, -1000, 7450, -1000, 1417, 1146, 1895, -1000, 1288, 1428,
	-1000, -287, -1000, -1000, 1425, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15182, 153, -1000, -1000, -1000, -1000,
	-1000, -1000, -66, -1000, 19266, 1145, 116, -1000, 617, -292,
	-93, 1877, 1875, 19266, 190, 19266, 1283, 1427, -1000, -1000,
	-1000, 20852, 609, -1000, 19266, 723, 339, 206, 339, 721,
	1570, -1000, -1000, -1000, 1144, -55, -1000, 367, -1000, 1567,
	12011, 12464, 1139, 1256, 19719, 14729, 14276, 1378, -1000, 386,
	-1000, -1000, -1000, -1000, 1899, -1000, -1000, 1137, 1136, -1000,
	862, -1000, -1000, 851, 420, -41, -1000, -1000, -1000, -1000,
	-1000, 1836, 19266, 4660, -1000, -1000, 6058, 1565, -1000, 6058,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 6058, 6058, -1000,
	-1000, 759, -1000, -1000, -1000, 1242, -1000, 326, 326, -24,
	-1000, -1000, -1000, 1527, -1000, 1553, 1553, 1527, 1527, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1563, 1561,
	-1000, 1527, 1546, 1546, 1527, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1555, 1555, 1560, 1555, -1000, 1411, -1000, -1000, -1000, -1000,
	-1000, 1379, 1370, 6058, -1000, -1000, -1000, -1000, -1000, -1000,
	7450, -1000, -1000, -1000, -1000, 759, 6058, 1225, -1000, 1527,
	1553, -1000, 1527, 1546, 1527, 326, 326, 1221, 875, 1196,
	1827, -1000, 1190, -1000, -1000, 4660, 1425, 1420, -1000, -1000,
	-138, 115, -1000, 1135, 1133, -294, 1131, -1000, 1874, 1087,
	945, -1000, 1544, 21117, 8375, 730, -1000, -1000, 19266, 19266,
	-1000, 19266, 19266, 206, 6058, -1000, -1000, 187, 249, 13823,
	-1000, -1000, -1000, -1000, -1000, 9, 1899, 1378, 386, -1000,
	-1000, 438, -1000, -1000, -1000, 30, -1000, -1000, 841, 268,
	-1000, 1829, -1000, -1000, 759, 19266, 759, 759, 1392, -1000,
	-1000, -1000, -1000, -1000, -27, -1000, -1000, -1000, -1000, 856,
	-1000, 852, -1000, -1000, -1000, 1071, 1071, -1000, -1000, 850,
	-1000, -1000, -1000, 848, -1000, -1000, 846, -1000, -1000, -1000,
	-1000, 1329, -1000, 759, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6058, -1000, -1000, -1000, -1000, -1000,
	-112, -88, -1000, 1049, -1000, -1000, -297, 844, -1000, 1031,
	-103, -1000, -1000, 1784, 194, 21025, -1000, 477, 477, 681,
	477, 477, 477, 477, 140, 138, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	1542, -1000, -1000, 730, -1000, -1000, 731, 7450, -1000, -1000,
	1025, 12464, 456, 461, 1541, -1000, 106, 712, 709, -1000,
	19266, -1000, 1538, 1526, 70, 1537, -1000, 1530, 1528, 19266,
	1241, 252, 1024, -1000, 1315, -1000, 1527, 6058, -1000, -138,
	1836, -1000, -1000, -1000, 26, -1000, -1000, -1000, 1307, -1000,
	-1000, 1183, 1177, 1301, -1000, 1298, 1173, 1291, 1286, -1000,
	1215, 219, -101, -88, -1000, 1873, -104, 1868, 1866, 612,
	-1000, 1522, -1000, -1000, 1863, 190, -1000, 1859, 21117, -1000,
	823, 814, 477, 477, 808, 1012, 997, 996, 477, 477,
	807, 986, 20096, 803, 798, 797, 837, 984, 448, 826,
	825, 796, 19266, 1521, 938, -1000, -1000, 1843, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 794,
	1520, -1000, -1000, 1515, 13823, 147, 147, 13823, 13823, 13823,
	1514, 284, -1000, -67, -1000, -1000, 13823, 1749, 1050, -1000,
	1829, -1000, -1000, -1000, -1000, -1000, 983, -1000, -1000, -1000,
	792, -1000, 783, -1000, 1513, 778, -93, 1846, -1000, 945,
	1837, 945, 945, 972, 19266, 945, -1000, 136, -1000, -1000,
	-1000, 12011, 12011, -1000, -1000, -1000, -1000, 969, 951, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 157, 19266, 1280, -1000, 568, 1160, 6058, -230, 13823,
	1277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1268, 1262,
	1260, 13823, -1000, -1000, -1000, 101, -1000, 124, -1000, -1000,
	1749, -1000, -1000, 1014, 1003, 1808, 11558, -114, -1000, 946,
	-1000, 945, -1000, -1000, -309, 1234, -1000, -1000, 83, 218,
	180, -1000, 245, -1000, -1000, -1000, -1000, -1000, -1000, 148,
	1232, -1000, 938, 926, -1000, 998, 1673, -1000, -7, 1229,
	-1000, -1000, -1000, -1000, 1220, -1000, -1000, 477, 917, 51,
	-1000, -1000, -1000, -1000, -1000, -1000, 19266, -1000, 1217, -1000,
	-1000, -1000, 385, -1000, -1000, -1000, -1000, -1000, 19266, 81,
	775, 7450, 1510, 7450, 1505, 97, 1503, -1000, -1000, -1000,
	-1000, -1000, 284, -1000, -1000, 1672, 1670, 1903, -1000, -1000,
	-1000, -1000, 124, 124, 124, 124, -3, 769, -1000, 931,
	1072, -1000, 474, -1000, 13370, 19266, -1000, 1502, 1832, -1000,
	1794, 19266, 1633, 19266, 1463, 467, 7450, -1000, -1000, 1905,
	-1000, 1931, 539, 539, -1000, -1000, -1000, 19266, 4196, -1000,
	384, -1000, 193, 94, -1000, 1214, -1000, 1208, 19266, 766,
	916, -1000, -1000, -1000, 795, 112, -1000, -1000, -1000, 759,
	19266, 1205, -1000, 939, 75, -1000, -1000, 1203, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 193, 1727, -1000, 739, -1000,
	-1000, 20891, 189, -1000, -1000, 20891, 80, -1000, 163, -1000,
	-1000, 1189, -1000, 919, 405, -1000, 80, 21117, -1000, 6058,
	-1000, 21117, 1182, -1000,
}

var yyPgo = [...]int{
	0, 121, 2276, 180, 133, 127, 179, 2275, 1832, 1827,
	2274, 2273, 2272, 2271, 2270, 2269, 2268, 2267, 2266, 2265,
	2263, 2261, 2260, 2259, 2258, 2257, 2256, 177, 2255, 2254,
	2253, 2252, 2250, 2248, 2247, 2242, 2241, 2240, 2239, 2238,
	2237, 125, 2235, 1818, 2234, 2233, 2232, 2231, 2230, 163,
	2229, 2228, 2227, 2226, 2223, 2222, 2221, 2220, 2219, 2218,
	2216, 2215, 2214, 178, 60, 2213, 53, 48, 118, 190,
	46, 196, 191, 149, 78, 122, 169, 140, 2212, 2211,
	117, 26, 130, 2210, 44, 41, 30, 194, 108, 58,
	64, 99, 2209, 2208, 94, 2206, 2205, 98, 2204, 63,
	2203, 84, 38, 96, 27, 2202, 2199, 2198, 86, 2197,
	2196, 2195, 2194, 89, 2193, 73, 57, 2192, 2190, 2188,
	2186, 2185, 35, 2184, 54, 2183, 2182, 2181, 2179, 2178,
	2177, 2176, 11, 17, 21, 2175, 2174, 18, 2, 2171,
	159, 110, 87, 109, 2170, 350, 2169, 2168, 2167, 120,
	2166, 143, 2165, 2164, 2163, 2159, 2156, 9, 2155, 55,
	2154, 2152, 67, 2151, 2150, 72, 2149, 2148, 2147, 104,
	43, 50, 102, 2146, 2145, 80, 161, 16, 39, 0,
	162, 42, 2144, 2143, 2142, 192, 156, 154, 2140, 100,
	268, 152, 2136, 2134, 56, 97, 81, 2133, 2132, 114,
	75, 10, 2131, 92, 2130, 15, 95, 2129, 112, 2128,
	144, 1, 106, 2127, 160, 2126, 2125, 2124, 123, 2120,
	2119, 65, 124, 2116, 2113, 2112, 29, 2111, 31, 22,
	2110, 105, 173, 2106, 137, 129, 136, 91, 166, 76,
	116, 746, 115, 88, 20, 2105, 168, 2103, 244, 167,
	150, 2102, 2101, 172, 358, 157, 2100, 146, 8, 2099,
	2098, 7, 2097, 24, 2096, 2095, 2094, 2093, 6, 2092,
	2091, 2088, 4, 3, 2082, 5, 113, 51, 70, 2081,
	69, 74, 2077, 2076, 2073, 2071, 2070, 233, 2069, 2068,
	2067, 2066, 2052, 2050, 2049, 85, 2048, 2047, 2046, 2045,
	68, 2044, 2042, 2041, 2040, 2039, 37, 2037, 2036, 25,
	2034, 32, 2033, 2030, 2029, 13, 142, 2028, 2027, 19,
	2026, 2024, 14, 12, 2023, 2022, 62, 45, 40, 82,
	83, 2021, 23, 2020, 107, 2019, 2018, 148, 2017, 111,
	2015, 131, 170, 234, 2014, 155, 2013, 2012, 2008, 2006,
	2005, 2004, 1986, 764, 1985, 1977, 171, 59, 165, 1975,
	90, 151, 1974, 119, 103, 61, 1973, 1972, 1970, 1969,
	1967, 153, 1961,
}

//line mysql_sql.y:7210
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 368, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 57, 325, 325, 324, 324, 323,
	323, 322, 322, 322, 321, 321, 321, 320, 320, 319,
	319, 318, 318, 316, 316, 317, 315, 314, 314, 312,
	312, 310, 310, 311, 311, 305, 305, 308, 308, 306,
	306, 306, 306, 309, 304, 304, 304, 303, 303, 56,
	56, 56, 243, 243, 55, 55, 257, 257, 257, 257,
	257, 255, 255, 255, 255, 255, 255, 254, 254, 253,
	253, 258, 258, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 50, 50, 50, 50,
	53, 54, 251, 251, 251, 251, 251, 252, 252, 252,
	51, 52, 52, 242, 242, 247, 247, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 250,
	250, 250, 249, 249, 248, 248, 44, 44, 44, 47,
	46, 241, 241, 241, 241, 241, 241, 241, 241, 45,
	45, 45, 45, 45, 45, 42, 42, 42, 42, 42,
	41, 41, 43, 43, 240, 240, 239, 60, 60, 60,
	60, 60, 60, 60, 59, 59, 62, 62, 61, 49,
	49, 49, 49, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 348, 348, 348, 350, 350, 183, 184, 369,
	182, 182, 182, 344, 344, 345, 346, 347, 347, 347,
	58, 7, 7, 39, 40, 367, 367, 287, 287, 196,
	196, 197, 197, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 290,
	291, 192, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 31, 31, 38, 370, 370, 370, 36,
	37, 286, 286, 286, 35, 34, 33, 32, 32, 30,
	30, 29, 29, 189, 189, 191, 191, 187, 371, 371,
	263, 263, 190, 190, 28, 28, 188, 188, 166, 186,
	186, 186, 6, 10, 10, 10, 10, 10, 10, 10,
	10, 16, 18, 238, 238, 236, 17, 13, 12, 15,
	11, 14, 5, 5, 5, 5, 8, 8, 9, 75,
	75, 103, 103, 357, 357, 353, 353, 354, 354, 354,
	355, 355, 356, 356, 4, 294, 294, 294, 294, 294,
	294, 333, 333, 333, 334, 93, 93, 88, 88, 295,
	295, 212, 335, 335, 302, 302, 301, 301, 300, 300,
	91, 91, 92, 92, 79, 79, 63, 63, 307, 307,
	307, 307, 313, 313, 284, 284, 129, 129, 160, 160,
	161, 161, 67, 67, 68, 68, 68, 68, 68, 68,
	341, 341, 343, 343, 342, 90, 90, 86, 86, 87,
	87, 87, 85, 85, 84, 83, 83, 82, 81, 81,
	81, 70, 70, 69, 69, 69, 69, 69, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	71, 71, 349, 349, 349, 288, 288, 288, 293, 293,
	142, 142, 143, 143, 141, 141, 72, 72, 73, 73,
	73, 73, 140, 140, 139, 74, 74, 80, 76, 76,
	78, 78, 78, 78, 150, 150, 149, 149, 149, 149,
	96, 96, 148, 147, 147, 147, 95, 95, 94, 94,
	89, 89, 77, 77, 146, 372, 372, 144, 175, 175,
	175, 181, 181, 174, 174, 174, 174, 174, 185, 180,
	180, 176, 176, 177, 177, 177, 3, 3, 3, 3,
	22, 22, 22, 22, 26, 26, 351, 351, 19, 358,
	361, 359, 362, 362, 362, 363, 363, 363, 364, 364,
	20, 360, 365, 365, 365, 237, 237, 235, 234, 234,
	234, 366, 366, 366, 366, 178, 178, 21, 231, 231,
	232, 233, 233, 225, 225, 225, 225, 25, 229, 229,
	230, 230, 230, 230, 230, 226, 226, 228, 228, 224,
	224, 224, 224, 224, 24, 223, 223, 221, 221, 219,
	219, 220, 220, 218, 218, 218, 222, 222, 23, 23,
	65, 64, 64, 64, 64, 66, 163, 163, 162, 162,
	289, 289, 259, 259, 262, 262, 269, 269, 270, 270,
	268, 268, 275, 275, 274, 274, 273, 273, 272, 272,
	271, 271, 271, 266, 266, 265, 265, 260, 260, 260,
	260, 260, 261, 261, 264, 264, 267, 267, 120, 120,
	121, 121, 121, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 331, 331, 332, 123, 123, 123, 127, 127,
	127, 127, 127, 127, 122, 122, 124, 124, 104, 104,
	102, 102, 97, 97, 98, 98, 99, 99, 100, 100,
	101, 101, 101, 101, 101, 101, 245, 245, 329, 329,
	330, 330, 326, 326, 326, 328, 328, 328, 328, 328,
	327, 327, 105, 158, 158, 158, 179, 179, 179, 157,
	157, 157, 119, 119, 118, 118, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 244,
	244, 193, 193, 194, 194, 137, 135, 135, 136, 136,
	136, 136, 133, 134, 132, 132, 132, 132, 132, 131,
	131, 130, 130, 130, 227, 227, 128, 128, 126, 126,
	126, 125, 125, 125, 276, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 204,
	204, 209, 209, 340, 340, 339, 106, 106, 106, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 115, 115,
	115, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 299, 299, 299, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 156, 352, 352, 352, 336, 336, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 154, 154, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 213, 213, 214, 214, 296, 296, 296, 296, 296,
	296, 297, 297, 298, 298, 298, 298, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 202, 151, 151, 151, 215,
	210, 210, 211, 211, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 207, 207, 207, 207, 207,
	199, 199, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 206, 206, 208, 208, 217, 217, 217, 216, 216,
	216, 216, 216, 216, 216, 117, 117, 117, 117, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 108,
	108, 108, 108, 112, 112, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 113,
	113, 113, 113, 111, 111, 111, 111, 111, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 110, 159, 159, 277, 277, 280, 280,
	278, 278, 279, 281, 281, 281, 282, 282, 282, 283,
	283, 283, 285, 285, 165, 165, 165, 171, 171, 164,
	164, 172, 172, 173, 173, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 2, 1, 2, 3,
	4, 3, 3, 1, 0, 1, 1, 0, 1, 8,
	5, 7, 0, 3, 8, 5, 1, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 1,
	4, 1, 3, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 6, 3, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 0, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 2, 1, 1, 1, 4, 2, 2, 3,
	3, 4, 5, 3, 4, 4, 2, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 5, 1, 1, 1, 5,
	5, 0, 1, 1, 2, 2, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 5, 1, 3, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 4, 3, 0, 1, 2, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 11, 0, 1, 7, 1,
	4, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	9, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 0, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 9,
	2, 2, 6, 10, 5, 5, 1, 3, 0, 3,
	0, 1, 0, 6, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 5, 4, 4, 5, 5, 5, 5, 4, 5,
	5, 5, 5, 5, 5, 5, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	3, 4, 3, 4, 1, 3, 4, 3, 4, 1,
	1, 1, 3, 4, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -2, -1, -3, -4, -5, -6, -48, -59,
	-61, -62, -27, -7, -58, -41, -42, -44, -50, -55,
	-56, -57, -67, -22, -21, -20, -19, 12, -8, -9,
	-341, -10, -182, -183, -184, -369, -28, -29, -30, -32,
	-33, -34, -35, -36, -37, -38, -31, -40, -39, 195,
	-43, 53, -45, -46, -47, -51, -52, -53, -54, 309,
	315, 364, -68, -70, -23, -24, -25, -26, 191, 14,
	436, -11, -14, -12, -15, -13, -17, -18, -16, 213,
	212, 32, 276, 277, 313, 211, 192, 13, 125, 126,
	128, 129, 25, -69, 58, 193, -71, 10, 482, -79,
	33, -102, -179, 62, -167, -170, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 433, 230, 254, 257, 264, 125, 144, 138,
	166, 158, 133, 234, 235, 69, 128, 393, 79, 378,
	363, 131, 249, 251, 253, 256, 236, 154, 149, 248,
	232, 147, 237, 34, 238, 171, 239, 240, 438, 374,
	291, 380, 261, 361, 148, 375, 252, 377, 172, 176,
	385, 315, 142, 143, 382, 387, 170, 210, 37, 435,
	222, 388, 174, 169, 165, 396, 265, 263, 168, 141,
	164, 233, 42, 178, 177, 179, 357, 358, 359, 360,
	241, 242, 303, 384, 161, 150, 295, 134, 22, 391,
	217, 379, 316, 243, 258, 266, 173, 175, 224, 229,
	437, 228, 262, 389, 146, 221, 250, 216, 392, 135,
	309, 318, 244, 129, 255, 386, 395, 41, 331, 140,
	132, 207, 126, 226, 231, 245, 246, 247, 268, 267,
	259, 162, 223, 167, 139, 163, 127, 225, 394, 332,
	481, 293, 346, 160, 157, 227, 200, 390, 381, 130,
	350, 333, 155, 269, 478, 479, 480, 304, 290, 270,
	271, 153, 214, 373, 272, 274, 275, -43, -9, -8,
	-69, -70, -186, 23, 361, -49, 362, 195, 58, -179,
	-5, -4, -41, -67, -185, -179, 276, -185, 198, -179,
	228, 345, -287, 203, -254, -231, 229, -253, -232, -256,
	-233, 26, 192, 191, 225, 14, 193, 313, 199, 12,
	10, 314, 211, 13, 315, 317, 318, 321, 322, 323,
	36, 326, 327, 62, 65, 236, -84, -85, -145, 19,
	6, 7, 8, 9, -289, 292, 346, 228, -225, -223,
	272, 324, 208, 207, 80, 398, 197, -353, -354, 188,
	189, 190, -343, 430, -342, -179, 431, -165, -370, -286,
	381, 380, -190, 379, 372, 383, 374, 191, 79, 159,
	156, 199, 382, 37, 385, 386, 375, 292, 346, -353,
	130, 127, -241, 85, 135, 134, -241, 228, 35, -247,
	356, -246, -248, 385, 386, 396, 63, 64, 384, -165,
	-179, 79, -85, -145, -84, -68, -70, -341, 292, 346,
	228, 199, 198, 200, 398, 276, -288, -349, 26, -293,
	185, 186, 187, 27, 28, -1, -91, 220, -102, 124,
	-85, -84, -85, -157, -179, 363, 94, -49, -49, 362,
	-344, -345, -346, -348, 195, 362, 361, 124, 15, -185,
	56, -102, -232, 228, -254, -231, 30, 55, 59, 201,
	59, 55, 58, 311, 325, 346, 312, 324, 200, 228,
	325, 228, 372, 200, 316, 319, 320, 373, -303, 396,
	-63, 33, -87, 21, -71, -70, 20, 26, 27, 26,
	27, 26, 27, 26, 27, -351, 198, 430, -221, 203,
	-221, -221, 199, -221, 198, -355, 137, 59, -343, -90,
	58, -189, 102, -189, -371, 15, 104, 227, 226, 376,
	373, -263, 377, 378, -190, -189, -189, -190, 198, 398,
	25, 25, -287, -287, -356, 202, 389, 436, 133, 134,
	135, -251, 26, 35, 355, -231, 228, 59, 94, 23,
	-249, 94, 105, -248, -248, -248, -249, -249, -122, 35,
	-178, 121, -179, 65, -122, 35, 124, -86, -87, -71,
	-70, 60, 60, -287, -287, -287, -287, -287, -287, -287,
	-185, -72, -73, 112, -205, -179, 86, 219, -207, 62,
	-200, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 79, 361, 303, 346,
	155, 304, 153, 214, -201, -203, -322, -316, -198, 58,
	110, 111, 118, 87, -202, -276, 30, 89, 406, -152,
	-153, -154, -155, -156, -317, -315, 65, 70, 73, 76,
	77, 75, 74, 151, 72, 66, 123, -70, -336, -168,
	-292, -298, 197, -296, 156, 152, 12, 116, 356, 121,
	-299, 475, 64, 63, 297, 298, 299, 398, 294, 300,
	203, 47, 301, 302, 305, 405, 306, 48, 307, 296,
	218, 308, 409, 408, 410, 402, 399, 397, 400, 401,
	403, 404, -72, -294, 38, -67, 58, 25, 58, -179,
	-86, -63, -87, 124, 70, 65, -49, 60, 59, -347,
	76, 77, -350, 170, 162, -179, -60, 65, -3, -4,
	-5, -6, -27, -41, -67, -318, -316, 58, 26, 355,
	55, 15, -255, 198, 398, 310, 224, 200, -253, -238,
	-236, -234, -178, -232, -235, -234, -258, -157, 373, -64,
	365, 274, 477, -63, -205, -179, -83, -82, -205, 200,
	-221, -358, 62, 86, -237, -235, -231, -177, 62, 63,
	64, -179, -221, -356, -342, 29, -89, -179, -141, 16,
	-203, -141, -102, -189, -189, -191, -371, -187, -371, 373,
	-141, -141, -263, -188, -179, -221, -358, -237, -76, -74,
	-77, -78, -80, -144, -146, -102, 58, 390, 391, 131,
	134, 133, 7, -252, 355, 26, -231, -246, -242, 65,
	356, -235, -250, 55, 121, -300, -205, 35, -249, -249,
	-249, -250, -250, 120, -179, -63, -358, -238, -231, -179,
	-104, -102, -104, -180, -177, -170, -140, 59, -139, 15,
	-174, 85, 82, 83, 84, -179, 29, 65, 124, -205,
	101, -216, 94, 95, 96, 97, 98, 99, 100, 58,
	58, 58, 58, 58, 58, 58, 58, -214, 58, 58,
	58, 58, 58, 58, 58, -214, 58, 58, 58, 58,
	58, 65, 65, 107, 106, 117, 110, 111, 112, 113,
	114, 115, 116, 108, 109, 104, 86, 102, 103, 88,
	-70, -205, -211, -203, -203, -203, -203, -276, -209, -205,
	58, -205, 58, 58, 58, -297, 58, 58, -213, -214,
	58, 65, 58, 58, 58, -203, 58, 58, -140, -295,
	-212, -335, 476, -93, 60, -88, -179, -333, -334, -88,
	-92, -179, -63, -63, -172, -173, -164, -169, -176, -177,
	-170, 292, 196, 26, 85, 29, 31, 297, 329, 88,
	121, 20, 89, 156, 120, 299, 406, 298, 191, 51,
	408, 410, 409, 399, 397, 348, 352, 354, 351, 398,
	372, 35, 14, 32, 212, 27, 28, 114, 193, 92,
	93, 215, 30, 213, 77, 23, 54, 15, 17, 18,
	300, 347, 203, 202, 104, 365, 199, 49, 12, 123,
	33, 101, 349, 45, 81, 47, 102, 21, 400, 401,
	36, 364, 432, 219, 116, 301, 302, 52, 86, 355,
	75, 55, 82, 19, 50, 103, 194, 405, 48, 353,
	305, 307, 430, 306, 197, 383, 10, 296, 407, 25,
	211, 46, 198, 91, 201, 76, 218, 152, 6, 80,
	13, 53, 56, 402, 403, 404, 38, 90, 16, 308,
	436, 356, 366, 367, 368, 369, 370, 371, 180, 181,
	182, 183, 184, 260, 206, 204, 208, 209, 476, 477,
	185, 186, 287, 289, 159, 188, 189, 190, 220, 137,
	7, 334, 335, 336, 337, 339, 340, 341, 342, 343,
	344, 345, 23, -49, -345, 124, 59, -89, -255, -237,
	-257, 112, 62, -243, 59, 436, 483, 63, 201, -366,
	347, 60, 59, -304, 202, 405, 65, 484, 275, 65,
	59, 22, 124, 59, -81, 31, 32, -102, 203, -102,
	-361, 334, 30, 35, 59, -224, 56, -219, -220, -218,
	-222, 35, -102, 15, -75, -103, -179, 58, 60, 59,
	-205, -141, -141, -141, -189, -180, -191, -186, -191, -187,
	124, -166, -179, -361, -367, 35, 25, -147, -148, -149,
	-150, 45, 49, 51, 46, 47, 48, 52, 25, 59,
	-372, 29, -175, -181, 29, -176, 65, -177, -170, -68,
	-70, 132, 135, 135, 134, -231, 201, 58, 94, -250,
	-250, -250, 35, -178, 55, 59, -141, -73, -74, -76,
	-205, -205, -205, -205, -179, 65, -179, 112, -199, 86,
	290, 75, 76, 77, -200, -217, 26, 270, 271, -210,
	-211, -205, -151, 27, 26, -151, -151, -205, -151, 112,
	-211, -211, 60, 70, -337, -338, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 301, 296, 302,
	300, 294, 308, 303, 304, 155, 428, 429, 422, 423,
	424, 425, 426, 427, -151, -151, -151, -151, -151, -205,
	-352, 288, 287, 289, -151, -151, -151, -151, -201, -201,
	-201, -201, -201, -201, -201, -201, -201, -201, -201, -201,
	-208, -215, -276, 58, 104, 102, 103, 88, -203, -201,
	-201, 60, 59, -340, -339, 90, -205, -337, -210, -205,
	-210, -210, 60, 60, -211, -210, -201, -210, -151, 65,
	-141, 59, 58, 60, 59, 38, 124, 59, 94, 60,
	59, 124, 363, -179, -316, 60, -257, 201, 124, 124,
	-236, 315, -178, -237, 20, 436, -157, 33, 65, 484,
	-307, 377, -205, -205, -179, -82, -90, 86, 58, -363,
	379, 336, -171, 94, 228, -235, 55, 282, 283, 284,
	285, -218, -165, 120, 239, 58, -102, -75, -179, 15,
	59, -357, 124, -1, -179, -141, -189, -189, -191, -179,
	-363, -196, -197, -195, 293, 36, -290, 356, 342, 343,
	228, -240, -239, -157, -77, -77, -77, -77, 45, 45,
	45, 50, 45, 50, 45, -149, -240, -80, -179, -181,
	60, 135, -237, -192, 65, -242, -102, -102, -143, 17,
	124, -199, 290, 75, -276, 60, 59, -205, -205, -205,
	29, -211, 60, 60, 60, 60, 15, -205, -205, -205,
	-205, -205, 60, 15, 15, -205, -205, -205, -205, -205,
	-211, -208, -203, -201, -201, -206, 215, 85, -205, -204,
	-339, 92, -205, 59, 56, 60, 15, 60, 60, 60,
	56, 60, 59, 60, -205, 59, -143, -212, -302, -301,
	-300, 38, -67, -88, -295, -179, -334, -300, -179, -172,
	-169, -177, -170, 70, 15, -231, 112, 112, 62, 316,
	-243, 65, 335, 65, 198, 94, -163, -162, 65, -313,
	371, 366, 368, 124, 29, 30, -97, -98, -99, -105,
	-100, -157, -194, -101, 206, 204, 208, -330, 80, 209,
	260, 81, 199, -364, 69, -359, 65, -360, 62, -102,
	-171, -171, -171, -97, -91, 56, 124, -74, -103, -179,
	112, 60, -141, -141, -189, -364, -365, 69, 337, -195,
	123, 295, 35, 338, 339, 353, 291, 70, 70, 344,
	-360, -141, 59, 94, -95, -94, 55, 56, -96, 55,
	-94, 45, 45, -141, -90, 60, -142, 18, 20, -179,
	112, -205, 60, 60, 60, -106, -108, 331, 332, -112,
	-109, -111, -110, -114, -113, 156, 157, 121, 160, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 25,
	214, 152, 153, 154, 155, 172, 138, 158, 434, 180,
	139, 181, 140, 182, 141, 183, 142, 143, 184, 144,
	147, 148, 149, 146, 60, -205, 60, 60, 60, 60,
	60, -205, -205, 15, 60, 60, 60, 60, 60, -206,
	85, -203, -200, 60, 93, -205, 91, -107, -113, 121,
	156, 214, 155, 154, 152, 331, 332, -122, -205, -122,
	-201, 60, 65, -142, 60, 59, -295, -237, -243, 356,
	-102, 65, 485, 59, 94, -284, 478, -311, 366, 20,
	20, -67, -102, 60, 59, -108, -101, -179, 81, -329,
	-330, -221, -329, 81, 58, 65, -362, 347, -196, 58,
	-122, -124, -178, 121, 65, 60, -175, -74, -179, -141,
	-357, 124, -141, 65, 65, 70, 35, 70, 123, 340,
	-291, -85, -239, -300, -205, 58, -205, -205, -211, 60,
	-115, 143, 142, -115, -283, 332, 331, -277, -279, 58,
	-278, 58, -278, -277, -277, 58, 58, -277, -280, 58,
	-280, -277, -281, 58, -281, -282, 58, -281, 60, 60,
	60, -205, -200, -205, 60, -277, -278, -277, -280, -277,
	-115, -115, 60, 60, 23, 60, 60, 60, -300, -66,
	-305, -263, 485, 59, -162, 65, -129, 479, 65, 20,
	65, -309, 65, -90, -120, -121, -138, 329, 230, -222,
	234, 69, 235, 363, 236, 199, 238, 239, 240, 210,
	241, 242, 243, 356, 244, 245, 246, 247, 312, 6,
	278, -99, -119, -118, -116, 75, 86, 35, 329, -117,
	69, 120, 253, 231, 254, -137, -193, 204, 80, 81,
	317, -194, -326, -327, -179, -327, -179, -326, -326, -221,
	-205, 20, 436, -365, -226, -228, -157, 58, -65, -64,
	-141, -141, 294, 35, 70, 35, 341, -86, -89, -285,
	333, 70, 70, -159, 65, -159, 70, 70, 70, 60,
	-205, -312, 371, -308, -306, 366, 367, 368, 369, 65,
	-160, 480, 70, 65, 368, 29, -259, 220, 59, -138,
	-171, -171, -165, 120, -171, -171, -171, -171, 237, 237,
	-171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
	-171, -171, -171, -171, 58, -116, 75, -201, 65, -124,
	-125, 35, 252, 248, -126, 35, 232, 233, -128, 58,
	260, 81, 81, -102, 58, 56, 269, 58, 58, 58,
	-327, 60, 65, 335, 65, 60, 59, -277, -205, -66,
	-85, 294, 60, 60, 60, 60, 59, 60, 60, 60,
	59, 60, 59, 60, -314, 202, -310, 370, -306, 20,
	368, 20, 20, 94, 58, 20, -67, 20, -138, 70,
	70, -171, -171, 70, 65, 65, 65, -171, -171, 70,
	65, -181, 70, 70, 70, 70, 35, 65, -127, 35,
	248, 252, 249, 250, 251, 70, 35, 70, 35, 70,
	35, -179, 58, -331, -332, 65, 70, 58, -227, 58,
	-226, -328, 282, 283, 284, 286, 285, -328, -226, -226,
	-226, 58, -245, -244, 261, 86, 356, -229, -228, -81,
	60, -86, 65, 70, 70, -321, 58, 70, -311, 20,
	-309, 20, -309, -309, 65, -161, -179, -309, -260, 262,
	263, -261, -267, 265, -122, -122, 65, 65, -123, 231,
	-104, 60, 59, 94, 60, -205, -131, -130, 432, -226,
	60, 60, 60, 60, -226, 261, -230, 210, 69, 436,
	280, 281, -81, 60, 60, -325, 25, 60, -320, -319,
	-158, -315, -179, 371, 65, -309, 485, 60, 59, -265,
	266, 58, -263, 58, -263, 81, 283, 232, 233, 60,
	-332, 65, 60, -135, -136, -133, -134, 55, 375, 258,
	259, 60, -229, -229, -229, -229, 60, -171, 65, 279,
	-324, -323, -322, 60, 59, 124, -179, -262, 267, 70,
	-201, 58, -201, 58, -264, 264, 58, -244, -134, 55,
	-133, 55, 14, 13, -137, 70, -177, 59, 94, -319,
	-179, -269, 58, 20, 60, -258, 60, -258, 58, 94,
	-201, -132, 255, 256, 25, 134, -132, -323, 35, -205,
	124, -270, -268, 220, -261, 60, 60, -258, 70, 60,
	75, 35, 257, -179, 60, 59, 62, -266, 268, 60,
	-268, -271, 38, 70, -275, -272, 58, -138, 222, -275,
	-138, -274, -273, 267, 223, 60, 59, 62, 219, 58,
	-273, -272, -211, 60,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 536, 537, 538, 539, 0, 342, 343,
	0, 322, 0, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 241, 242, 0,
	190, 186, 166, 167, 168, 126, 127, 128, 129, 247,
	0, 0, 412, -2, 540, 541, 542, 543, -2, 355,
	0, 323, 324, 325, 326, 327, 328, 329, 330, 230,
	231, 232, 227, 228, 229, -2, 0, 355, 179, 0,
	171, 171, 0, 432, 0, 0, 443, 465, 23, 390,
	0, 395, 720, 756, 757, 758, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 191, 344, 345,
	432, 432, 213, 0, 1337, 217, 0, 0, 0, 319,
	209, 210, 211, 212, 0, 528, 0, 206, 0, 185,
	1395, 0, 0, 0, 0, 0, 0, 87, 578, 89,
	580, 93, 95, 96, 99, 100, 101, 102, 103, 104,
	105, 106, 0, 108, 0, 110, 0, 113, 114, 115,
	0, 124, 125, 581, 582, 67, -2, 0, 0, 0,
	448, 451, 454, 457, 546, 607, 607, 607, 0, 607,
	0, 631, 584, 585, 586, 605, 606, 360, 356, 357,
	358, 359, 420, 0, 422, 425, 303, 303, 0, 0,
	294, 295, 0, 312, 303, 303, 312, 0, 1124, 0,
	0, 286, 287, 288, 292, 293, 313, 247, 247, 362,
	180, 181, 170, 0, 175, 0, 169, 1395, 0, 140,
	0, 145, 0, 1344, 1409, 1359, 0, 0, 1377, 0,
	164, -2, 427, 0, 433, 0, 432, 0, 247, 247,
	247, 247, 247, 247, 247, 0, 0, 0, 466, 467,
	462, 463, 464, 468, 469, 3, 0, 0, 394, 0,
	427, -2, 0, 214, 759, 0, 0, 218, 219, 0,
	0, 233, 0, 236, 222, 223, 224, 0, 0, 208,
	0, 0, 187, 0, 0, 0, 248, 81, 0, 0,
	0, 0, 0, 94, 123, 97, 98, 0, 118, 120,
	122, 121, 107, 119, 109, 111, 112, 117, 0, 68,
	415, 0, 396, 0, 445, 447, 0, 449, 450, 452,
	453, 455, 456, 458, 459, 0, 607, 547, 0, 0,
	0, 0, 0, 0, 607, 362, 361, 0, 421, 0,
	0, 474, 0, 474, 0, 308, 309, 303, 303, 296,
	305, 0, 310, 311, 0, 474, 474, 0, 0, 607,
	1125, 1126, 0, 0, 0, 363, 0, 0, 173, 0,
	178, 130, 135, 133, 134, 136, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 0, 0, 153, 156,
	714, 715, 575, 576, 157, 158, 0, 396, 428, 444,
	446, 441, 442, 0, 0, 0, 0, 0, 0, 0,
	341, 482, 476, 478, 523, 31, 0, 1009, 1014, 756,
	1019, -2, 1472, 1473, 1474, 1475, 1476, 1477, 1478, -2,
	1480, -2, -2, 1483, 1484, 1485, 1487, -2, -2, -2,
	-2, -2, -2, 1494, -2, -2, -2, 1498, 1499, -2,
	-2, 1502, 1503, 1504, 1505, 1506, -2, -2, -2, -2,
	-2, -2, -2, -2, 1030, 827, 828, 829, 830, 0,
	0, 0, 0, 0, 837, 838, 0, 851, 0, 844,
	845, 846, 847, 848, 43, 44, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 976, 814, 0, 0,
	0, 961, 0, 951, 0, 989, 0, 0, 0, 0,
	0, 0, 45, 46, 967, 969, 970, 972, 973, 974,
	975, 978, 979, 980, 983, 984, 985, 986, 987, 988,
	991, 993, 963, 964, 965, 966, 955, 956, 957, 958,
	959, 960, 482, 364, 382, 366, 0, 371, 0, 721,
	396, 418, 396, 0, 215, 0, 220, 0, 0, 235,
	237, 238, 239, 225, 226, 320, 204, 205, 197, 198,
	199, 200, 201, 202, 203, 207, 41, 0, 188, 189,
	81, 0, 0, 82, 83, 84, 85, 86, 88, 72,
	333, 335, 568, 579, 0, 571, 0, 91, 116, 64,
	0, 0, 0, 416, 429, 31, 434, 435, 438, 0,
	0, 0, 549, 0, 0, 565, 577, 599, 533, 534,
	535, -2, 0, 0, 423, 0, 0, 510, 283, 0,
	304, 284, 474, 474, 474, 303, 0, 305, 0, 305,
	299, 300, 0, 314, 316, 0, 0, 245, 487, 0,
	488, 489, 485, 512, 515, 518, 0, 182, 183, 0,
	0, 177, 0, 0, 137, 138, 139, 146, 141, 143,
	0, 0, 147, 159, 160, 161, 388, 389, 0, 0,
	0, 151, 152, 0, 165, 414, 331, 332, 336, 0,
	338, 718, 339, 340, 529, 530, 474, 0, 483, 0,
	479, 0, 0, 0, 0, 524, 0, 526, 0, 1008,
	0, 0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1000,
	996, 996, 996, 0, 996, 0, 0, 936, 0, 0,
	996, 996, 996, 996, 996, 937, 0, 996, 996, 996,
	996, 950, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1002, 0, 833, 834, 835, 836, 839, 0, 852,
	0, 0, 1000, 1000, 1000, 939, 0, 0, 941, 952,
	0, 945, 1000, 0, 1000, 949, 996, 0, 474, 365,
	379, 0, 383, 0, 0, 375, 377, 370, 372, 0,
	0, 392, 417, 419, 760, 0, 1131, -2, 1133, -2,
	-2, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 0, 221, 234, 0, 0, 0, 0, 75,
	0, 76, 80, 70, 0, 0, 0, 570, 0, 567,
	0, 90, 0, 0, 65, 66, 621, 0, 0, 398,
	0, 0, 0, 0, 437, 439, 440, 425, 0, 0,
	555, 1127, 608, 0, 0, 0, 0, 604, -2, 611,
	0, 617, 0, 0, 0, 349, 353, 23, 426, 0,
	475, 285, 289, 290, 474, 306, 303, 307, 303, 305,
	0, 315, 318, 555, 249, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 516, 517, 519, 0, 521, 522, 531, 532, 0,
	432, 184, 172, 174, 0, 132, 0, 0, 0, 148,
	149, 150, 154, 155, 0, 0, 472, 477, 484, 487,
	1004, 1005, 1006, 1007, 525, 527, 32, 480, 1010, 0,
	1012, 1015, 1020, 1021, 1017, 0, 1035, -2, -2, 0,
	1001, 1002, 0, 997, 998, 0, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 0, 0, 0, 0, 0, 0,
	0, 902, 903, 904, 0, 0, 0, 0, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	1022, 1033, 1034, 0, 0, 0, 0, 0, 1031, 1026,
	0, 831, 0, 849, 853, 0, 0, 995, 0, 1002,
	0, 0, 962, 940, 0, 0, 0, 0, 0, 0,
	472, 382, 384, 0, 0, 382, 0, 0, 0, 391,
	0, 0, 0, 321, 42, 240, 0, 0, 0, 0,
	334, 0, 569, 72, 0, 0, 92, 0, 0, 628,
	402, 0, 430, 431, 32, 436, 0, 0, 722, 558,
	556, 557, 0, 1128, 0, 566, 0, 600, 601, 602,
	603, 612, 1127, 1127, 1127, 722, 390, 0, -2, 0,
	0, 351, 0, 0, 511, 297, 474, 474, 303, 317,
	558, 562, 250, 251, 253, 254, 255, 0, 0, 0,
	0, 474, 194, 0, 506, 500, 0, 493, 504, 505,
	496, 0, 498, 0, 494, 495, 474, 486, 425, 520,
	514, 176, 131, 0, 271, 142, 337, 719, 470, 0,
	0, 1011, 1013, 1016, 1018, 889, 0, 0, 0, 0,
	0, 0, 878, 872, 873, 954, 0, 0, 0, 0,
	0, 0, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 1023, 1031, 1027, 0, 1024, 0, 0, 1003, 0,
	854, 0, 0, 0, 0, 890, 0, 894, 938, 942,
	0, 946, 0, 948, 0, 0, 470, 380, 0, 385,
	386, 382, 369, 376, 368, 378, 373, 374, 393, 761,
	1132, 1129, 1130, 216, 0, 72, 77, 78, 79, 73,
	71, 572, 0, 574, 0, 0, 0, 626, 0, 404,
	53, 0, 0, 0, 0, 0, 0, 723, 724, 726,
	727, 0, 0, 729, 783, 0, 738, 607, 738, 0,
	0, 740, 741, 548, 0, 0, 551, 249, 561, 0,
	0, 0, 0, 0, 518, 0, 0, 474, 350, 353,
	354, 424, 301, 298, 474, 243, 244, 0, 0, 252,
	0, 257, 258, 0, 0, 0, 270, 266, 267, 268,
	246, 432, 0, 0, 490, 507, 0, 0, 491, 0,
	492, 497, 499, 193, 513, 144, 460, 0, 0, 33,
	481, 1003, 874, 875, 876, 0, 856, 868, 868, 1119,
	1060, 1061, 1062, 1106, 1064, 1110, 1110, 1106, 1106, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 0, 0,
	1083, 1106, 1108, 1108, 1106, 1103, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1113, 1113, 1116, 1113, 877, 0, 896, 879, 880, 883,
	881, 0, 0, 0, 895, 884, 885, 871, 999, 1025,
	0, 1032, 1028, 832, 840, 850, 0, 0, 859, 1106,
	1110, 862, 1106, 1108, 1106, 868, 868, 0, 0, 0,
	0, 882, 0, 461, 381, 0, 367, 74, 69, 573,
	55, 0, 624, 628, 0, 406, 0, 403, 0, 0,
	0, 544, 425, -2, 0, -2, 728, 784, 750, 750,
	739, 750, 750, 607, 0, 559, 550, 0, 562, 0,
	613, 614, 716, 717, 615, 0, 474, 474, -2, 347,
	352, 0, 302, 563, 564, 0, 259, 260, 0, 263,
	269, 427, 195, 196, 508, 0, 501, 471, 473, 841,
	857, 869, 870, 858, 1122, 1120, 1121, 1063, 1107, 0,
	1088, 0, 1089, 1090, 1091, 0, 0, 1084, 1085, 0,
	1086, 1087, 1079, 0, 1080, 1081, 0, 1082, 893, 898,
	899, 0, 1029, 855, 842, 860, 861, 863, 864, 865,
	866, 867, 843, 891, 0, 943, 947, 901, 387, 24,
	49, 0, 622, 0, 627, 629, 408, 0, 405, 0,
	399, 401, 63, 0, 632, -2, 670, 1127, 1127, 0,
	1127, 1127, 1127, 1127, 0, 0, 1127, 1127, 1127, 1127,
	1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127,
	0, 725, 752, -2, 764, 766, 0, 0, 769, 770,
	0, 0, 0, 0, 806, 776, 0, 0, 1047, 1048,
	0, 782, 0, 742, 751, 0, 751, 0, 0, 750,
	0, 0, 0, 560, 0, 595, 1106, 0, 619, 55,
	432, 348, 256, 261, 0, 264, 265, 192, 0, 1059,
	1123, 0, 0, 0, 1104, 0, 0, 0, 0, 900,
	0, 47, 51, 56, 57, 0, 0, 0, 0, 0,
	397, 0, 407, 54, 0, 0, 618, 0, 616, 672,
	0, 0, 1127, 1127, 0, 0, 0, 0, 1127, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 767, 768, 771, 772,
	773, 811, 812, 813, 774, 808, 809, 810, 775, 0,
	0, 1045, 1046, 804, 0, 0, 0, 0, 0, 0,
	0, 736, 552, 0, 554, 588, 0, 438, 0, 620,
	427, 262, 509, 1112, 1111, 1101, 0, 1102, 1109, 1114,
	0, 1117, 0, 892, 34, 0, 53, 0, 58, 0,
	0, 0, 0, 0, 0, 0, 545, 666, 671, 673,
	674, 0, 0, 677, 678, 679, 680, 0, 0, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 708,
	709, 710, 711, 712, 713, 693, 694, 695, 696, 697,
	698, 705, 0, 0, 702, 0, 0, 0, 799, 0,
	0, 743, 745, 746, 747, 748, 749, 744, 0, 0,
	0, 0, 735, 737, 779, 0, 553, 587, 596, 597,
	438, 346, 1105, 0, 0, 25, 0, 0, 50, 0,
	59, 0, 61, 62, 0, 0, 410, 400, 655, 0,
	0, 661, 0, 667, 675, 676, 681, 682, 699, 0,
	0, 701, 0, 0, 807, 0, 786, 800, 0, 0,
	588, 588, 588, 588, 0, 780, 589, 1127, 0, 0,
	593, 594, 598, 1115, 1118, 625, 0, 35, 0, 37,
	39, 40, 753, 48, 52, 60, 623, 409, 0, 634,
	0, 0, 0, 0, 0, 664, 0, 706, 707, 700,
	703, 704, 777, 785, 787, 788, 789, 0, 801, 802,
	803, 805, 730, 731, 732, 733, 0, 0, 591, 0,
	26, 27, 0, 36, 0, 0, 411, 636, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 778, 790, 0,
	791, 0, 0, 0, 734, 590, 592, 0, 0, 38,
	754, 633, 0, 666, 657, 0, 659, 0, 0, 0,
	0, 792, 794, 795, 0, 0, 793, 28, 29, 30,
	0, 0, 638, 0, 653, 658, 660, 0, 665, 663,
	796, 798, 797, 755, 637, 0, 650, 635, 0, 662,
	639, -2, 0, 654, 640, -2, 0, 648, 0, 641,
	649, 0, 644, 0, 0, 643, 0, -2, 651, 0,
	645, -2, 0, 652,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 482,
	95, 94, 96, 3, 483, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 484, 106, 485, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:541
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:547
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:573
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:577
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:583
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:604
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:608
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:614
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:621
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:634
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:651
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:657
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:666
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:687
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:691
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:750
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:754
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:771
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:775
		{
			yyVAL.str = yyDollar[3].str
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:780
		{
			yyVAL.str = "\n"
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:784
		{
			yyVAL.str = yyDollar[3].str
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:793
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:817
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:827
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:833
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:868
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:891
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Users:      yyDollar[8].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1026
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1052
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1056
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1078
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1082
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1234
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1284
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = yyDollar[3].str
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1301
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1305
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1311
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1344
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1367
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1460
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1471
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1581
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1588
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1614
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1709
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1755
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1772
		{
			yyVAL.str = "true"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1773
		{
			yyVAL.str = "false"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpts:           yyDollar[6].userMiscOptionsUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1835
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1841
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1845
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.item = nil
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.item = nil
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2085
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.str = yyDollar[2].str
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2095
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2128
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2132
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2145
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2149
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2186
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2190
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2302
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2306
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2312
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2317
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2324
		{
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2326
		{
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2329
		{
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2338
		{
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2342
		{
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2356
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2369
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2377
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2391
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2414
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2418
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2433
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2437
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2447
		{
			yyVAL.str = yyDollar[3].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2453
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2457
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2463
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2468
		{
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2483
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2499
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2509
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2515
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2519
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2548
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2555
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2573
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2605
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2609
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2622
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2626
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2631
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2635
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2642
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2647
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2676
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2702
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2706
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2712
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2724
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2733
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2756
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2762
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2772
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2812
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3012
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3027
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3031
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3037
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3041
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3049
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3054
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3062
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3076
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3080
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3131
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3135
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3145
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3149
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3153
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3157
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3173
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3179
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3183
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3187
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3197
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3213
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3217
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3223
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3245
		{
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3246
		{
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3262
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3270
		{
			yyVAL.str = yyDollar[2].str
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3279
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3283
		{
			yyVAL.str = yyDollar[1].str
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3287
		{
			yyVAL.str = yyDollar[2].str
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3295
		{
			yyVAL.str = yyDollar[2].str
		}
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3350
		{
		}
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3373
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3389
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3396
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3402
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3410
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3416
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3431
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3437
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               tree.Role{UserName: yyDollar[7].str},
				MiscOpts:           yyDollar[8].userMiscOptionsUnion(),
				CommentOrAttribute: yyDollar[9].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3463
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3469
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3477
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3584
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3588
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3656
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3683
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3691
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3695
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3724
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3768
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3772
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3778
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3788
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3792
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3796
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3800
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3810
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3824
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3837
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3843
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3847
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3866
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.CreateTable{
				Table: *yyDollar[5].tableNameUnion(),
				Defs:  yyDollar[7].tableDefsUnion(),
				Param: yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3897
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3904
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				ScanType:     tree.LOCAL,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3912
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				ScanType:     tree.LOCAL,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3924
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				ScanType:     tree.LOCAL,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3936
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				S3option: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:3945
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3957
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3961
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3966
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3970
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3976
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3980
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3989
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4003
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4016
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4022
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4026
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4032
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4041
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4055
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4061
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4065
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4087
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4091
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4100
		{
			expr := tree.NewMaxValueExpr()
			exprs := tree.Exprs{expr}
			yyLOCAL = &tree.ValuesLessThan{ValueList: exprs}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4111
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4115
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4125
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4129
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4140
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4148
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4156
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4175
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4195
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4199
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4217
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4223
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4227
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4231
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4237
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4245
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4253
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4257
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4261
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4265
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4273
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4277
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4281
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4289
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4293
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4356
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4360
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4366
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4375
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4379
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4385
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4423
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4432
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4437
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4443
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4450
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4454
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4460
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4464
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4470
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4480
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4504
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4560
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4574
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4580
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4586
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4600
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4607
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4613
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4617
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4649
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4655
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4659
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4669
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4673
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4677
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4681
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4685
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4693
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4705
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4709
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4713
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4732
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4736
		{
			yyVAL.str = yyDollar[1].str
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4742
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4746
		{
			yyVAL.str = yyDollar[2].str
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4763
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4803
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4809
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4836
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4847
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4851
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4860
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4865
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4869
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4891
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4899
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4931
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4935
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4939
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4945
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4949
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4953
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4961
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4973
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4977
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4981
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4985
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4989
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4994
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5010
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5019
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5023
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5027
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5031
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5035
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5044
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5059
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5063
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5079
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5113
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5139
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5195
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5227
		{
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5242
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5250
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5285
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5348
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5357
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5373
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5381
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5405
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5414
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5448
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5544
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5558
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5566
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5592
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5600
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5611
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5620
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5629
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5637
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5647
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5655
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5663
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5687
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5706
		{
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5708
		{
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5748
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5758
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5762
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5772
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5781
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5791
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5798
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5806
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5822
		{
			yyLOCAL = tree.NewMaxValueExpr()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5826
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5834
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5839
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5844
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5850
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5854
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5858
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5869
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5873
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5899
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5903
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5917
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5923
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5927
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5934
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5938
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5942
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5978
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5982
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5986
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6000
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6013
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6044
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6048
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6068
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6079
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6084
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6139
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6271
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6294
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6331
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6379
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6423
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6443
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6463
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6492
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6505
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6518
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6531
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6639
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6690
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6695
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6701
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6708
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6712
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6717
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6721
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6763
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6779
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6787
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6793
		{
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6805
		{
			yyVAL.str = ""
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6809
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
