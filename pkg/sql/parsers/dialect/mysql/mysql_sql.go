// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const PREPARE = 57597
const DEALLOCATE = 57598
const PROPERTIES = 57599
const PARSER = 57600
const VISIBLE = 57601
const INVISIBLE = 57602
const BTREE = 57603
const HASH = 57604
const RTREE = 57605
const BSI = 57606
const ZONEMAP = 57607
const LEADING = 57608
const BOTH = 57609
const TRAILING = 57610
const UNKNOWN = 57611
const EXPIRE = 57612
const ACCOUNT = 57613
const UNLOCK = 57614
const DAY = 57615
const NEVER = 57616
const SECOND = 57617
const ASCII = 57618
const COALESCE = 57619
const COLLATION = 57620
const HOUR = 57621
const MICROSECOND = 57622
const MINUTE = 57623
const MONTH = 57624
const QUARTER = 57625
const REPEAT = 57626
const REVERSE = 57627
const ROW_COUNT = 57628
const WEEK = 57629
const REVOKE = 57630
const FUNCTION = 57631
const PRIVILEGES = 57632
const TABLESPACE = 57633
const EXECUTE = 57634
const SUPER = 57635
const GRANT = 57636
const OPTION = 57637
const REFERENCES = 57638
const REPLICATION = 57639
const SLAVE = 57640
const CLIENT = 57641
const USAGE = 57642
const RELOAD = 57643
const FILE = 57644
const TEMPORARY = 57645
const ROUTINE = 57646
const EVENT = 57647
const SHUTDOWN = 57648
const NULLX = 57649
const AUTO_INCREMENT = 57650
const APPROXNUM = 57651
const SIGNED = 57652
const UNSIGNED = 57653
const ZEROFILL = 57654
const ADMIN_NAME = 57655
const RANDOM = 57656
const SUSPEND = 57657
const ATTRIBUTE = 57658
const HISTORY = 57659
const REUSE = 57660
const CURRENT = 57661
const OPTIONAL = 57662
const FAILED_LOGIN_ATTEMPTS = 57663
const PASSWORD_LOCK_TIME = 57664
const UNBOUNDED = 57665
const SECONDARY = 57666
const USER = 57667
const IDENTIFIED = 57668
const CIPHER = 57669
const ISSUER = 57670
const X509 = 57671
const SUBJECT = 57672
const SAN = 57673
const REQUIRE = 57674
const SSL = 57675
const NONE = 57676
const PASSWORD = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FORMAT = 57682
const VERBOSE = 57683
const CONNECTION = 57684
const LOAD = 57685
const INFILE = 57686
const TERMINATED = 57687
const OPTIONALLY = 57688
const ENCLOSED = 57689
const ESCAPED = 57690
const STARTING = 57691
const LINES = 57692
const DATABASES = 57693
const TABLES = 57694
const EXTENDED = 57695
const FULL = 57696
const PROCESSLIST = 57697
const FIELDS = 57698
const COLUMNS = 57699
const OPEN = 57700
const ERRORS = 57701
const WARNINGS = 57702
const INDEXES = 57703
const SCHEMAS = 57704
const NAMES = 57705
const GLOBAL = 57706
const SESSION = 57707
const ISOLATION = 57708
const LEVEL = 57709
const READ = 57710
const WRITE = 57711
const ONLY = 57712
const REPEATABLE = 57713
const COMMITTED = 57714
const UNCOMMITTED = 57715
const SERIALIZABLE = 57716
const LOCAL = 57717
const CURRENT_TIMESTAMP = 57718
const DATABASE = 57719
const CURRENT_TIME = 57720
const LOCALTIME = 57721
const LOCALTIMESTAMP = 57722
const UTC_DATE = 57723
const UTC_TIME = 57724
const UTC_TIMESTAMP = 57725
const REPLACE = 57726
const CONVERT = 57727
const SEPARATOR = 57728
const CURRENT_DATE = 57729
const CURRENT_USER = 57730
const CURRENT_ROLE = 57731
const SECOND_MICROSECOND = 57732
const MINUTE_MICROSECOND = 57733
const MINUTE_SECOND = 57734
const HOUR_MICROSECOND = 57735
const HOUR_SECOND = 57736
const HOUR_MINUTE = 57737
const DAY_MICROSECOND = 57738
const DAY_SECOND = 57739
const DAY_MINUTE = 57740
const DAY_HOUR = 57741
const YEAR_MONTH = 57742
const SQL_TSI_HOUR = 57743
const SQL_TSI_DAY = 57744
const SQL_TSI_WEEK = 57745
const SQL_TSI_MONTH = 57746
const SQL_TSI_QUARTER = 57747
const SQL_TSI_YEAR = 57748
const SQL_TSI_SECOND = 57749
const SQL_TSI_MINUTE = 57750
const RECURSIVE = 57751
const CONFIG = 57752
const MATCH = 57753
const AGAINST = 57754
const BOOLEAN = 57755
const LANGUAGE = 57756
const WITH = 57757
const QUERY = 57758
const EXPANSION = 57759
const ADDDATE = 57760
const BIT_AND = 57761
const BIT_OR = 57762
const BIT_XOR = 57763
const CAST = 57764
const COUNT = 57765
const APPROX_COUNT_DISTINCT = 57766
const APPROX_PERCENTILE = 57767
const CURDATE = 57768
const CURTIME = 57769
const DATE_ADD = 57770
const DATE_SUB = 57771
const EXTRACT = 57772
const GROUP_CONCAT = 57773
const MAX = 57774
const MID = 57775
const MIN = 57776
const NOW = 57777
const POSITION = 57778
const SESSION_USER = 57779
const STD = 57780
const STDDEV = 57781
const STDDEV_POP = 57782
const STDDEV_SAMP = 57783
const SUBDATE = 57784
const SUBSTR = 57785
const SUBSTRING = 57786
const SUM = 57787
const SYSDATE = 57788
const SYSTEM_USER = 57789
const TRANSLATE = 57790
const TRIM = 57791
const VARIANCE = 57792
const VAR_POP = 57793
const VAR_SAMP = 57794
const AVG = 57795
const JSON_EXTRACT = 57796
const ROW = 57797
const OUTFILE = 57798
const HEADER = 57799
const MAX_FILE_SIZE = 57800
const FORCE_QUOTE = 57801
const UNUSED = 57802

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7119

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	21, 432,
	-2, 413,
	-1, 68,
	199, 583,
	-2, 619,
	-1, 85,
	226, 291,
	227, 291,
	-2, 312,
	-1, 363,
	21, 433,
	-2, 396,
	-1, 437,
	94, 1301,
	105, 1301,
	124, 1301,
	-2, 1113,
	-1, 467,
	21, 433,
	-2, 396,
	-1, 626,
	58, 1450,
	-2, 1457,
	-1, 634,
	58, 1451,
	-2, 1465,
	-1, 636,
	58, 1447,
	-2, 1467,
	-1, 637,
	58, 1448,
	-2, 1468,
	-1, 642,
	58, 1449,
	-2, 1474,
	-1, 643,
	58, 1452,
	-2, 1475,
	-1, 644,
	58, 1453,
	-2, 1476,
	-1, 645,
	58, 875,
	-2, 1477,
	-1, 646,
	58, 876,
	-2, 1478,
	-1, 647,
	58, 877,
	-2, 1479,
	-1, 649,
	58, 1454,
	-2, 1481,
	-1, 650,
	58, 895,
	-2, 1482,
	-1, 651,
	58, 894,
	-2, 1483,
	-1, 654,
	58, 1455,
	-2, 1486,
	-1, 655,
	58, 1456,
	-2, 1487,
	-1, 661,
	58, 957,
	-2, 1301,
	-1, 662,
	58, 966,
	-2, 1326,
	-1, 663,
	58, 970,
	-2, 1365,
	-1, 664,
	58, 981,
	-2, 1425,
	-1, 665,
	58, 983,
	-2, 1435,
	-1, 666,
	58, 971,
	-2, 1440,
	-1, 667,
	58, 979,
	-2, 1444,
	-1, 668,
	58, 960,
	-2, 1445,
	-1, 824,
	1, 609,
	60, 609,
	478, 609,
	-2, 616,
	-1, 962,
	21, 432,
	-2, 803,
	-1, 1009,
	124, 1123,
	-2, 1121,
	-1, 1011,
	124, 531,
	-2, 1118,
	-1, 1012,
	124, 532,
	-2, 1119,
	-1, 1215,
	1, 610,
	60, 610,
	478, 610,
	-2, 616,
	-1, 1303,
	58, 1025,
	-2, 1442,
	-1, 1304,
	58, 1026,
	-2, 1443,
	-1, 1463,
	56, 353,
	59, 353,
	-2, 709,
	-1, 1789,
	79, 616,
	120, 616,
	156, 616,
	159, 616,
	-2, 657,
	-1, 1791,
	260, 770,
	-2, 751,
	-1, 1813,
	56, 353,
	59, 353,
	-2, 710,
	-1, 1894,
	79, 616,
	120, 616,
	156, 616,
	159, 616,
	-2, 658,
	-1, 1922,
	260, 770,
	-2, 752,
	-1, 2315,
	59, 631,
	60, 631,
	-2, 616,
	-1, 2319,
	59, 631,
	60, 631,
	-2, 616,
	-1, 2331,
	59, 635,
	60, 635,
	-2, 616,
	-1, 2335,
	59, 636,
	60, 636,
	-2, 616,
}

const yyPrivate = 57344

const yyLast = 21372

var yyAct = [...]int{
	808, 1306, 2321, 2326, 2319, 2318, 2292, 671, 2266, 1955,
	801, 2157, 690, 2237, 2281, 1263, 1934, 2218, 2130, 2219,
	1890, 2134, 2111, 556, 1783, 1201, 1953, 892, 102, 2066,
	1954, 857, 1307, 316, 322, 797, 322, 602, 2118, 1259,
	1613, 105, 669, 593, 1842, 364, 1942, 702, 63, 1807,
	320, 22, 326, 1923, 435, 1970, 828, 1466, 1941, 101,
	830, 1646, 1609, 534, 877, 1853, 1845, 625, 1835, 1857,
	363, 391, 544, 1487, 1258, 851, 1614, 1476, 308, 1686,
	63, 991, 1185, 1618, 1795, 1676, 1694, 670, 817, 1665,
	1221, 1628, 1550, 436, 1624, 1478, 462, 1006, 332, 1009,
	1000, 102, 992, 62, 1513, 1390, 680, 1001, 1448, 1376,
	1294, 854, 1245, 546, 1486, 870, 1445, 1220, 852, 443,
	30, 818, 1898, 319, 15, 3, 317, 6, 810, 1182,
	318, 5, 464, 800, 837, 1216, 795, 1305, 1308, 438,
	393, 1320, 442, 617, 874, 672, 63, 895, 787, 22,
	898, 1207, 30, 477, 929, 585, 838, 839, 814, 1261,
	794, 312, 1285, 569, 440, 309, 427, 390, 334, 98,
	516, 1189, 335, 12, 7, 4, 1981, 1886, 1782, 805,
	994, 321, 603, 93, 2174, 616, 1950, 1430, 571, 496,
	1211, 96, 532, 2184, 398, 97, 563, 1434, 441, 1186,
	515, 97, 388, 27, 87, 69, 448, 447, 449, 2206,
	752, 2204, 97, 1447, 307, 1437, 380, 324, 30, 859,
	860, 412, 15, 749, 461, 6, 97, 97, 97, 5,
	27, 87, 69, 841, 555, 572, 446, 554, 557, 558,
	428, 803, 97, 751, 27, 87, 69, 329, 513, 94,
	557, 558, 2241, 509, 1576, 2064, 1446, 2222, 2223, 788,
	94, 792, 2067, 2068, 2069, 2070, 97, 2145, 27, 87,
	69, 1601, 2148, 1984, 94, 94, 94, 1602, 1784, 1603,
	451, 92, 804, 772, 1418, 791, 471, 871, 81, 2133,
	94, 1779, 1803, 1192, 1656, 480, 444, 413, 1658, 1962,
	1824, 867, 1647, 1208, 1967, 1841, 1840, 2042, 500, 51,
	470, 1596, 331, 1939, 94, 783, 511, 512, 1594, 469,
	499, 2050, 510, 1427, 322, 1959, 102, 2232, 1652, 323,
	577, 2036, 2311, 382, 2183, 2208, 2327, 360, 2246, 578,
	361, 1653, 1654, 379, 378, 365, 2203, 1297, 1298, 1299,
	445, 414, 504, 466, 468, 2159, 1655, 487, 1295, 2253,
	2181, 63, 63, 442, 374, 2030, 360, 790, 2302, 361,
	2221, 1518, 1298, 1299, 1453, 1454, 1455, 1456, 440, 467,
	505, 88, 89, 1999, 90, 91, 1998, 2165, 2155, 2156,
	391, 2159, 564, 362, 2210, 2211, 1435, 480, 1485, 1450,
	2186, 2187, 450, 2119, 2120, 2121, 2123, 2122, 2025, 68,
	581, 95, 507, 521, 489, 1480, 1650, 409, 2132, 441,
	533, 508, 553, 552, 372, 1551, 2328, 2322, 491, 85,
	436, 436, 436, 30, 30, 597, 597, 536, 537, 439,
	539, 2293, 2333, 1987, 2284, 463, 535, 68, 86, 95,
	330, 49, 322, 620, 620, 789, 377, 482, 481, 404,
	502, 2143, 570, 1423, 1272, 496, 754, 85, 80, 79,
	595, 595, 503, 506, 2021, 473, 474, 1190, 373, 599,
	812, 538, 1622, 1780, 770, 619, 619, 605, 325, 1837,
	1836, 308, 541, 1506, 501, 419, 597, 1268, 597, 470,
	488, 385, 386, 387, 755, 485, 575, 548, 802, 862,
	63, 1270, 1269, 750, 560, 561, 573, 574, 863, 1267,
	861, 416, 580, 63, 557, 558, 557, 558, 82, 83,
	381, 417, 63, 2209, 1823, 779, 406, 597, 2306, 405,
	824, 2270, 1816, 391, 421, 420, 829, 518, 1636, 475,
	102, 549, 807, 2285, 820, 811, 2185, 520, 1296, 482,
	481, 59, 1187, 1187, 846, 84, 1648, 60, 1659, 597,
	102, 403, 1187, 2043, 872, 1604, 2096, 1597, 1515, 407,
	1467, 834, 1517, 436, 1651, 597, 844, 1188, 591, 592,
	1425, 1424, 543, 2131, 559, 30, 813, 562, 1951, 1431,
	1623, 1963, 886, 2332, 30, 2026, 2027, 495, 778, 833,
	597, 775, 891, 102, 102, 774, 61, 70, 878, 799,
	907, 842, 843, 70, 878, 878, 866, 307, 847, 796,
	896, 604, 781, 615, 70, 832, 819, 761, 756, 747,
	784, 894, 490, 404, 893, 893, 1417, 1412, 70, 70,
	70, 757, 1236, 439, 911, 579, 897, 849, 777, 776,
	773, 567, 568, 793, 70, 885, 835, 836, 1479, 798,
	588, 589, 590, 1199, 2282, 2283, 964, 1619, 1622, 1177,
	868, 910, 765, 766, 1459, 758, 601, 2023, 70, 806,
	483, 2022, 608, 609, 610, 611, 612, 613, 614, 465,
	404, 947, 1640, 1591, 825, 586, 873, 963, 2288, 890,
	826, 1310, 1309, 840, 547, 971, 587, 1483, 1484, 1593,
	406, 1184, 962, 405, 1383, 2279, 848, 584, 454, 459,
	460, 1482, 850, 1449, 973, 2169, 883, 884, 1381, 1382,
	1380, 1993, 1663, 796, 880, 881, 882, 1414, 400, 869,
	402, 412, 998, 998, 1003, 399, 397, 396, 408, 401,
	550, 410, 411, 965, 966, 967, 968, 888, 769, 1592,
	889, 1183, 1274, 887, 1011, 472, 768, 406, 441, 1754,
	405, 2299, 1391, 829, 1556, 1391, 383, 597, 969, 2097,
	2099, 2100, 2101, 2098, 906, 903, 1623, 1315, 583, 442,
	1012, 1616, 987, 1460, 1443, 1617, 1620, 392, 937, 816,
	63, 418, 903, 102, 102, 2032, 1926, 948, 949, 950,
	951, 952, 953, 954, 947, 2031, 1222, 946, 945, 955,
	956, 948, 949, 950, 951, 952, 953, 954, 947, 1179,
	1799, 316, 1794, 2016, 1204, 1206, 2107, 2317, 1238, 551,
	1929, 1891, 2298, 2263, 896, 441, 1924, 1621, 2247, 997,
	2193, 1937, 1938, 981, 1226, 2301, 2141, 1925, 950, 951,
	952, 953, 954, 947, 415, 1181, 904, 905, 906, 903,
	897, 2106, 30, 1879, 2105, 1756, 597, 456, 457, 458,
	904, 905, 906, 903, 1198, 1227, 1228, 1229, 990, 1264,
	620, 1930, 102, 422, 2140, 2300, 1266, 2113, 2091, 1290,
	2090, 1292, 1525, 878, 878, 878, 2089, 1176, 1010, 2104,
	1878, 1279, 2086, 1318, 1175, 2080, 1004, 2077, 1005, 1316,
	1317, 1197, 619, 1319, 1180, 2103, 1286, 1287, 1288, 1289,
	2093, 2076, 904, 905, 906, 903, 1982, 1217, 1960, 1975,
	1974, 1230, 1973, 1625, 904, 905, 906, 903, 1313, 1282,
	2242, 1969, 1265, 1271, 987, 904, 905, 906, 903, 1968,
	2102, 1355, 1820, 1821, 1232, 2092, 1234, 1284, 1657, 1588,
	759, 1300, 2231, 1961, 1400, 1936, 1231, 1615, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1239, 840, 1235, 1385, 1386, 1392, 1233, 1395, 1822, 2214,
	2112, 1759, 1932, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 1709, 1275, 1276, 1277, 1402, 360,
	2163, 1538, 361, 2162, 1931, 1933, 1733, 1730, 1731, 1732,
	2139, 2331, 1764, 1283, 1763, 1762, 1760, 1384, 2094, 1743,
	2087, 1406, 914, 915, 916, 917, 918, 919, 920, 912,
	2083, 1750, 1311, 1312, 1378, 1314, 821, 822, 823, 2309,
	2082, 1350, 1351, 1352, 1353, 1354, 1537, 2081, 1360, 1361,
	1362, 1363, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 1939, 2044, 2018, 1983, 904, 905,
	906, 903, 1559, 1971, 1761, 1558, 1927, 1889, 1887, 1819,
	2215, 1629, 1394, 1396, 1397, 1393, 904, 905, 906, 903,
	1697, 1818, 1401, 1810, 1403, 1801, 1772, 1404, 904, 905,
	906, 903, 904, 905, 906, 903, 1627, 1716, 1720, 1722,
	1724, 1726, 1727, 1729, 1598, 1733, 1730, 1731, 1732, 1509,
	2137, 1711, 1712, 1713, 1714, 1695, 1696, 1717, 1405, 1698,
	1196, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1715, 904, 905, 906, 903, 718, 717, 1419, 1719,
	1721, 1723, 1725, 1728, 1195, 983, 944, 597, 943, 597,
	760, 597, 815, 1565, 2190, 470, 1521, 1564, 1561, 2189,
	1440, 1521, 2337, 2170, 1432, 2330, 2329, 1202, 1203, 1194,
	2312, 2057, 597, 1710, 2308, 2307, 2062, 1765, 1766, 2053,
	1463, 1194, 2296, 2052, 1428, 1882, 1469, 1194, 2295, 1880,
	1438, 1439, 1877, 811, 2269, 2268, 2287, 1474, 904, 905,
	906, 903, 1869, 470, 102, 102, 102, 102, 2046, 2229,
	1834, 1461, 1488, 2046, 2224, 470, 102, 1503, 904, 905,
	906, 903, 2041, 1789, 1488, 904, 905, 906, 903, 1774,
	1976, 63, 1458, 597, 22, 1281, 2212, 1442, 1675, 1429,
	1641, 102, 102, 1865, 904, 905, 906, 903, 2201, 2200,
	1568, 1470, 904, 905, 906, 903, 2046, 2179, 2046, 2178,
	1504, 1566, 1264, 2046, 2177, 904, 905, 906, 903, 1563,
	1422, 1562, 1511, 1512, 2046, 2176, 1526, 2168, 2167, 1560,
	796, 2061, 2060, 1426, 1420, 831, 1687, 1688, 1530, 1441,
	2059, 2058, 1527, 1451, 1520, 1864, 1505, 1462, 1217, 2055,
	2056, 1522, 1399, 30, 1523, 1524, 1471, 15, 1472, 1468,
	6, 1457, 2055, 2054, 5, 1398, 1475, 904, 905, 906,
	903, 1507, 1489, 1490, 1491, 1492, 1500, 1502, 1255, 1501,
	1473, 955, 956, 948, 949, 950, 951, 952, 953, 954,
	947, 1545, 606, 1532, 1533, 1534, 1535, 1536, 1464, 1540,
	1510, 1225, 2051, 1541, 1542, 1543, 1544, 367, 368, 369,
	370, 2046, 2045, 1521, 1748, 1521, 1516, 1211, 1519, 1635,
	366, 998, 1465, 1580, 998, 1521, 1734, 1583, 1521, 1529,
	1407, 1553, 1521, 1528, 1557, 1548, 1549, 962, 901, 1718,
	1225, 1421, 1465, 1586, 1416, 1415, 786, 1569, 831, 1863,
	1790, 878, 1410, 1409, 1254, 470, 1775, 878, 1225, 1224,
	2276, 607, 1771, 102, 1612, 1194, 1193, 63, 1570, 1587,
	1577, 904, 905, 906, 903, 102, 1222, 1241, 1639, 1547,
	763, 762, 899, 1575, 904, 905, 906, 903, 1255, 1582,
	496, 1662, 97, 441, 1630, 87, 69, 1378, 785, 1255,
	1546, 1211, 494, 1579, 496, 1555, 946, 945, 955, 956,
	948, 949, 950, 951, 952, 953, 954, 947, 1413, 1388,
	1572, 1571, 1595, 1753, 1581, 1584, 1679, 1585, 1578, 1747,
	493, 1210, 1590, 1281, 494, 2278, 1746, 1186, 1200, 1178,
	94, 97, 1642, 1643, 542, 904, 905, 906, 903, 582,
	1637, 904, 905, 906, 903, 1211, 2272, 1661, 904, 905,
	906, 903, 2254, 2251, 1681, 2249, 1638, 2192, 1634, 2035,
	597, 1745, 1673, 2128, 1735, 2116, 597, 1631, 1632, 1633,
	1645, 1741, 1742, 1649, 1744, 2114, 1674, 1660, 2109, 94,
	2071, 1670, 1844, 904, 905, 906, 903, 1644, 2039, 1755,
	597, 1242, 2038, 2037, 1768, 595, 904, 905, 906, 903,
	1740, 595, 1213, 1767, 1739, 1679, 2034, 102, 2029, 1769,
	1770, 1247, 1250, 1251, 1252, 1248, 1793, 1249, 1253, 1738,
	1752, 2014, 904, 905, 906, 903, 904, 905, 906, 903,
	545, 1854, 597, 597, 1846, 1858, 102, 1813, 1788, 1751,
	1749, 904, 905, 906, 903, 1758, 1861, 1851, 1850, 1830,
	1805, 1800, 1379, 63, 94, 1444, 1787, 1773, 1776, 486,
	1408, 1737, 1273, 470, 2259, 1223, 2274, 595, 1808, 989,
	988, 986, 1488, 1778, 985, 1806, 1264, 984, 1777, 982,
	1833, 930, 1797, 904, 905, 906, 903, 979, 978, 976,
	1792, 975, 1791, 974, 972, 942, 878, 1815, 1814, 1829,
	941, 1796, 1831, 1796, 1798, 1817, 1804, 1826, 940, 1811,
	1832, 1812, 946, 945, 955, 956, 948, 949, 950, 951,
	952, 953, 954, 947, 939, 1736, 938, 2316, 1828, 1684,
	936, 935, 440, 934, 933, 932, 1827, 931, 928, 927,
	926, 925, 1848, 1849, 958, 924, 961, 904, 905, 906,
	903, 904, 905, 906, 903, 923, 1852, 1838, 922, 1856,
	959, 960, 957, 1847, 946, 945, 955, 956, 948, 949,
	950, 951, 952, 953, 954, 947, 1866, 921, 782, 1855,
	753, 102, 498, 1666, 1667, 2257, 2220, 1669, 1452, 1868,
	1280, 470, 1895, 497, 1672, 1943, 1945, 1683, 1943, 1943,
	1612, 1859, 1671, 1862, 1870, 1497, 470, 1872, 878, 1874,
	1498, 1495, 1884, 1411, 1682, 1494, 1496, 1493, 1867, 904,
	905, 906, 903, 1387, 1218, 1202, 1203, 1871, 1881, 1873,
	1599, 829, 1940, 1949, 1875, 1876, 904, 905, 906, 903,
	1883, 1499, 1944, 1251, 1252, 904, 905, 906, 903, 517,
	1606, 1209, 492, 1920, 1985, 50, 1946, 1947, 1605, 1257,
	827, 1892, 29, 1948, 1964, 28, 1952, 1567, 1310, 1309,
	2234, 1815, 1957, 1958, 946, 945, 955, 956, 948, 949,
	950, 951, 952, 953, 954, 947, 304, 1965, 1247, 1250,
	1251, 1252, 1248, 305, 1249, 1253, 306, 1989, 529, 530,
	527, 528, 525, 526, 523, 524, 566, 1972, 1979, 565,
	1174, 519, 1977, 2273, 946, 945, 955, 956, 948, 949,
	950, 951, 952, 953, 954, 947, 367, 368, 369, 370,
	2197, 597, 2195, 2150, 2149, 2147, 2074, 2072, 1888, 366,
	102, 1786, 1785, 1678, 522, 366, 1677, 1514, 831, 1945,
	2261, 2260, 2260, 1992, 1589, 1531, 484, 2261, 864, 1256,
	394, 35, 1, 1940, 1240, 1191, 1808, 1802, 1626, 2017,
	540, 2033, 384, 1356, 531, 767, 2015, 453, 479, 764,
	2019, 478, 476, 1389, 1321, 703, 993, 999, 2110, 2048,
	2233, 2075, 2265, 2191, 2236, 2040, 780, 689, 2142, 1600,
	2047, 2063, 2144, 2049, 2065, 1990, 1991, 1436, 1994, 1995,
	1996, 1997, 1978, 2108, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 440, 1433,
	514, 1573, 1574, 63, 715, 470, 2073, 706, 470, 470,
	470, 977, 2088, 708, 1264, 748, 455, 470, 946, 945,
	955, 956, 948, 949, 950, 951, 952, 953, 954, 947,
	705, 2117, 1825, 1481, 2125, 2126, 2127, 371, 452, 395,
	1966, 1781, 2152, 2136, 1839, 2124, 1860, 2135, 1843, 597,
	597, 2325, 2315, 2291, 2271, 2158, 2310, 2138, 2202, 2252,
	2245, 2154, 1986, 2153, 336, 2146, 865, 576, 425, 2129,
	337, 2078, 2079, 2182, 2115, 375, 1212, 2084, 2085, 376,
	102, 1215, 1214, 1301, 595, 595, 913, 470, 1377, 980,
	970, 623, 2160, 2161, 1554, 679, 673, 1477, 1935, 470,
	1508, 845, 34, 33, 32, 902, 1007, 2166, 704, 104,
	1237, 893, 1008, 2175, 2151, 1980, 2238, 2171, 688, 687,
	686, 685, 684, 1246, 1244, 2180, 1243, 856, 855, 900,
	2217, 2216, 2172, 2188, 2173, 1885, 2028, 2095, 2196, 2194,
	2198, 2199, 2024, 2020, 2164, 1894, 1893, 1921, 1922, 2205,
	2207, 1928, 1693, 1689, 1691, 1552, 1692, 1690, 1757, 1685,
	1610, 2213, 1611, 2240, 1608, 1607, 1668, 1664, 2225, 2226,
	2227, 2228, 2244, 995, 1002, 2239, 946, 945, 955, 956,
	948, 949, 950, 951, 952, 953, 954, 947, 2243, 809,
	99, 853, 11, 10, 771, 9, 14, 21, 20, 19,
	58, 57, 56, 55, 2255, 18, 8, 2258, 2256, 54,
	53, 52, 2267, 17, 16, 47, 2262, 2248, 2264, 2250,
	470, 48, 470, 45, 44, 43, 42, 41, 40, 802,
	2275, 802, 2277, 39, 46, 38, 37, 36, 67, 66,
	2240, 2290, 65, 64, 23, 24, 2286, 25, 26, 470,
	77, 76, 2239, 2289, 78, 2294, 74, 72, 802, 2297,
	75, 73, 2230, 71, 31, 2267, 2303, 2280, 13, 2,
	0, 0, 0, 0, 0, 0, 0, 2313, 0, 0,
	0, 0, 0, 0, 0, 2314, 0, 0, 0, 0,
	0, 2305, 2324, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 0, 2334, 2336, 2335, 0, 2324, 1120,
	1162, 0, 0, 1108, 0, 1070, 1122, 1044, 1059, 1130,
	1060, 1061, 1095, 1023, 1079, 228, 1057, 0, 1111, 1015,
	1047, 1048, 1017, 1054, 1018, 1045, 1072, 173, 1043, 1082,
	198, 1128, 0, 0, 257, 212, 0, 0, 1075, 1113,
	1077, 1100, 1069, 1096, 1031, 1089, 1123, 1058, 1093, 1124,
	0, 0, 0, 0, 0, 821, 822, 823, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 1092, 1117,
	1056, 0, 158, 1121, 1076, 1094, 0, 0, 1016, 1090,
	0, 1021, 1024, 1129, 1115, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1073, 1078, 1097, 1066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1049, 0, 1086,
	0, 0, 0, 1026, 1022, 0, 1071, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	1161, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 1119, 301, 167, 292, 1025,
	284, 151, 1156, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 1140, 1141, 1142, 1143, 1144, 1152, 1153,
	0, 1157, 1158, 1159, 1030, 0, 1050, 1098, 0, 1014,
	1106, 1114, 1068, 286, 1116, 1065, 1064, 1147, 0, 1146,
	261, 1148, 1149, 197, 1112, 1046, 1055, 302, 1053, 247,
	230, 1118, 1085, 1160, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 1145, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 1155, 298,
	180, 1013, 281, 0, 226, 1109, 1019, 1029, 1027, 1062,
	1087, 1088, 222, 297, 1102, 1105, 1103, 1131, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1020, 0,
	258, 279, 291, 1163, 1164, 1165, 1166, 0, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 282, 1063, 1037, 1074, 290,
	1040, 1038, 1101, 1039, 1091, 1133, 216, 217, 218, 219,
	183, 0, 160, 1083, 1067, 1134, 1135, 1136, 1137, 1138,
	1139, 1042, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 1107, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 1036, 1041, 1035, 1080,
	1081, 1125, 1126, 1127, 1099, 1028, 1110, 1032, 1034, 1033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 1084, 142, 0, 199, 1132, 240, 178, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 681, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 726, 732, 1150, 1151, 294, 295, 296,
	280, 0, 0, 0, 674, 0, 0, 0, 624, 718,
	717, 691, 700, 0, 0, 155, 692, 0, 699, 693,
	697, 696, 694, 695, 0, 661, 0, 0, 0, 0,
	0, 0, 621, 678, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 675, 676, 0, 0,
	0, 0, 712, 0, 677, 0, 0, 714, 0, 701,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 698, 710, 667,
	167, 665, 709, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 286, 0, 0, 725,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	668, 0, 247, 230, 735, 622, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	1357, 1359, 298, 180, 0, 281, 723, 226, 734, 719,
	720, 721, 724, 727, 728, 663, 666, 729, 731, 733,
	736, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 713, 216,
	217, 218, 219, 662, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 742,
	722, 741, 743, 744, 740, 745, 746, 730, 683, 0,
	738, 737, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 121, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 716, 0, 0,
	294, 295, 296, 280, 97, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 726, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 624, 718, 717, 691,
	700, 0, 0, 155, 692, 0, 699, 693, 697, 696,
	694, 695, 0, 661, 0, 0, 0, 0, 0, 0,
	621, 678, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 676, 0, 0, 0, 0,
	712, 0, 677, 0, 0, 714, 0, 701, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 698, 710, 667, 167, 665,
	709, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 286, 0, 0, 725, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 668, 0,
	247, 230, 735, 622, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 723, 226, 734, 719, 720, 721,
	724, 727, 728, 663, 666, 729, 731, 733, 736, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 713, 216, 217, 218,
	219, 662, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 742, 722, 741,
	743, 744, 740, 745, 746, 730, 683, 0, 738, 737,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 70, 240, 178, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 121, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 716, 711, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 173, 879,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 726, 732, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 674, 0, 0, 0, 624, 718, 717, 691,
	700, 0, 0, 155, 692, 0, 699, 693, 697, 696,
	694, 695, 0, 661, 0, 0, 0, 0, 0, 0,
	621, 678, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 676, 0, 0, 0, 0,
	712, 0, 677, 0, 0, 876, 0, 701, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 698, 710, 667, 167, 665,
	709, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 286, 0, 0, 725, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 668, 0,
	247, 230, 735, 622, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 723, 226, 734, 719, 720, 721,
	724, 727, 728, 663, 666, 729, 731, 733, 736, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 713, 216, 217, 218,
	219, 662, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 742, 722, 741,
	743, 744, 740, 745, 746, 730, 683, 0, 738, 737,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 121, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 716, 711, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 173, 2304,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 726, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 624, 718, 717, 691,
	700, 0, 0, 155, 692, 0, 699, 693, 697, 696,
	694, 695, 0, 661, 0, 0, 0, 0, 0, 0,
	621, 678, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 676, 0, 0, 0, 0,
	712, 0, 677, 0, 0, 714, 0, 701, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 698, 710, 667, 167, 665,
	709, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 286, 0, 0, 725, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 668, 0,
	247, 230, 735, 622, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 723, 226, 734, 719, 720, 721,
	724, 727, 728, 663, 666, 729, 731, 733, 736, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 713, 216, 217, 218,
	219, 662, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 742, 722, 741,
	743, 744, 740, 745, 746, 730, 683, 0, 738, 737,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 121, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 716, 711, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 173, 879,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 726, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 624, 718, 717, 691,
	700, 0, 0, 155, 692, 0, 699, 693, 697, 696,
	694, 695, 0, 661, 0, 0, 0, 0, 0, 0,
	621, 678, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 676, 0, 0, 0, 0,
	712, 0, 677, 0, 0, 714, 0, 701, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 698, 710, 667, 167, 665,
	709, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 286, 0, 0, 725, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 668, 0,
	247, 230, 735, 622, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 723, 226, 734, 719, 720, 721,
	724, 727, 728, 663, 666, 729, 731, 733, 736, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 713, 216, 217, 218,
	219, 662, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 742, 722, 741,
	743, 744, 740, 745, 746, 730, 683, 0, 738, 737,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 121, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 716, 0, 0, 294, 295,
	296, 280, 711, 0, 0, 1539, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 621, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 0, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 622,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 711, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 621, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 618, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 622,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 711, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 621, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 0, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 622,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 711, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 1302, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 0, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	1303, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 711, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 621, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 0, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 622,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 711, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 726, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 624, 718, 717, 691, 700, 0, 0, 155,
	692, 0, 699, 693, 697, 696, 694, 695, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 676, 0, 0, 0, 0, 712, 0, 677, 0,
	0, 714, 0, 701, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 698, 710, 667, 167, 665, 709, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	286, 0, 0, 725, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 668, 0, 247, 230, 735, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	723, 226, 734, 719, 720, 721, 724, 727, 728, 663,
	666, 729, 731, 733, 736, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 713, 216, 217, 218, 219, 662, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 742, 722, 741, 743, 744, 740, 745,
	746, 730, 683, 0, 738, 737, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	121, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 716, 0, 0, 294, 295, 296, 280, 97, 0,
	27, 87, 69, 0, 0, 0, 0, 0, 0, 0,
	228, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 346, 350, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	0, 0, 0, 340, 339, 343, 0, 1341, 0, 0,
	0, 345, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 349, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 341, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 311, 313, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 344, 348, 351, 0, 352, 353, 0, 0, 354,
	355, 356, 0, 0, 358, 359, 0, 0, 0, 0,
	0, 0, 1337, 0, 1334, 0, 0, 0, 1336, 1333,
	1335, 1339, 1340, 0, 0, 0, 1338, 142, 0, 199,
	70, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 1619, 1622, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1344, 1345, 1346, 1347, 1348, 1349, 1342, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 286, 0, 0,
	0, 1616, 0, 1615, 261, 1617, 1620, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 1621, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 908, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 909, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 904, 905,
	906, 903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	424, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 432, 433,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 406, 284, 151, 405, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 423, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 426, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 434, 429, 430, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 97, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 996, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 70, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 432, 433,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 406, 284, 151, 405, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 434, 429, 430, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 600,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 598,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 594, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 598, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2235, 0, 103, 718, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 598, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 598, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 173, 1278, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 598, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 0, 284, 151, 0, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 718, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 183, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 598,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 1291, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 1219, 0, 0, 294, 295, 296, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 1205,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 327, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 100, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	1260, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 822, 823, 1262, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 821, 822, 823, 1262,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 821,
	822, 823, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 0,
	0, 0, 904, 905, 906, 903, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 1341, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 0, 1716, 1720, 1722, 1724, 1726, 1727, 1729,
	1918, 1733, 1730, 1731, 1732, 0, 0, 1711, 1712, 1713,
	1714, 1695, 1696, 1717, 0, 1698, 0, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 0, 1218,
	0, 294, 295, 296, 280, 1719, 1721, 1723, 1725, 1728,
	1337, 0, 1334, 0, 0, 0, 1336, 1333, 1335, 1339,
	1340, 0, 2320, 0, 1338, 0, 0, 0, 1918, 0,
	0, 0, 0, 1900, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1344, 1345,
	1346, 1347, 1348, 1349, 1342, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1908, 347, 0, 346, 350, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 1897, 0, 0, 0, 1899, 1901,
	1903, 357, 1905, 1906, 1907, 1909, 1910, 1911, 1913, 1914,
	1915, 1916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1904, 0, 0, 0, 0, 0, 360, 0, 0,
	361, 0, 1908, 0, 0, 0, 0, 0, 1919, 1904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1908, 0, 1897, 0, 0, 1718, 1899, 1901, 1903, 0,
	1905, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916,
	1897, 0, 1917, 0, 1899, 1901, 1903, 0, 1905, 1906,
	1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 0, 1896,
	0, 0, 0, 0, 0, 0, 1919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	346, 350, 342, 0, 1919, 0, 1912, 0, 0, 0,
	0, 0, 0, 1902, 338, 0, 0, 0, 0, 0,
	1917, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 1917, 0,
	0, 0, 0, 0, 0, 0, 340, 339, 343, 0,
	360, 0, 0, 361, 345, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 1912, 0, 349, 0, 0, 0,
	0, 1902, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 1912, 0, 333, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 348, 351, 0, 352, 353,
	0, 0, 354, 355, 356, 0, 0, 358, 359, 340,
	339, 343, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 348, 351,
	0, 352, 353, 0, 0, 354, 355, 356, 0, 0,
	358, 359,
}

var yyPact = [...]int{
	256, -1000, -309, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18633, -1000, -1000,
	1472, -1000, 7838, 19082, 57, 19082, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 290,
	-1000, 18184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 247,
	20915, 157, -1000, 1920, -1000, -1000, -1000, -1000, 136, 313,
	17735, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 380, 9, 313, 391, 404,
	410, 410, 9185, 1920, 217, 8, -1000, 702, 256, 225,
	19082, -1000, 575, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1920, 1920, 19082,
	-73, 681, -1000, 232, 191, 202, 566, -1000, -1000, -1000,
	-1000, 1941, -1000, 19082, 1603, 19082, -1000, 967, 186, 21048,
	1822, 1465, 406, 1738, -1000, -1000, 1724, -1000, 13, -13,
	152, -1000, -1000, 184, -1000, -1000, -1000, -1000, -1000, 53,
	-1000, 10, -1000, 1, -1000, -1000, -1000, -121, -1000, -1000,
	-1000, -1000, -192, 1816, 1890, 1521, 1924, 1878, 1876, 1874,
	1872, -6, 243, 243, 243, 282, 243, -1000, -1000, -1000,
	-1000, -1000, -1000, 355, -1000, -1000, -1000, -1000, 1475, 19082,
	-1000, 1572, 612, 612, 745, 196, -1000, -1000, -135, -150,
	612, 612, -150, -2, -1000, 1884, 1881, -1000, -1000, -1000,
	-1000, -1000, -1000, 247, 247, 260, -1000, -197, -1000, 383,
	-1000, 371, -1000, 304, 182, 1480, 704, -1000, 611, 19082,
	19082, 19082, 611, 611, 10993, 10544, 562, -1000, 1890, 1521,
	-1000, 1322, 1391, 1521, 247, 247, 247, 247, 247, 247,
	247, 19082, 5530, 5530, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 185, 1722, -1000, 19082, 1890, 1816, 1890, -1000,
	561, 910, 1125, -1000, -1000, 232, 1411, -1000, 606, -1000,
	-1000, -1000, -1000, 19082, 218, -1000, 1113, 1720, -1000, 289,
	1433, 1421, -1000, 61, 7922, 15034, 967, 15034, 19082, -1000,
	-1000, -1000, -1000, -128, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -79, -1000, -1000, -294, 1816, 5990,
	-1000, -1000, 5990, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 280, 243, -1000, 1130, 723, 15034, 967, 1004, 19082,
	260, -1000, 19082, 1475, 1831, 19082, 1932, 7370, 1932, 19082,
	-1000, -1000, 612, 612, -1000, 745, 745, -1000, -1000, -136,
	1932, 1932, -123, 19082, 243, -1000, -1000, 1130, 15034, 14585,
	-1000, -167, 389, 375, 385, -1000, -1000, 1951, -1000, -1000,
	1435, 275, 10095, 222, 15034, 3684, -1000, -1000, 611, 611,
	611, 3684, 3684, 545, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19082, 1816, -1000, -1000, -1000, -1000, -1000, 1130, 15034,
	967, 19082, 19082, 19082, 20277, -1000, 1413, -1000, -1000, 8736,
	557, 5990, -1000, 958, 1719, -1000, -1000, 1700, 1697, 1687,
	1683, 1682, 1681, 1680, -1000, 1623, -1000, -1000, 1679, 1677,
	1676, 1675, -1000, -1000, -1000, -1000, -1000, -1000, 1673, -1000,
	-1000, -1000, 1672, 1623, -1000, -1000, 1668, 1666, 1650, 1642,
	1637, -1000, -1000, -1000, -1000, -1000, -1000, 1123, 1121, 1658,
	-1000, -1000, -1000, -1000, 3224, 7370, 7370, 7370, 7370, -1000,
	-1000, 1596, 5990, 1636, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6910, -1000, 1635, 1633, 1631, 1630, 1629, 1623, 1621,
	1120, 1619, 1616, 1613, 7370, 1612, 1611, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1413, -1000, -292,
	-1000, 9646, 19082, 19082, -1000, 1816, -1000, 1816, 2333, -1000,
	1887, -1000, 232, 100, -1000, -1000, -1000, -1000, -1000, -1000,
	555, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1470, -1000, 19082, -1000, -1000, 61, 15034, 659, -1000, -1000,
	-1000, -1000, -1000, -1000, 140, -1000, -1000, 108, -1000, 276,
	-50, 1396, -1000, -1000, 1119, 1095, -1000, 872, 549, 1469,
	-1000, 1176, 17286, 19082, -27, -1000, 1821, 1486, -1000, 1435,
	1546, -1000, -1000, -1000, 1789, 16837, -1000, 1607, 1389, -1000,
	-1000, 5990, -1000, -1000, 1932, 1932, 1932, 612, 20277, 745,
	19082, 745, -1000, -1000, 745, -1000, 528, 19082, -27, 1432,
	1566, 1419, -1000, -1000, -1000, -1000, 1830, 19531, 217, -1000,
	-1000, 387, 362, 377, 967, 263, -1000, -1000, 1435, -1000,
	-1000, -1000, 1604, 678, -1000, -1000, 7370, -1000, 808, -1000,
	3684, 3684, 3684, -1000, -1000, 12789, -1000, -1000, -1000, 1468,
	1435, 1735, 1464, -1000, 1464, -1000, -1000, -1000, 1932, 5530,
	-1000, 14585, -1000, 5990, 5990, 5990, 5990, -1000, 16381, -1000,
	15932, -1000, 272, 6450, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5990, 1842, 1842, 1842, 5990, 685, 5990, 5990, -1000,
	863, 7962, 1842, 1842, 1842, 1842, 1842, -1000, 2756, 1842,
	1842, 1842, 1842, -1000, -1000, 7370, 7370, 7370, 7370, 7370,
	7370, 7370, 7370, 7370, 7370, 7370, 7370, 1594, 636, 7370,
	7370, 7370, 1391, 1763, 1450, -1000, -1000, -1000, -1000, -1000,
	695, 808, 5990, 20470, 5990, 5990, 5990, -1000, 1295, 1282,
	-1000, -1000, 5990, -1000, 5990, 7370, 5990, -1000, 1842, 1093,
	1932, 1361, -1000, 1602, -1000, 1383, 1775, -1000, 523, 1449,
	-1000, 653, 1375, -1000, -1000, -1000, -1000, 522, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -75, -1000, -1000, 19082, 1113, 1371,
	659, 1348, 262, 467, 466, -1000, 15034, 12, 15034, -1000,
	15034, -1000, 167, -1000, 19082, -5, -158, 5990, 5990, 19082,
	5990, -1000, -1000, -1000, 1572, 718, 1597, -119, 639, -1000,
	171, 15034, 1733, 96, -1000, 1789, -1000, 564, -1000, 19082,
	1373, -1000, 456, 256, -1000, 19082, 808, -1000, -1000, -1000,
	1932, -1000, 612, -1000, 612, 745, 19082, -1000, -1000, -119,
	379, 170, 19082, 14585, 14585, 14585, 14585, -1000, 1772, 1770,
	-1000, 1766, 1760, 1796, 19082, 14585, 19082, -1000, -1000, -1000,
	19904, -1000, -1000, -1000, -1000, 1276, 1920, -1000, -1000, -1000,
	358, 1435, 15034, 1084, 222, -1000, -1000, -1000, -1000, -1000,
	19082, 19082, 1930, -1000, 1430, 1843, -1000, 710, 710, 727,
	-1000, -1000, 454, -1000, -1000, 296, -1000, -1000, -1000, -1000,
	-1000, 1596, -1000, -1000, -1000, 1274, 1346, 808, 5990, -1000,
	-1000, 5990, 5990, 883, 5990, 1272, 1363, 1359, -1000, 1268,
	1940, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5990, 5990, 5990, 5990, 5990, 1016, 5070, -1000, -1000, -1000,
	5990, 5990, 5990, 5990, 1263, 906, -1000, 756, 756, 584,
	584, 584, 584, 584, 707, 707, -1000, -1000, -1000, 3224,
	1594, 7370, 7370, 7370, 210, 1942, 2100, -1000, 5990, 692,
	-1000, 5990, 1046, -1000, 1259, 1183, 1251, 1249, -1000, -1000,
	1137, 1241, 1808, 1230, 5990, 1399, 1930, -292, 4604, 216,
	19082, -292, 19082, 19082, 4604, -1000, 19082, 2333, 909, -1000,
	-1000, -1000, 1939, 967, 591, 657, -1000, 6, -1000, 131,
	246, 1079, -1000, 1797, -1000, -1000, -96, -85, 808, 808,
	451, -1000, 1829, 1820, 8287, 884, -1000, -1000, 1071, -1000,
	1049, -1000, 19082, -1000, -1000, -1000, -1000, -1000, 639, 639,
	639, 225, 1353, 424, 14585, 19082, -1000, 14136, 1220, -1000,
	-1000, 1932, 1932, 612, -1000, 884, 233, 379, -1000, -1000,
	-1000, 293, 7, 908, 228, 1049, 1422, -1000, 648, 1728,
	1732, 1728, -1000, -1000, -1000, -1000, 1757, -1000, 1749, -1000,
	-1000, 1422, -1000, 1572, -1000, -1000, -1000, 1348, 1218, -1000,
	-1000, -1000, -1000, 1928, 1923, 15483, -1000, -1000, -1000, -1000,
	-1000, 5990, 1754, 1737, 1669, 999, 1356, -1000, -1000, -1000,
	-1000, 5990, 1665, 1601, 1559, 1544, 1540, -1000, 5990, 5990,
	1034, 1514, 1501, 1466, 1459, 1344, -1000, 210, 1942, 976,
	-1000, 7370, 7370, 1453, 686, -1000, 5990, 794, 890, 11891,
	-1000, 5990, -1000, -1000, -1000, 11891, -1000, 7370, -1000, 1392,
	1061, 1928, -1000, 1209, 1387, -1000, -292, -1000, -1000, 1361,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15034,
	130, -1000, -1000, -1000, -1000, -1000, -1000, -61, -1000, 285,
	-296, -84, 1922, 1921, 19082, 217, 19082, 1203, 1381, -1000,
	-1000, -1000, 20575, 597, -1000, 19082, 761, 401, 243, 401,
	759, 1593, -1000, -1000, -1000, 1060, -51, -1000, 379, -1000,
	1592, 11891, 12340, 1058, 19531, 14585, 14136, 1309, -1000, 418,
	-1000, -1000, -1000, -1000, 1932, -1000, -1000, 1056, 1044, -1000,
	902, -1000, -1000, 938, 411, -36, -1000, -1000, -1000, -1000,
	-1000, 1926, 19082, 4604, -1000, -1000, 5990, 1591, -1000, 5990,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 5990, 5990, -1000,
	-1000, 808, -1000, -1000, -1000, 1190, -1000, 347, 347, -22,
	-1000, -1000, -1000, 1524, -1000, 1576, 1576, 1524, 1524, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1590, 1589,
	-1000, 1524, 1573, 1573, 1524, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1577, 1577, 1588, 1577, -1000, 1379, -1000, -1000, -1000, -1000,
	-1000, 1275, 1223, 5990, -1000, -1000, -1000, -1000, -1000, -1000,
	7370, -1000, -1000, -1000, -1000, 808, 5990, 1182, -1000, 1524,
	1576, -1000, 1524, 1573, 1524, 347, 347, 1172, 860, 1169,
	1768, -1000, 1165, -1000, -1000, 4604, 1361, 1348, -1000, -1000,
	19082, -298, 1043, -1000, 1918, 1042, 786, -1000, 1572, 20790,
	8287, 781, -1000, -1000, 19082, 19082, -1000, 19082, 19082, 243,
	5990, -1000, -1000, 166, 233, 13687, -1000, -1000, -1000, -1000,
	-1000, 1932, 1309, 418, -1000, -1000, 590, -1000, -1000, -1000,
	35, -1000, -1000, 913, 264, -1000, 1890, -1000, -1000, 808,
	19082, 808, 808, 1346, -1000, -1000, -1000, -1000, -1000, -25,
	-1000, -1000, -1000, -1000, 899, -1000, 891, -1000, -1000, -1000,
	1038, 1038, -1000, -1000, 882, -1000, -1000, -1000, 880, -1000,
	-1000, 879, -1000, -1000, -1000, -1000, 1210, -1000, 808, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5990,
	-1000, -1000, -1000, -1000, -123, -300, 876, -1000, 1032, -91,
	-1000, -1000, 1825, 223, 20772, -1000, 639, 639, 621, 639,
	639, 639, 639, 149, 146, 639, 639, 639, 639, 639,
	639, 639, 639, 639, 639, 639, 639, 639, 639, 1563,
	-1000, -1000, 781, -1000, -1000, 768, 7370, -1000, -1000, 1031,
	12340, 439, 373, 1550, -1000, 105, 744, 734, -1000, 19082,
	-1000, 1548, 1503, 62, 1535, -1000, 1534, 1530, 19082, 1202,
	242, 1030, -1000, 1342, -1000, 1524, 5990, 1926, -1000, -1000,
	-1000, 31, -1000, -1000, -1000, 1332, -1000, -1000, 1163, 1159,
	1293, -1000, 1280, 1151, 1271, 1262, -1000, 1156, -112, -100,
	-1000, 1522, -1000, -1000, 1917, 217, -1000, 1916, 20790, -1000,
	871, 857, 639, 639, 855, 1012, 1005, 995, 639, 639,
	852, 985, 19904, 846, 840, 838, 905, 983, 541, 900,
	849, 811, 19082, 1520, 945, -1000, -1000, 1942, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 837,
	1517, -1000, -1000, 1507, 13687, 125, 125, 13687, 13687, 13687,
	1505, 332, -1000, -63, -1000, -1000, 13687, 1794, 1090, 1890,
	-1000, -1000, -1000, -1000, -1000, 975, -1000, -1000, -1000, 834,
	-1000, 796, -1000, 259, -99, -100, -1000, 1915, -92, 1914,
	1913, 19082, 786, -1000, 126, -1000, -1000, -1000, 11891, 11891,
	-1000, -1000, -1000, -1000, 968, 965, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 156, 19082,
	1258, -1000, 641, 1143, 5990, -244, 13687, 1255, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1244, 1239, 1237, 13687, -1000,
	-1000, -1000, 99, -1000, 124, -1000, -1000, 1794, -1000, -1000,
	1139, 1134, 1499, 790, -84, 1912, -1000, 786, 1910, 786,
	786, 1229, -1000, -1000, 80, 153, 151, -1000, 254, -1000,
	-1000, -1000, -1000, -1000, -1000, 162, 1216, -1000, 945, 944,
	-1000, 1050, 1731, -1000, -1, 1194, -1000, -1000, -1000, -1000,
	1189, -1000, -1000, 639, 917, 52, -1000, -1000, -1000, -1000,
	-1000, 1845, 11442, -115, -1000, 895, -1000, 786, -1000, -1000,
	-1000, 19082, 71, 788, 7370, 1497, 7370, 1495, 95, 1494,
	-1000, -1000, -1000, -1000, -1000, 332, -1000, -1000, 1730, 1609,
	1937, -1000, -1000, -1000, -1000, 124, 124, 124, 124, 0,
	783, -1000, 1004, -1000, 19082, -1000, 1175, -1000, -1000, -1000,
	417, -1000, -1000, -1000, -1000, 1488, 1893, -1000, 1606, 19082,
	1390, 19082, 1467, 631, 7370, -1000, -1000, 1944, -1000, 1938,
	419, 419, -1000, -1000, -1000, 1177, -1000, 614, -1000, 13238,
	19082, -1000, 221, 90, -1000, 1168, -1000, 1162, 19082, 782,
	721, -1000, -1000, -1000, 830, 111, -1000, 19082, 4144, -1000,
	414, 1155, -1000, 1007, 64, -1000, -1000, 1150, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 808, 19082, -1000, 221, 1689,
	-1000, 777, -1000, -1000, -1000, 20714, 205, -1000, -1000, 20714,
	69, -1000, 203, -1000, -1000, 1146, -1000, 979, 384, -1000,
	69, 20790, -1000, 5990, -1000, 20790, 1142, -1000,
}

var yyPgo = [...]int{
	0, 125, 2299, 175, 130, 126, 174, 2298, 1865, 1862,
	2294, 2293, 2291, 2290, 2287, 2286, 2284, 2281, 2280, 2278,
	2277, 2275, 2274, 2273, 2272, 2269, 2268, 173, 2267, 2266,
	2265, 2264, 2263, 2258, 2257, 2256, 2255, 2254, 2253, 2251,
	2245, 123, 2244, 1855, 2243, 2241, 2240, 2239, 2236, 161,
	2235, 2233, 2232, 2231, 2230, 2229, 2228, 2227, 2226, 2225,
	2224, 2223, 2222, 170, 50, 103, 183, 47, 191, 185,
	143, 75, 117, 162, 118, 2221, 2220, 111, 25, 128,
	2219, 70, 45, 37, 182, 107, 56, 72, 96, 2204,
	2203, 89, 2197, 2196, 2195, 2194, 62, 2192, 76, 31,
	90, 27, 2190, 2189, 2188, 79, 2187, 2186, 2184, 2183,
	86, 2182, 68, 53, 2181, 2178, 2177, 2176, 2175, 43,
	2174, 49, 2173, 2172, 2167, 2166, 2165, 2164, 2162, 14,
	17, 19, 2161, 2160, 16, 2, 2159, 150, 60, 85,
	104, 2158, 345, 2157, 2156, 2154, 112, 2153, 138, 2152,
	2151, 2150, 2149, 2148, 9, 2146, 55, 2145, 2144, 2142,
	54, 2140, 2139, 2138, 99, 41, 108, 97, 2136, 2135,
	74, 159, 15, 35, 0, 147, 39, 2134, 2133, 2132,
	181, 165, 157, 2131, 113, 194, 134, 2130, 2128, 40,
	95, 77, 2127, 2126, 110, 67, 42, 2125, 87, 2124,
	32, 92, 2121, 109, 2120, 137, 1, 102, 2119, 154,
	2118, 2116, 2113, 135, 2112, 2111, 63, 122, 2109, 2106,
	2105, 26, 2104, 30, 21, 2103, 98, 172, 2100, 133,
	121, 136, 88, 160, 73, 114, 811, 115, 82, 18,
	2099, 166, 2098, 240, 155, 144, 2097, 2096, 168, 312,
	148, 2094, 129, 10, 2092, 2091, 11, 2090, 23, 2089,
	2088, 2086, 2085, 6, 2084, 2083, 2082, 4, 3, 2081,
	5, 106, 44, 66, 2078, 65, 69, 2076, 2074, 2071,
	2070, 2069, 247, 2068, 2067, 2063, 2062, 2060, 2046, 2045,
	81, 2043, 2041, 2037, 2034, 64, 2032, 2031, 2030, 2029,
	2012, 29, 2007, 2004, 20, 2002, 24, 2001, 1999, 1998,
	12, 145, 1997, 1996, 13, 1994, 1993, 7, 8, 1992,
	1990, 58, 46, 38, 84, 83, 1988, 22, 1987, 100,
	1986, 1985, 141, 1984, 105, 1983, 119, 167, 202, 1982,
	153, 1981, 1979, 1978, 1977, 1975, 1974, 1973, 786, 1972,
	1970, 163, 57, 158, 1968, 91, 151, 1967, 116, 94,
	61, 1965, 1964, 1962, 1961, 1960, 156, 1959,
}

//line mysql_sql.y:7119
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 363, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 57, 320, 320, 319, 319, 318,
	318, 317, 317, 317, 316, 316, 316, 315, 315, 314,
	314, 313, 313, 311, 311, 312, 310, 309, 309, 307,
	307, 305, 305, 306, 306, 300, 300, 303, 303, 301,
	301, 301, 301, 304, 299, 299, 299, 298, 298, 56,
	56, 56, 238, 238, 55, 55, 252, 252, 252, 252,
	252, 250, 250, 250, 250, 250, 250, 249, 249, 248,
	248, 253, 253, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 50, 50, 50, 50,
	53, 54, 246, 246, 246, 246, 246, 247, 247, 247,
	51, 52, 52, 237, 237, 242, 242, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 245,
	245, 245, 244, 244, 243, 243, 44, 44, 44, 47,
	46, 236, 236, 236, 236, 236, 236, 236, 236, 45,
	45, 45, 45, 45, 45, 42, 42, 42, 42, 42,
	41, 41, 43, 43, 235, 235, 234, 60, 60, 60,
	60, 60, 60, 60, 59, 59, 62, 62, 61, 49,
	49, 49, 49, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 343, 343, 343, 345, 345, 178, 179, 364,
	177, 177, 177, 339, 339, 340, 341, 342, 342, 342,
	58, 7, 7, 39, 40, 362, 362, 282, 282, 191,
	191, 192, 192, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 285,
	286, 187, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 31, 31, 38, 365, 365, 365, 36,
	37, 281, 281, 281, 35, 34, 33, 32, 32, 30,
	30, 29, 29, 184, 184, 186, 186, 182, 366, 366,
	258, 258, 185, 185, 28, 28, 183, 183, 161, 181,
	181, 181, 6, 10, 10, 10, 10, 10, 10, 10,
	10, 16, 18, 233, 233, 231, 17, 13, 12, 15,
	11, 14, 5, 5, 5, 5, 8, 8, 9, 72,
	72, 100, 100, 352, 352, 348, 348, 349, 349, 349,
	350, 350, 351, 351, 4, 289, 289, 289, 289, 289,
	289, 328, 328, 328, 329, 90, 90, 85, 85, 290,
	290, 207, 330, 330, 297, 297, 296, 296, 295, 295,
	88, 88, 89, 89, 76, 76, 63, 63, 302, 302,
	302, 302, 308, 308, 279, 279, 126, 126, 157, 157,
	158, 158, 64, 64, 65, 65, 65, 65, 65, 65,
	336, 336, 338, 338, 337, 87, 87, 83, 83, 84,
	84, 84, 82, 82, 81, 80, 80, 79, 78, 78,
	78, 67, 67, 66, 66, 66, 66, 66, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	68, 68, 344, 344, 344, 283, 283, 283, 288, 288,
	139, 139, 140, 140, 138, 138, 69, 69, 70, 70,
	70, 70, 137, 137, 136, 71, 71, 77, 73, 73,
	75, 75, 75, 75, 147, 147, 146, 146, 146, 146,
	93, 93, 145, 144, 144, 144, 92, 92, 91, 91,
	86, 86, 74, 74, 143, 367, 367, 141, 170, 170,
	170, 176, 176, 169, 169, 169, 169, 169, 180, 175,
	175, 171, 171, 172, 172, 172, 3, 3, 3, 3,
	22, 22, 22, 22, 26, 26, 346, 346, 19, 353,
	356, 354, 357, 357, 357, 358, 358, 358, 359, 359,
	20, 355, 360, 360, 360, 232, 232, 230, 229, 229,
	229, 361, 361, 361, 361, 173, 173, 21, 226, 226,
	227, 228, 228, 220, 220, 220, 220, 25, 224, 224,
	225, 225, 225, 225, 225, 221, 221, 223, 223, 219,
	219, 219, 219, 219, 24, 218, 218, 216, 216, 214,
	214, 215, 215, 213, 213, 213, 217, 217, 23, 284,
	284, 254, 254, 257, 257, 264, 264, 265, 265, 263,
	263, 270, 270, 269, 269, 268, 268, 267, 267, 266,
	266, 266, 261, 261, 260, 260, 255, 255, 255, 255,
	255, 256, 256, 259, 259, 262, 262, 117, 117, 118,
	118, 118, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 326, 326, 327, 120, 120, 120, 124, 124, 124,
	124, 124, 124, 119, 119, 121, 121, 101, 101, 99,
	99, 94, 94, 95, 95, 96, 96, 97, 97, 98,
	98, 98, 98, 98, 98, 240, 240, 324, 324, 325,
	325, 321, 321, 321, 323, 323, 323, 323, 323, 322,
	322, 102, 155, 155, 155, 174, 174, 174, 154, 154,
	154, 116, 116, 115, 115, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 239, 239,
	188, 188, 189, 189, 134, 132, 132, 133, 133, 133,
	133, 130, 131, 129, 129, 129, 129, 129, 128, 128,
	127, 127, 127, 222, 222, 125, 125, 123, 123, 123,
	122, 122, 122, 271, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 199, 199,
	204, 204, 335, 335, 334, 103, 103, 103, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 112, 112, 112,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 294, 294, 294, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	153, 347, 347, 347, 331, 331, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 151, 151, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	208, 208, 209, 209, 291, 291, 291, 291, 291, 291,
	292, 292, 293, 293, 293, 293, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 197, 148, 148, 148, 210, 205,
	205, 206, 206, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 202, 202, 202, 202, 202, 194,
	194, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	201, 201, 203, 203, 212, 212, 212, 211, 211, 211,
	211, 211, 211, 211, 114, 114, 114, 114, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 105, 105,
	105, 105, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 110, 110,
	110, 110, 108, 108, 108, 108, 108, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 107, 156, 156, 272, 272, 275, 275, 273,
	273, 274, 276, 276, 276, 277, 277, 277, 278, 278,
	278, 280, 280, 160, 160, 160, 166, 166, 159, 159,
	167, 167, 168, 168, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 14, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 2, 1, 2, 3,
	4, 3, 3, 1, 0, 1, 1, 0, 1, 8,
	5, 7, 0, 3, 8, 5, 1, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 1,
	4, 1, 3, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 6, 3, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 0, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 2, 1, 1, 1, 4, 2, 2, 3,
	3, 4, 5, 3, 4, 4, 2, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 5, 1, 1, 1, 5,
	5, 0, 1, 1, 2, 2, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 5, 1, 3, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 4, 3, 0, 1, 2, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 11, 0, 1, 7, 1,
	4, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	9, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 0, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 0,
	1, 0, 6, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	5, 4, 4, 5, 5, 5, 5, 4, 5, 5,
	5, 5, 5, 5, 5, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 5, 4, 6, 6, 7,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 4, 2, 3,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 3,
	4, 3, 4, 1, 3, 4, 3, 4, 1, 1,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -363, -2, -1, -3, -4, -5, -6, -48, -59,
	-61, -62, -27, -7, -58, -41, -42, -44, -50, -55,
	-56, -57, -64, -22, -21, -20, -19, 12, -8, -9,
	-336, -10, -177, -178, -179, -364, -28, -29, -30, -32,
	-33, -34, -35, -36, -37, -38, -31, -40, -39, 195,
	-43, 53, -45, -46, -47, -51, -52, -53, -54, 305,
	311, 360, -65, -67, -23, -24, -25, -26, 191, 14,
	432, -11, -14, -12, -15, -13, -17, -18, -16, 213,
	212, 32, 272, 273, 309, 211, 192, 13, 125, 126,
	128, 129, 25, -66, 58, 193, -68, 10, 478, -76,
	33, -99, -174, 62, -162, -165, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 429, 230, 254, 257, 264, 125, 144, 138,
	166, 158, 133, 234, 235, 69, 128, 389, 79, 374,
	359, 131, 249, 251, 253, 256, 236, 154, 149, 248,
	232, 147, 237, 34, 238, 171, 239, 240, 434, 370,
	287, 376, 261, 357, 148, 371, 252, 373, 172, 176,
	381, 311, 142, 143, 378, 383, 170, 210, 37, 431,
	222, 384, 174, 169, 165, 392, 265, 263, 168, 141,
	164, 233, 42, 178, 177, 179, 353, 354, 355, 356,
	241, 242, 299, 380, 161, 150, 291, 134, 22, 387,
	217, 375, 312, 243, 258, 266, 173, 175, 224, 229,
	433, 228, 262, 385, 146, 221, 250, 216, 388, 135,
	305, 314, 244, 129, 255, 382, 391, 41, 327, 140,
	132, 207, 126, 226, 231, 245, 246, 247, 268, 267,
	259, 162, 223, 167, 139, 163, 127, 225, 390, 328,
	477, 289, 342, 160, 157, 227, 200, 386, 377, 130,
	346, 329, 155, 269, 474, 475, 476, 300, 286, 270,
	271, 153, 214, 369, -43, -9, -8, -66, -67, -181,
	23, 357, -49, 358, 195, 58, -174, -5, -4, -41,
	-64, -180, -174, 272, -180, 198, -174, 228, 341, -282,
	203, -249, -226, 229, -248, -227, -251, -228, 26, 192,
	191, 225, 14, 193, 309, 199, 12, 10, 310, 211,
	13, 311, 313, 314, 317, 318, 319, 36, 322, 323,
	62, 65, 236, -81, -82, -142, 19, 6, 7, 8,
	9, -284, 288, 342, 228, -220, -218, 320, 208, 207,
	80, 394, 197, -348, -349, 188, 189, 190, -338, 426,
	-337, -174, 427, -160, -365, -281, 377, 376, -185, 375,
	368, 379, 370, 191, 79, 159, 156, 199, 378, 37,
	381, 382, 371, 288, 342, -348, 130, 127, -236, 85,
	135, 134, -236, 228, 35, -242, 352, -241, -243, 381,
	382, 392, 63, 64, 380, -160, -174, 79, -82, -142,
	-81, -65, -67, -336, 288, 342, 228, 199, 198, 200,
	394, 272, -283, -344, 26, -288, 185, 186, 187, 27,
	28, -1, -88, 220, -99, 124, -82, -81, -82, -154,
	-174, 359, 94, -49, -49, 358, -339, -340, -341, -343,
	195, 358, 357, 124, 15, -180, 56, -99, -227, 228,
	-249, -226, 30, 55, 59, 201, 59, 55, 58, 307,
	321, 342, 308, 320, 200, 228, 321, 228, 368, 200,
	312, 315, 316, 369, -298, 392, -63, 33, -84, 21,
	-68, -67, 20, 26, 27, 26, 27, 26, 27, 26,
	27, -346, 198, 426, -216, 203, -216, -216, 199, -216,
	-350, 137, 59, -338, -87, 58, -184, 102, -184, -366,
	15, 104, 227, 226, 372, 369, -258, 373, 374, -185,
	-184, -184, -185, 198, 394, 25, 25, -282, -282, -351,
	202, 385, 432, 133, 134, 135, -246, 26, 35, 351,
	-226, 228, 59, 94, 23, -244, 94, 105, -243, -243,
	-243, -244, -244, -119, 35, -173, 121, -174, 65, -119,
	35, 124, -83, -84, -68, -67, 60, 60, -282, -282,
	-282, -282, -282, -282, -282, -180, -69, -70, 112, -200,
	-174, 86, 219, -202, 62, -195, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 79, 357, 299, 342, 155, 300, 153, 214, -196,
	-198, -317, -311, -193, 58, 110, 111, 118, 87, -197,
	-271, 30, 89, 402, -149, -150, -151, -152, -153, -312,
	-310, 65, 70, 73, 76, 77, 75, 74, 151, 72,
	66, 123, -67, -331, -163, -287, -293, 197, -291, 156,
	152, 12, 116, 352, 121, -294, 471, 64, 63, 293,
	294, 295, 394, 290, 296, 203, 47, 297, 298, 301,
	401, 302, 48, 303, 292, 218, 304, 405, 404, 406,
	398, 395, 393, 396, 397, 399, 400, -69, -289, 38,
	-64, 58, 25, 58, -174, -83, -63, -84, 124, 70,
	65, -49, 60, 59, -342, 76, 77, -345, 170, 162,
	-174, -60, 65, -3, -4, -5, -6, -27, -41, -64,
	-313, -311, 58, 26, 351, 55, 15, -250, 198, 394,
	306, 224, 200, -248, -233, -231, -229, -173, -227, -230,
	-229, -253, -154, 369, 361, 473, -63, -200, -174, -80,
	-79, -200, 200, -216, -353, 62, 86, -232, -230, -226,
	-172, 62, 63, 64, -174, -351, -337, 29, -86, -174,
	-138, 16, -198, -138, -99, -184, -184, -186, -366, -182,
	-366, 369, -138, -138, -258, -183, -174, -216, -353, -232,
	-73, -71, -74, -75, -77, -141, -143, -99, 58, 386,
	387, 131, 134, 133, 7, -247, 351, 26, -226, -241,
	-237, 65, 352, -230, -245, 55, 121, -295, -200, 35,
	-244, -244, -244, -245, -245, 120, -174, -63, -353, -233,
	-226, -174, -101, -99, -101, -175, -172, -165, -137, 59,
	-136, 15, -169, 85, 82, 83, 84, -174, 29, 65,
	124, -200, 101, -211, 94, 95, 96, 97, 98, 99,
	100, 58, 58, 58, 58, 58, 58, 58, 58, -209,
	58, 58, 58, 58, 58, 58, 58, -209, 58, 58,
	58, 58, 58, 65, 65, 107, 106, 117, 110, 111,
	112, 113, 114, 115, 116, 108, 109, 104, 86, 102,
	103, 88, -67, -200, -206, -198, -198, -198, -198, -271,
	-204, -200, 58, -200, 58, 58, 58, -292, 58, 58,
	-208, -209, 58, 65, 58, 58, 58, -198, 58, 58,
	-137, -290, -207, -330, 472, -90, 60, -85, -174, -328,
	-329, -85, -89, -174, -63, -63, -167, -168, -159, -164,
	-171, -172, -165, 288, 196, 26, 85, 29, 31, 293,
	325, 88, 121, 20, 89, 156, 120, 295, 402, 294,
	191, 51, 404, 406, 405, 395, 393, 344, 348, 350,
	347, 394, 368, 35, 14, 32, 212, 27, 28, 114,
	193, 92, 93, 215, 30, 213, 77, 23, 54, 15,
	17, 18, 296, 343, 203, 202, 104, 361, 199, 49,
	12, 123, 33, 101, 345, 45, 81, 47, 102, 21,
	396, 397, 36, 360, 428, 219, 116, 297, 298, 52,
	86, 351, 75, 55, 82, 19, 50, 103, 194, 401,
	48, 349, 301, 303, 426, 302, 197, 379, 10, 292,
	403, 25, 211, 46, 198, 91, 201, 76, 218, 152,
	6, 80, 13, 53, 56, 398, 399, 400, 38, 90,
	16, 304, 432, 352, 362, 363, 364, 365, 366, 367,
	180, 181, 182, 183, 184, 260, 206, 204, 208, 209,
	472, 473, 185, 186, 283, 285, 159, 188, 189, 190,
	220, 137, 7, 330, 331, 332, 333, 335, 336, 337,
	338, 339, 340, 341, 23, -49, -340, 124, 59, -86,
	-250, -232, -252, 112, 62, -238, 59, 432, 479, 63,
	201, -361, 343, 60, 59, 65, 65, 59, 22, 124,
	59, -78, 31, 32, -99, 203, -99, -356, 330, 30,
	35, 59, -219, 56, -214, -215, -213, -217, 35, 15,
	-72, -100, -174, 58, 60, 59, -200, -138, -138, -138,
	-184, -175, -186, -181, -186, -182, 124, -161, -174, -356,
	-362, 35, 25, -144, -145, -146, -147, 45, 49, 51,
	46, 47, 48, 52, 25, 59, -367, 29, -170, -176,
	29, -171, 65, -172, -165, -65, -67, 132, 135, 135,
	134, -226, 201, 58, 94, -245, -245, -245, 35, -173,
	55, 59, -138, -70, -71, -73, -200, -200, -200, -200,
	-174, 65, -174, 112, -194, 86, 286, 75, 76, 77,
	-195, -212, 26, 270, 271, -205, -206, -200, -148, 27,
	26, -148, -148, -200, -148, 112, -206, -206, 60, 70,
	-332, -333, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 297, 292, 298, 296, 290, 304, 299,
	300, 155, 424, 425, 418, 419, 420, 421, 422, 423,
	-148, -148, -148, -148, -148, -200, -347, 284, 283, 285,
	-148, -148, -148, -148, -196, -196, -196, -196, -196, -196,
	-196, -196, -196, -196, -196, -196, -203, -210, -271, 58,
	104, 102, 103, 88, -198, -196, -196, 60, 59, -335,
	-334, 90, -200, -332, -205, -200, -205, -205, 60, 60,
	-206, -205, -196, -205, -148, 65, -138, 59, 58, 60,
	59, 38, 124, 59, 94, 60, 59, 124, 359, -174,
	-311, 60, -252, 201, 124, 124, -231, 311, -173, -232,
	20, 432, -154, -299, 202, 401, -302, 373, -200, -200,
	-174, -79, -87, 86, 58, -358, 375, 332, -166, 94,
	228, -230, 55, 278, 279, 280, 281, -213, -160, 120,
	239, -99, -72, -174, 15, 59, -352, 124, -1, -174,
	-138, -184, -184, -186, -174, -358, -191, -192, -190, 289,
	36, -285, 352, 338, 339, 228, -235, -234, -154, -74,
	-74, -74, -74, 45, 45, 45, 50, 45, 50, 45,
	-146, -235, -77, -174, -176, 60, 135, -232, -187, 65,
	-237, -99, -99, -140, 17, 124, -194, 286, 75, -271,
	60, 59, -200, -200, -200, 29, -206, 60, 60, 60,
	60, 15, -200, -200, -200, -200, -200, 60, 15, 15,
	-200, -200, -200, -200, -200, -206, -203, -198, -196, -196,
	-201, 215, 85, -200, -199, -334, 92, -200, 59, 56,
	60, 15, 60, 60, 60, 56, 60, 59, 60, -200,
	59, -140, -207, -297, -296, -295, 38, -64, -85, -290,
	-174, -329, -295, -174, -167, -164, -172, -165, 70, 15,
	-226, 112, 112, 62, 312, -238, 65, 331, 65, 33,
	-308, 367, 362, 364, 124, 29, 30, -94, -95, -96,
	-102, -97, -154, -189, -98, 206, 204, 208, -325, 80,
	209, 260, 81, 199, -359, 69, -354, 65, -355, 62,
	-99, -166, -166, -166, -88, 56, 124, -71, -100, -174,
	112, 60, -138, -138, -184, -359, -360, 69, 333, -190,
	123, 291, 35, 334, 335, 349, 287, 70, 70, 340,
	-355, -138, 59, 94, -92, -91, 55, 56, -93, 55,
	-91, 45, 45, -138, -87, 60, -139, 18, 20, -174,
	112, -200, 60, 60, 60, -103, -105, 327, 328, -109,
	-106, -108, -107, -111, -110, 156, 157, 121, 160, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 25,
	214, 152, 153, 154, 155, 172, 138, 158, 430, 180,
	139, 181, 140, 182, 141, 183, 142, 143, 184, 144,
	147, 148, 149, 146, 60, -200, 60, 60, 60, 60,
	60, -200, -200, 15, 60, 60, 60, 60, 60, -201,
	85, -198, -195, 60, 93, -200, 91, -104, -110, 121,
	156, 214, 155, 154, 152, 327, 328, -119, -200, -119,
	-196, 60, 65, -139, 60, 59, -290, -232, -238, 352,
	198, -279, 474, -306, 362, 20, 20, -64, -99, 60,
	59, -105, -98, -174, 81, -324, -325, -216, -324, 81,
	58, 65, -357, 343, -191, 58, -119, -121, -173, 121,
	65, -170, -71, -174, -138, -352, 124, -138, 65, 65,
	70, 35, 70, 123, 336, -286, -82, -234, -295, -200,
	58, -200, -200, -206, 60, -112, 143, 142, -112, -278,
	328, 327, -272, -274, 58, -273, 58, -273, -272, -272,
	58, 58, -272, -275, 58, -275, -272, -276, 58, -276,
	-277, 58, -276, 60, 60, 60, -200, -195, -200, 60,
	-272, -273, -272, -275, -272, -112, -112, 60, 60, 23,
	60, 60, 60, -295, -99, -126, 475, 65, 20, 65,
	-304, 65, -87, -117, -118, -135, 325, 230, -217, 234,
	69, 235, 359, 236, 199, 238, 239, 240, 210, 241,
	242, 243, 352, 244, 245, 246, 247, 308, 6, 274,
	-96, -116, -115, -113, 75, 86, 35, 325, -114, 69,
	120, 253, 231, 254, -134, -188, 204, 80, 81, 313,
	-189, -321, -322, -174, -322, -174, -321, -321, -216, -200,
	20, 432, -360, -221, -223, -154, 58, -138, -138, 290,
	35, 70, 35, 337, -83, -86, -280, 329, 70, 70,
	-156, 65, -156, 70, 70, 70, 60, -200, -300, -258,
	-157, 476, 70, 65, 364, 29, -254, 220, 59, -135,
	-166, -166, -160, 120, -166, -166, -166, -166, 237, 237,
	-166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
	-166, -166, -166, -166, 58, -113, 75, -196, 65, -121,
	-122, 35, 252, 248, -123, 35, 232, 233, -125, 58,
	260, 81, 81, -99, 58, 56, 269, 58, 58, 58,
	-322, 60, 65, 331, 65, 60, 59, -272, -200, -82,
	290, 60, 60, 60, 60, 59, 60, 60, 60, 59,
	60, 59, 60, -307, 367, -303, -301, 362, 363, 364,
	365, 58, 20, -64, 20, -135, 70, 70, -166, -166,
	70, 65, 65, 65, -166, -166, 70, 65, -176, 70,
	70, 70, 70, 35, 65, -124, 35, 248, 252, 249,
	250, 251, 70, 35, 70, 35, 70, 35, -174, 58,
	-326, -327, 65, 70, 58, -222, 58, -221, -323, 278,
	279, 280, 282, 281, -323, -221, -221, -221, 58, -240,
	-239, 261, 86, 352, -224, -223, -78, 60, -83, 65,
	70, 70, -309, 202, -305, 366, -301, 20, 364, 20,
	20, -158, -174, -304, -255, 262, 263, -256, -262, 265,
	-119, -119, 65, 65, -120, 231, -101, 60, 59, 94,
	60, -200, -128, -127, 428, -221, 60, 60, 60, 60,
	-221, 261, -225, 210, 69, 432, 276, 277, -78, 60,
	60, -316, 58, 70, -306, 20, -304, 20, -304, -304,
	60, 59, -260, 266, 58, -258, 58, -258, 81, 279,
	232, 233, 60, -327, 65, 60, -132, -133, -130, -131,
	55, 371, 258, 259, 60, -224, -224, -224, -224, 60,
	-166, 65, 275, -320, 25, 60, -315, -314, -155, -310,
	-174, 367, 65, -304, -174, -257, 267, 70, -196, 58,
	-196, 58, -259, 264, 58, -239, -131, 55, -130, 55,
	14, 13, -134, 70, -172, -319, -318, -317, 60, 59,
	124, -264, 58, 20, 60, -253, 60, -253, 58, 94,
	-196, -129, 255, 256, 25, 134, -129, 59, 94, -314,
	-174, -265, -263, 220, -256, 60, 60, -253, 70, 60,
	75, 35, 257, -318, 35, -200, 124, 60, 59, 62,
	-261, 268, 60, -174, -263, -266, 38, 70, -270, -267,
	58, -135, 222, -270, -135, -269, -268, 267, 223, 60,
	59, 62, 219, 58, -268, -267, -206, 60,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 536, 537, 538, 539, 0, 342, 343,
	0, 322, 0, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 241, 242, 0,
	190, 186, 166, 167, 168, 126, 127, 128, 129, 247,
	0, 0, 412, -2, 540, 541, 542, 543, -2, 355,
	0, 323, 324, 325, 326, 327, 328, 329, 330, 230,
	231, 232, 227, 228, 229, -2, 0, 355, 179, 0,
	171, 171, 0, 432, 0, 0, 443, 465, 23, 390,
	0, 395, 709, 745, 746, 747, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 191, 344, 345, 432, 432, 213,
	0, 1326, 217, 0, 0, 0, 319, 209, 210, 211,
	212, 0, 528, 0, 206, 0, 185, 1384, 0, 0,
	0, 0, 0, 0, 87, 578, 89, 580, 93, 95,
	96, 99, 100, 101, 102, 103, 104, 105, 106, 0,
	108, 0, 110, 0, 113, 114, 115, 0, 124, 125,
	581, 582, 67, -2, 0, 0, 0, 448, 451, 454,
	457, 546, 607, 607, 607, 0, 607, 620, 584, 585,
	586, 605, 606, 360, 356, 357, 358, 359, 420, 0,
	422, 425, 303, 303, 0, 0, 294, 295, 0, 312,
	303, 303, 312, 0, 1113, 0, 0, 286, 287, 288,
	292, 293, 313, 247, 247, 362, 180, 181, 170, 0,
	175, 0, 169, 1384, 0, 140, 0, 145, 0, 1333,
	1398, 1348, 0, 0, 1366, 0, 164, -2, 427, 0,
	433, 0, 432, 0, 247, 247, 247, 247, 247, 247,
	247, 0, 0, 0, 466, 467, 462, 463, 464, 468,
	469, 3, 0, 0, 394, 0, 427, -2, 0, 214,
	748, 0, 0, 218, 219, 0, 0, 233, 0, 236,
	222, 223, 224, 0, 0, 208, 0, 0, 187, 0,
	0, 0, 248, 81, 0, 0, 0, 0, 0, 94,
	123, 97, 98, 0, 118, 120, 122, 121, 107, 119,
	109, 111, 112, 117, 0, 68, 415, 0, 396, 0,
	445, 447, 0, 449, 450, 452, 453, 455, 456, 458,
	459, 0, 607, 547, 0, 0, 0, 0, 0, 0,
	362, 361, 0, 421, 0, 0, 474, 0, 474, 0,
	308, 309, 303, 303, 296, 305, 0, 310, 311, 0,
	474, 474, 0, 0, 607, 1114, 1115, 0, 0, 0,
	363, 0, 0, 173, 0, 178, 130, 135, 133, 134,
	136, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 0, 0, 153, 156, 703, 704, 575, 576, 157,
	158, 0, 396, 428, 444, 446, 441, 442, 0, 0,
	0, 0, 0, 0, 0, 341, 482, 476, 478, 523,
	31, 0, 998, 1003, 745, 1008, -2, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, -2, 1466, -2, -2, 1469, 1470,
	1471, 1473, -2, -2, -2, -2, -2, -2, 1480, -2,
	-2, -2, 1484, 1485, -2, -2, 1488, 1489, 1490, 1491,
	1492, -2, -2, -2, -2, -2, -2, -2, -2, 1019,
	816, 817, 818, 819, 0, 0, 0, 0, 0, 826,
	827, 0, 840, 0, 833, 834, 835, 836, 837, 43,
	44, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 965, 803, 0, 0, 0, 950, 0, 940, 0,
	978, 0, 0, 0, 0, 0, 0, 45, 46, 956,
	958, 959, 961, 962, 963, 964, 967, 968, 969, 972,
	973, 974, 975, 976, 977, 980, 982, 952, 953, 954,
	955, 944, 945, 946, 947, 948, 949, 482, 364, 382,
	366, 0, 371, 0, 710, 396, 418, 396, 0, 215,
	0, 220, 0, 0, 235, 237, 238, 239, 225, 226,
	320, 204, 205, 197, 198, 199, 200, 201, 202, 203,
	207, 41, 0, 188, 189, 81, 0, 0, 82, 83,
	84, 85, 86, 88, 72, 333, 335, 568, 579, 0,
	571, 0, 91, 116, 0, 0, 416, 429, 31, 434,
	435, 438, 0, 0, 0, 549, 0, 0, 565, 577,
	599, 533, 534, 535, -2, 0, 423, 0, 0, 510,
	283, 0, 304, 284, 474, 474, 474, 303, 0, 305,
	0, 305, 299, 300, 0, 314, 316, 0, 0, 245,
	487, 0, 488, 489, 485, 512, 515, 518, 0, 182,
	183, 0, 0, 177, 0, 0, 137, 138, 139, 146,
	141, 143, 0, 0, 147, 159, 160, 161, 388, 389,
	0, 0, 0, 151, 152, 0, 165, 414, 331, 332,
	336, 0, 338, 707, 339, 340, 529, 530, 474, 0,
	483, 0, 479, 0, 0, 0, 0, 524, 0, 526,
	0, 997, 0, 0, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 989, 985, 985, 985, 0, 985, 0, 0, 925,
	0, 0, 985, 985, 985, 985, 985, 926, 0, 985,
	985, 985, 985, 939, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 991, 0, 822, 823, 824, 825, 828,
	0, 841, 0, 0, 989, 989, 989, 928, 0, 0,
	930, 941, 0, 934, 989, 0, 989, 938, 985, 0,
	474, 365, 379, 0, 383, 0, 0, 375, 377, 370,
	372, 0, 0, 392, 417, 419, 749, 0, 1120, -2,
	1122, -2, -2, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 0, 221, 234, 0, 0, 0,
	0, 75, 0, 76, 80, 70, 0, 0, 0, 570,
	0, 567, 0, 90, 0, 64, 398, 0, 0, 0,
	0, 437, 439, 440, 425, 0, 0, 555, 1116, 608,
	0, 0, 0, 0, 604, -2, 611, 0, 617, 0,
	0, 349, 353, 23, 426, 0, 475, 285, 289, 290,
	474, 306, 303, 307, 303, 305, 0, 315, 318, 555,
	249, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 516, 517, 519,
	0, 521, 522, 531, 532, 0, 432, 184, 172, 174,
	0, 132, 0, 0, 0, 148, 149, 150, 154, 155,
	0, 0, 472, 477, 484, 487, 993, 994, 995, 996,
	525, 527, 32, 480, 999, 0, 1001, 1004, 1009, 1010,
	1006, 0, 1024, -2, -2, 0, 990, 991, 0, 986,
	987, 0, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	0, 0, 0, 0, 0, 0, 0, 891, 892, 893,
	0, 0, 0, 0, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 1011, 1022, 1023, 0,
	0, 0, 0, 0, 1020, 1015, 0, 820, 0, 838,
	842, 0, 0, 984, 0, 991, 0, 0, 951, 929,
	0, 0, 0, 0, 0, 0, 472, 382, 384, 0,
	0, 382, 0, 0, 0, 391, 0, 0, 0, 321,
	42, 240, 0, 0, 0, 0, 334, 0, 569, 72,
	0, 0, 92, 0, 65, 66, 402, 0, 430, 431,
	32, 436, 0, 0, 711, 558, 556, 557, 0, 1117,
	0, 566, 0, 600, 601, 602, 603, 612, 1116, 1116,
	1116, 390, 0, -2, 0, 0, 351, 0, 0, 511,
	297, 474, 474, 303, 317, 558, 562, 250, 251, 253,
	254, 255, 0, 0, 0, 0, 474, 194, 0, 506,
	500, 0, 493, 504, 505, 496, 0, 498, 0, 494,
	495, 474, 486, 425, 520, 514, 176, 131, 0, 271,
	142, 337, 708, 470, 0, 0, 1000, 1002, 1005, 1007,
	878, 0, 0, 0, 0, 0, 0, 867, 861, 862,
	943, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 0, 0, 1012, 1020, 1016, 0,
	1013, 0, 0, 992, 0, 843, 0, 0, 0, 0,
	879, 0, 883, 927, 931, 0, 935, 0, 937, 0,
	0, 470, 380, 0, 385, 386, 382, 369, 376, 368,
	378, 373, 374, 393, 750, 1121, 1118, 1119, 216, 0,
	72, 77, 78, 79, 73, 71, 572, 0, 574, 0,
	404, 53, 0, 0, 0, 0, 0, 0, 712, 713,
	715, 716, 0, 0, 718, 772, 0, 727, 607, 727,
	0, 0, 729, 730, 548, 0, 0, 551, 249, 561,
	0, 0, 0, 0, 518, 0, 0, 474, 350, 353,
	354, 424, 301, 298, 474, 243, 244, 0, 0, 252,
	0, 257, 258, 0, 0, 0, 270, 266, 267, 268,
	246, 432, 0, 0, 490, 507, 0, 0, 491, 0,
	492, 497, 499, 193, 513, 144, 460, 0, 0, 33,
	481, 992, 863, 864, 865, 0, 845, 857, 857, 1108,
	1049, 1050, 1051, 1095, 1053, 1099, 1099, 1095, 1095, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 0, 0,
	1072, 1095, 1097, 1097, 1095, 1092, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1102, 1102, 1105, 1102, 866, 0, 885, 868, 869, 872,
	870, 0, 0, 0, 884, 873, 874, 860, 988, 1014,
	0, 1021, 1017, 821, 829, 839, 0, 0, 848, 1095,
	1099, 851, 1095, 1097, 1095, 857, 857, 0, 0, 0,
	0, 871, 0, 461, 381, 0, 367, 74, 69, 573,
	0, 406, 0, 403, 0, 0, 0, 544, 425, -2,
	0, -2, 717, 773, 739, 739, 728, 739, 739, 607,
	0, 559, 550, 0, 562, 0, 613, 614, 705, 706,
	615, 474, 474, -2, 347, 352, 0, 302, 563, 564,
	0, 259, 260, 0, 263, 269, 427, 195, 196, 508,
	0, 501, 471, 473, 830, 846, 858, 859, 847, 1111,
	1109, 1110, 1052, 1096, 0, 1077, 0, 1078, 1079, 1080,
	0, 0, 1073, 1074, 0, 1075, 1076, 1068, 0, 1069,
	1070, 0, 1071, 882, 887, 888, 0, 1018, 844, 831,
	849, 850, 852, 853, 854, 855, 856, 832, 880, 0,
	932, 936, 890, 387, 55, 408, 0, 405, 0, 399,
	401, 63, 0, 621, -2, 659, 1116, 1116, 0, 1116,
	1116, 1116, 1116, 0, 0, 1116, 1116, 1116, 1116, 1116,
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 0,
	714, 741, -2, 753, 755, 0, 0, 758, 759, 0,
	0, 0, 0, 795, 765, 0, 0, 1036, 1037, 0,
	771, 0, 731, 740, 0, 740, 0, 0, 739, 0,
	0, 0, 560, 0, 595, 1095, 0, 432, 348, 256,
	261, 0, 264, 265, 192, 0, 1048, 1112, 0, 0,
	0, 1093, 0, 0, 0, 0, 889, 0, 49, 0,
	397, 0, 407, 54, 0, 0, 618, 0, 616, 661,
	0, 0, 1116, 1116, 0, 0, 0, 0, 1116, 1116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 756, 757, 760, 761,
	762, 800, 801, 802, 763, 797, 798, 799, 764, 0,
	0, 1034, 1035, 793, 0, 0, 0, 0, 0, 0,
	0, 725, 552, 0, 554, 588, 0, 438, 0, 427,
	262, 509, 1101, 1100, 1090, 0, 1091, 1098, 1103, 0,
	1106, 0, 881, 47, 51, 56, 57, 0, 0, 0,
	0, 0, 0, 545, 655, 660, 662, 663, 0, 0,
	666, 667, 668, 669, 0, 0, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 697, 698, 699, 700,
	701, 702, 682, 683, 684, 685, 686, 687, 694, 0,
	0, 691, 0, 0, 0, 788, 0, 0, 732, 734,
	735, 736, 737, 738, 733, 0, 0, 0, 0, 724,
	726, 768, 0, 553, 587, 596, 597, 438, 346, 1094,
	0, 0, 34, 0, 53, 0, 58, 0, 0, 0,
	0, 0, 410, 400, 644, 0, 0, 650, 0, 656,
	664, 665, 670, 671, 688, 0, 0, 690, 0, 0,
	796, 0, 775, 789, 0, 0, 588, 588, 588, 588,
	0, 769, 589, 1116, 0, 0, 593, 594, 598, 1104,
	1107, 25, 0, 0, 50, 0, 59, 0, 61, 62,
	409, 0, 623, 0, 0, 0, 0, 0, 653, 0,
	695, 696, 689, 692, 693, 766, 774, 776, 777, 778,
	0, 790, 791, 792, 794, 719, 720, 721, 722, 0,
	0, 591, 0, 24, 0, 35, 0, 37, 39, 40,
	742, 48, 52, 60, 411, 625, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 767, 779, 0, 780, 0,
	0, 0, 723, 590, 592, 26, 27, 0, 36, 0,
	0, 622, 0, 655, 646, 0, 648, 0, 0, 0,
	0, 781, 783, 784, 0, 0, 782, 0, 0, 38,
	743, 0, 627, 0, 642, 647, 649, 0, 654, 652,
	785, 787, 786, 28, 29, 30, 0, 626, 0, 639,
	624, 0, 651, 744, 628, -2, 0, 643, 629, -2,
	0, 637, 0, 630, 638, 0, 633, 0, 0, 632,
	0, -2, 640, 0, 634, -2, 0, 641,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 478,
	95, 94, 96, 3, 479, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 106, 3, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:537
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:543
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:569
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:573
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:579
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:604
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:608
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:614
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:621
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:634
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:651
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:657
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:666
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:687
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:691
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:750
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:754
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:771
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:775
		{
			yyVAL.str = yyDollar[3].str
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:780
		{
			yyVAL.str = "\n"
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:784
		{
			yyVAL.str = yyDollar[3].str
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:793
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:817
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:827
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:833
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:868
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:891
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Users:      yyDollar[8].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1026
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1052
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1056
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1078
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1082
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1234
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1284
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = yyDollar[3].str
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1301
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1305
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1311
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1344
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1367
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1460
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1471
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1581
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1588
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1614
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1709
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1755
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1772
		{
			yyVAL.str = "true"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1773
		{
			yyVAL.str = "false"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpts:           yyDollar[6].userMiscOptionsUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1835
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1841
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1845
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.item = nil
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.item = nil
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2085
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.str = yyDollar[2].str
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2095
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2128
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2132
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2145
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2149
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2186
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2190
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2302
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2306
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2312
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2317
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2324
		{
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2326
		{
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2329
		{
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2338
		{
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2342
		{
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2356
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2369
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2377
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2391
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2414
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2418
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2433
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2437
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2447
		{
			yyVAL.str = yyDollar[3].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2453
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2457
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2463
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2468
		{
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2483
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2499
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2509
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2515
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2519
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2548
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2555
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2573
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2605
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2609
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2622
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2626
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2631
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2635
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2642
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2647
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2676
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2702
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2706
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2712
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2724
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2733
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2756
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2762
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2772
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2812
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3012
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3027
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3031
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3037
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3041
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3049
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3054
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3062
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3076
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3080
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3131
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3135
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3145
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3149
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3153
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3157
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3173
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3179
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3183
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3187
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3197
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3213
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3217
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3223
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3245
		{
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3246
		{
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3262
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3270
		{
			yyVAL.str = yyDollar[2].str
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3279
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3283
		{
			yyVAL.str = yyDollar[1].str
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3287
		{
			yyVAL.str = yyDollar[2].str
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3295
		{
			yyVAL.str = yyDollar[2].str
		}
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3350
		{
		}
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3373
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3389
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3396
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3402
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3410
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3416
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3431
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3437
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               tree.Role{UserName: yyDollar[7].str},
				MiscOpts:           yyDollar[8].userMiscOptionsUnion(),
				CommentOrAttribute: yyDollar[9].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3463
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3469
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3477
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3584
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3588
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3656
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3683
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3691
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3695
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3724
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3768
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3772
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3778
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3788
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3792
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3796
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3800
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3810
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3824
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3837
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3843
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3847
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3866
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3901
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3911
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3915
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3928
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3934
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3938
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3944
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3953
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3967
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3973
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3977
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3990
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3999
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4003
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4012
		{
			expr := tree.NewMaxValueExpr()
			exprs := tree.Exprs{expr}
			yyLOCAL = &tree.ValuesLessThan{ValueList: exprs}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4023
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4027
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4037
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4041
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4060
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4068
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4107
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4111
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4129
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4135
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4139
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4143
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4169
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4173
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4177
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4181
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4185
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4189
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4193
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4197
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4201
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4205
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4209
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4213
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4217
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4241
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4253
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4257
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4268
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4272
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4278
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4283
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4287
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4291
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4335
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4344
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4349
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4355
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4362
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4366
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4372
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4376
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4382
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4392
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4398
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4416
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4439
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4458
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4466
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4472
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4476
		{
			yyVAL.str = yyDollar[1].str
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4486
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4492
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4498
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4512
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4525
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4529
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4548
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4552
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4561
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4567
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4571
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4577
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4581
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4585
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4589
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4593
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4597
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4601
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4605
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4609
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4613
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4617
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4644
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4648
		{
			yyVAL.str = yyDollar[1].str
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4654
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4658
		{
			yyVAL.str = yyDollar[2].str
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4715
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4721
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4731
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4735
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4739
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4743
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4755
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4759
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4763
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4772
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4777
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4781
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4803
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4847
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4851
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4857
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4861
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4869
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4873
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4877
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4881
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4897
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4901
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4914
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4918
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4922
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4931
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4935
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4939
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4943
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4947
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4956
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4965
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4971
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4975
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4991
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5025
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5051
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5063
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5107
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5124
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5139
		{
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5145
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5154
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5242
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5285
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5317
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5326
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5343
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5470
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5504
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5512
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5523
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5532
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5541
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5549
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5559
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5567
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5575
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5599
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5618
		{
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5620
		{
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5660
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5693
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5703
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5718
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5726
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5730
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5734
		{
			yyLOCAL = tree.NewMaxValueExpr()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5738
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5742
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5746
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5751
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5756
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5762
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5770
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5774
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5781
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5785
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5803
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5807
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5811
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5815
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5819
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5829
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5835
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5839
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5846
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5850
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5854
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5912
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5925
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5930
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5934
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5938
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5942
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5974
		{
			yyLOCAL = tree.NewParamExpr(yyp)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5980
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5991
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5996
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6014
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6026
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6051
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6103
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6116
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6129
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6155
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6183
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6206
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6243
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6320
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6335
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6355
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6375
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6404
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6443
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6455
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6467
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6527
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6602
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6607
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6613
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6620
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6624
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6629
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6633
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6645
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6652
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6668
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6675
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6695
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6699
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6705
		{
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6707
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6717
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6721
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
